{"version":3,"sources":["plus-icon.svg","minus-icon.svg","components/TransparentFab.js","components/ZoomBar.js","components/RotationControl.js","components/MandelbrotRenderer.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","plus_icon_ref2","react_default","a","createElement","d","plus_icon_SvgPlusIcon","_ref","svgRef","props","width","height","fillRule","clipRule","ref","ForwardRef","forwardRef","__webpack_require__","p","minus_icon_extends","minus_icon_objectWithoutProperties","minus_icon_objectWithoutPropertiesLoose","minus_icon_ref2","minus_icon_SvgMinusIcon","minus_icon_ForwardRef","TransparentFab","children","objectWithoutProperties","Fab","style","backgroundColor","boxShadow","ZoomBar","_useSpring","useSpring","zoom","config","friction","tension","_useSpring2","slicedToArray","setZoom","zoomClick","dir","z","Math","sign","value","clamp","display","Paper","borderRadius","maxHeight","margin","flexDirection","justifyContent","onClick","c","position","ZoomBarFab","diameter","zoomControl","minZoom","maxZoom","_useSpring3","y","_useSpring4","set","_useState","useState","_useState2","gestureDown","setGestureDown","_useState3","_useState4","zoomMult","setZoomMult","React","useRef","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","pow","bind","useDrag","_ref2","down","_ref2$movement","movement","event","first","last","preventDefault","clampY","abs","passive","capture","domTarget","web","div","transform","interpolate","concat","marginLeft","marginTop","top","left","zIndex","e","getValue","Typography","color","span","toFixed","RotationControl","theta","itheta","prevTheta","revs","dt","_useSpring2$","elemProps","x","elemCenter","setElemCenter","_ref$xy","xy","_ref$initial","initial","ix","iy","_ref$previous","previous","_ref$memo","memo","cx","cy","atan2","PI","_elemCenter","newTheta","el","r","getBoundingClientRect","t","userSelect","MandelbrotRenderer","touchTarget","testTouchTarget","canvas","bounds","maxI","setMaxI","ctx","setCtx","dx","dy","grid","setGrid","linspace","start","stop","cardinality","step","_","range","clearCanvas","clearRect","fillProcAsync","console","log","Promise","resolve","_bounds$x","xl","xr","_bounds$y","yb","yt","fillStyle","forEach","re","im","Complex","ZERO","draw","iter","mul","add","fillRect","pos","d_pos","zoom_test","mass","_useSpring4$","setTestTouchGridPos","_useSpring5","theta_test","last_pointer_angle","_useSpring6","_useSpring6$","setTestTouchGridTheta","testTouchBind","useGesture","onPinchStart","onPinch","_ref3","_ref3$offset","offset","_ref3$movement","_ref3$vdva","vdva","va","_ref3$memo","immediate","velocity","decay","onPinchEnd","_ref4","_ref4$vdva","onDrag","_ref5","direction","_ref5$memo","scale","_ref6","_ref6$movement","mx","my","_map","map","_map2","_useState5","_useState6","ptime","setPtime","_useState7","_useState8","ptime2","setPtime2","_useState9","_useState10","ptime3","setPtime3","getContext","className","alt","canvasSize","_ref7","_ref8","_ref9","_ref10","src","maxWidth","Button","variant","t0","performance","now","xs","ys","fillProc","t1","lsRe","lsIm","push","fillProcFast","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Slider","defaultValue","valueLabelDisplay","min","max","onChange","v","App","react","Grid","container","justify","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0bddf5aa.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M11 11v-11h1v11h11v1h-11v11h-1v-11h-11v-1h11z\"\n});\n\nvar SvgPlusIcon = function SvgPlusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-icon.e4581c1a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 12v1h23v-1h-23z\"\n});\n\nvar SvgMinusIcon = function SvgMinusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMinusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/minus-icon.8bace023.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nexport default function TransparentFab(props) {\r\n  const { children, ...p } = props;\r\n  return (\r\n      <Fab style={{\r\n        backgroundColor: \"transparent\",\r\n        boxShadow: \"none\",\r\n      }} {...p} >\r\n        {children}\r\n      </Fab>\r\n  )\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Paper, Fab, Typography } from '@material-ui/core';\r\nimport { ReactComponent as PlusIcon } from '../plus-icon.svg';\r\nimport { ReactComponent as MinusIcon } from '../minus-icon.svg';\r\nimport TransparentFab from \"./TransparentFab\";\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { useDrag } from 'react-use-gesture';\r\nimport { clamp } from 'lodash';\r\n\r\nexport default function ZoomBar(props) {\r\n  let fabSize = 70;\r\n  let maxHeight = 240;\r\n  let [minZoom, maxZoom] = [0.01, 1000]\r\n  // const [zoom, setZoom] = useState(100) // useSpring(() => ({ zoom: 100 }));\r\n  const [{ zoom }, setZoom] = useSpring(() => ({ zoom: 100, config: {\r\n    friction: 50, \r\n    tension: 600,\r\n  }}));\r\n\r\n  const zoomClick = dir => {\r\n    // zoom in a particular direction\r\n    const z = Math.sign(dir) * (1e-1 * zoom.value + 1);\r\n    setZoom({ zoom: clamp(zoom.value + z, minZoom, maxZoom) });\r\n  }\r\n\r\n  return (\r\n    <div style={{\r\n        width: fabSize,\r\n        display: \"flex\"\r\n      }}>\r\n        <Paper style={{\r\n          borderRadius: \"5em\",\r\n          maxHeight: maxHeight,\r\n          margin: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column-reverse\",\r\n          justifyContent: \"space-between\",\r\n        }}>\r\n          <TransparentFab onClick={c => zoomClick(-1)}>\r\n            <MinusIcon />\r\n          </TransparentFab>\r\n          <div style={{\r\n            height: fabSize,\r\n            position: \"relative\",\r\n          }}>\r\n            <ZoomBarFab \r\n              diameter={fabSize} \r\n              zoom={zoom} \r\n              zoomControl={setZoom} \r\n              minZoom={minZoom}\r\n              maxZoom={maxZoom}\r\n            />\r\n          </div>\r\n          <TransparentFab onClick={c => zoomClick(1)}>\r\n            <PlusIcon />\r\n          </TransparentFab>\r\n        </Paper>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport function ZoomBarFab(props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: {\r\n     friction: 30, \r\n     tension: 400,\r\n     clamp: true,\r\n  }}))\r\n  \r\n  const [zoom, setZoom] = [props.zoom, props.zoomControl];\r\n  \r\n  const [gestureDown, setGestureDown] = useState(false);\r\n  const [zoomMult, setZoomMult] = useState(0);\r\n  const ref = React.useRef(null);\r\n  \r\n  const reset = () => {\r\n    setZoom({ zoom: 100 });\r\n  }\r\n\r\n  // https://upmostly.com/tutorials/setinterval-in-react-components-using-hooks\r\n  function useInterval(callback, delay) {\r\n    const savedCallback = useRef();\r\n  \r\n    useEffect(() => {\r\n      savedCallback.current = callback;\r\n    });\r\n  \r\n    useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  }\r\n\r\n  // determine speed to zoom at based on distance from center of the control\r\n  // updates zoom every 50ms based on the multiplier\r\n  useInterval(() => {\r\n    const z = clamp(zoom.value + 2 * 3e-5 * (zoom.value ** 0.75 + 1) * zoomMult, props.minZoom, props.maxZoom)\r\n    setZoom({ zoom: z });\r\n  }, gestureDown ? 50 : null);\r\n\r\n  const bind = useDrag(({ down, movement: [x, y], event, first, last }) => {\r\n    // only prevent default between first and last event\r\n    // first: prevents browser events\r\n    // last: allows buttons to activate and ripple\r\n    (!first && !last) && event.preventDefault();\r\n    \r\n    // tell zoom listener if drag is happening\r\n    setGestureDown(down);\r\n    \r\n    const limit = 80;\r\n    const clampY = clamp(y, -limit, limit)\r\n    \r\n    setZoomMult(down ? -Math.sign(clampY) * Math.abs(clampY / 10)**4 : 0)\r\n    set({ y: down ? clampY : 0 })\r\n    \r\n  }, { event: { passive: false, capture: false }, domTarget: ref })\r\n  \r\n  React.useEffect(bind, [bind])\r\n\r\n  return (\r\n    <animated.div \r\n      ref={ref}\r\n      style={{\r\n        transform: y.interpolate(y => `translate3D(0, ${y}px, 0)`),\r\n        borderRadius: '50rem',\r\n        width: props.diameter,\r\n        height: props.diameter,\r\n\r\n        marginLeft: -props.diameter/2,\r\n        marginTop: -props.diameter/2,\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        position: \"absolute\",\r\n        zIndex: 1,\r\n      }} \r\n      >\r\n      <Fab \r\n        onClick={ e => {\r\n            // if click registered and fab not moved, trigger reset\r\n            if (y.getValue() === 0) { reset(); }\r\n          }\r\n        }\r\n        style={{\r\n          backgroundColor: \"#2196f3\",\r\n          width: props.diameter,\r\n          height: props.diameter,\r\n        }}>\r\n        <Typography style={{ color: \"#fff\" }}>\r\n          <animated.span>{zoom.interpolate(z => z.toFixed(1))}</animated.span>%\r\n        </Typography>\r\n      </Fab>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Paper, Typography, Fab } from '@material-ui/core';\r\nimport { animated, useSpring } from 'react-spring';\r\nimport { useDrag } from 'react-use-gesture';\r\n\r\n\r\nexport default function RotationControl() {\r\n\r\n  const [{ theta, itheta, prevTheta, revs, dt }, set] = useSpring(() => ({\r\n    theta: 150,\r\n    itheta: 0,\r\n    prevTheta: 0,\r\n    revs: 0,\r\n    dt: 0,\r\n    // xy: [0, 0],\r\n  }))\r\n\r\n  const clampAngle = t => ((t + 360) % 360 + 360) % 360\r\n\r\n  var elemProps = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n  const [elemCenter, setElemCenter] = useState([0, 0]);\r\n  // const [elemOffset, setElemOffset] = useState([0, 0]);\r\n\r\n  const outerSize = 160;\r\n  const innerSize = 70;\r\n\r\n  const bind = useDrag(({ xy: [x, y], initial: [ix, iy], previous: [px, py], first, last, memo = prevTheta.getValue() }) => {\r\n\r\n    if (last) {\r\n      return\r\n    }\r\n    if (first) {\r\n      const [cx, cy] = [elemProps.x + elemProps.width / 2, elemProps.y + elemProps.height / 2];\r\n      // console.log(cx, cy)\r\n      setElemCenter([cx, cy]);\r\n      // setElemOffset([ix - cx, iy - cy]);\r\n      set({\r\n        // remember initial angle\r\n        itheta: 360 * Math.atan2(-(ix - cx), iy - cy) / (Math.PI * 2),\r\n        // theta: theta.value + dt.value,\r\n        prevTheta: 0,\r\n        dt: 0\r\n      })\r\n      return;\r\n      //   set({ initialTheta: Math.atan2(iy - (pos.y + pos.height / 2), ix - (pos.x + pos.width / 2)) });\r\n    }\r\n    // set({ xy: [x, y] })\r\n\r\n    // console.log(ix, x, iy, y)\r\n    const [cx, cy] = elemCenter;\r\n\r\n    // const \r\n    // if (abs(theta.value + dt.value) >)\r\n    const newTheta = Math.atan2(-(x - cx), y - cy);\r\n    // const diff = newTheta - memo - ;\r\n    // console.log(prevTheta);\r\n    // if (Math.abs(diff) > Math.PI && Math.abs(prevTheta) > Math.PI / 2 - 0.5) {\r\n    //   console.log(diff);\r\n    //   set({\r\n    //     revs: revs.value + 1 * Math.sign(diff)\r\n    //   });\r\n    // }\r\n\r\n    const d = (360 * newTheta / (Math.PI * 2)) - itheta.getValue() - memo;\r\n\r\n    // set current angle, delta since last\r\n    set({\r\n      theta: theta.value + d,\r\n      prevTheta: newTheta,\r\n      // xy: [x, y] \r\n    });\r\n\r\n    // if (last) {\r\n    //   set({ \r\n    //     // theta: theta.value + dt,\r\n    //     // dt: 0 \r\n    //   })\r\n    // }\r\n\r\n    return memo;\r\n  })\r\n\r\n  return (\r\n    <div style={{\r\n      width: outerSize,\r\n      height: outerSize,\r\n      display: 'flex',\r\n      position: 'relative',\r\n    }}>\r\n      <animated.div style={{\r\n        width: 10,\r\n        height: 10,\r\n        backgroundColor: \"red\",\r\n        // transform: xy.interpolate((x, y) => `translate3d(${x - 5}px, ${y - 5}px, 0)`),\r\n        // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n      }} />\r\n      <Paper {...bind()}\r\n        ref={el => {\r\n          if (!el) return;\r\n          let r = el.getBoundingClientRect();\r\n          elemProps = { x: r.x, y: r.y, width: r.width, height: r.height }\r\n          // console.log(pos);\r\n        }}\r\n        style={{\r\n          borderRadius: '50rem',\r\n          width: outerSize,\r\n          height: outerSize,\r\n        }} >\r\n        {/* <div style={{\r\n          width: 10,\r\n          height: 10,\r\n          backgroundColor: \"aqua\",\r\n          transform: `translate3d(${- 5}px, ${- 5}px, 0)`,\r\n          // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          zIndex: 2,\r\n        }} /> */}\r\n        <animated.div\r\n          style={{\r\n            transform: theta.interpolate(t =>\r\n              `rotate(${t}deg)`\r\n              // ((360 + theta.value + dt) % 360)\r\n              // .toFixed(1)\r\n            ),\r\n            width: \"100%\",\r\n            height: \"100%\"\r\n          }}>\r\n          <Typography style={{ userSelect: \"none\" }}>hi</Typography>\r\n        </animated.div>\r\n      </Paper>\r\n\r\n      <Fab style={{\r\n        width: innerSize,\r\n        height: innerSize,\r\n        borderRadius: '50rem',\r\n        backgroundColor: \"#2196f3\",\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        margin: -innerSize / 2,\r\n      }}>\r\n        {/* <CardContent > */}\r\n        <Typography style={{\r\n          color: \"#fff\",\r\n          margin: 'auto',\r\n        }}>\r\n          <animated.span>{\r\n            theta.interpolate(t => t.toFixed(1))\r\n            // dt.interpolate(dt =>\r\n            //   clampAngle(theta.value + dt)\r\n            //     .toFixed(1)\r\n            // )\r\n          }</animated.span>° (<animated.span>{revs.interpolate(r => r)}</animated.span>)\r\n        </Typography>\r\n      </Fab>\r\n    </div>\r\n  )\r\n  // }\r\n};","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Complex from 'complex.js';\r\nimport _ from 'lodash';\r\nimport { Typography, Button, Slider } from \"@material-ui/core\";\r\n\r\nimport { useDrag, addV, subV, useGesture } from \"react-use-gesture\";\r\nimport { add, scale, dist } from 'vec-la'\r\n\r\nimport { useSpring, animated, interpolate, config } from \"react-spring\";\r\n// import { performance } from 'perf_hooks';\r\n\r\n\r\nexport default function MandelbrotRenderer(props) {\r\n\r\n  const touchTarget = useRef(null);\r\n  const testTouchTarget = useRef(null);\r\n  const canvas = useRef(null);\r\n  const canvasSize = 200;\r\n  const zoomFactor = 3;\r\n\r\n  const bounds = {x: [-1.5, 0.5], y: [-1, 1]};\r\n  const [maxI, setMaxI] = useState(23);\r\n\r\n  const [ctx, setCtx] = useState(null);\r\n\r\n  // const [toggle, setToggle] = useState(false);\r\n\r\n  // {x, y, dx, dy, theta, zoom}\r\n  const [grid, setGrid] = useSpring(() => ({\r\n    x: 0, \r\n    y: 0, \r\n\r\n    dx: 0,\r\n    dy: 0,\r\n\r\n    theta: 0,\r\n\r\n    zoom: 100,\r\n\r\n  }));\r\n\r\n  const trans1 = ({x, y, theta, zoom}) => \r\n    `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\r\n  ;\r\n\r\n  let gridVals = () => [Object.values(grid)];\r\n\r\n  // const [down, setDown] = useState(false);\r\n\r\n  function linspace(start, stop, cardinality) {\r\n    let step = (stop - start) / cardinality;\r\n    return _.range(start, stop, step);\r\n  }\r\n\r\n  const clearCanvas = ctx => {\r\n    let c = canvas.current;\r\n    ctx.clearRect(0, 0, c.width, c.height)\r\n  }\r\n\r\n  // const fillDiag = ctx => {\r\n  //   ctx.fillStyle = \"#444\";\r\n\r\n  //   for (let i = 0; i < canvasSize; i++) {\r\n  //     console.log(\"square: \" + i);\r\n  //     ctx.fillRect(i, i, 1, 1);\r\n  //   }\r\n  // }\r\n\r\n  const fillProcFast = ctx => {\r\n    let {x, y, zoom} = grid;\r\n    const [xl, xr] = [x.value-1, x.value+1];\r\n    const [yb, yt] = [y.value-1, y.value+1];\r\n\r\n    clearCanvas(ctx);\r\n    console.log(canvasSize / 2);\r\n    console.log(zoom);\r\n    console.log(yb);\r\n    // let l = linspace(yt, 0, canvasSize / 2)\r\n    // l.push(0);\r\n    // console.log(l);\r\n    ctx.fillStyle = \"#444\";\r\n\r\n    const lsRe = linspace(xl, xr, canvasSize);\r\n    const lsIm = linspace(yt, 0, canvasSize / 2);\r\n    lsIm.push(0);\r\n\r\n    lsRe.forEach((re, x) => {\r\n      // let l = \r\n      // l.push(0);\r\n      lsIm.forEach((im, y) => {\r\n        // y > 180 && console.log(y);\r\n        let c = Complex(re, im);\r\n        var z = Complex.ZERO;\r\n        var draw = true;\r\n        // console.log(z.toString());\r\n        for (let iter = 0; iter < maxI; iter++) {\r\n          z = z.mul(z).add(c);\r\n          if (z.abs() > 2) { draw = false; break; }\r\n        }\r\n        if (draw) {\r\n          ctx.fillRect(x, y, 1, 1);\r\n          if (y < canvasSize) {\r\n            ctx.fillRect(x, (canvasSize - y), 1, 1);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  };\r\n\r\n\r\n  const fillProc = ctx => {\r\n    let {x, y, dx, dy} = grid;\r\n    const [xs, ys] = [x.value + dx.value, y.value + dy.value]\r\n    const [xl, xr] = [xs-1, xs+1];\r\n    const [yb, yt] = [ys-1, ys+1];\r\n    linspace(xl, xr, canvasSize).forEach((re, x) => {\r\n      linspace(yb, yt, canvasSize).forEach((im, y) => {\r\n        let c = Complex(re, im);\r\n        var z = Complex.ZERO;\r\n        var draw = true;\r\n        // console.log(z.toString());\r\n        for (let iter = 0; iter < maxI; iter++) {\r\n          z = z.mul(z).add(c);\r\n          if (z.abs() > 2.0) { draw = false; break; }\r\n        }\r\n        ctx.fillStyle = draw ? \"#000\" : \"#fff\";\r\n        ctx.fillRect(x, y, 1, 1);\r\n      });\r\n    });\r\n  };\r\n\r\n  const fillProcAsync = ctx => {\r\n    console.log(\"entered fillproc\");\r\n    return new Promise(resolve => {\r\n      const [xl, xr] = bounds.x;\r\n      const [yb, yt] = bounds.y;\r\n      ctx.fillStyle = \"#ddd\";\r\n      linspace(xl, xr, canvasSize).forEach((re, x) => {\r\n        linspace(yb, yt, canvasSize).forEach((im, y) => {\r\n          let c = Complex(re, im);\r\n          var z = Complex.ZERO;\r\n          var draw = true;\r\n          // console.log(z.toString());\r\n          for (let iter = 0; iter < maxI; iter++) {\r\n            z = z.mul(z).add(c);\r\n            if (z.abs() > 2.0) { draw = false; break; }\r\n          }\r\n          if (draw) {\r\n            ctx.fillRect(x, y, 1, 1);\r\n          }\r\n        });\r\n      });\r\n      resolve();\r\n    })\r\n  };\r\n\r\n  // const toggleRect = ctx => {\r\n  //   const fill = () => ctx.fillRect(0, 0, 200, 200);\r\n  //   const clear = () => ctx.clearRect(0, 0, 200, 200);\r\n  //   toggle ? clear() : fill();\r\n  //   setToggle(!toggle);\r\n  //   // useEffect(() => {\r\n  //   //   console.log(\"click\");\r\n  //   // })\r\n  // }\r\n  // // \r\n  // const [{pos, d_pos, theta_test, zoom_test}, setTestTouchGrid] = useSpring(() => ({\r\n  //   // testTouchGrid: [\r\n  //   // // [x, y, dx, dy, theta, zoom]\r\n  //   pos: [0, 0],\r\n  //   d_pos: [0, 0],\r\n\r\n  //   theta_test: 0,\r\n\r\n  //   zoom_test: 100,\r\n  //   config: {mass: 1, tension: 100 , friction: 200},\r\n\r\n  // }));\r\n\r\n  const [{ pos, d_pos, zoom_test }, setTestTouchGridPos] = useSpring(() => ({\r\n    // testTouchGrid: [\r\n    // // [x, y, dx, dy, theta, zoom]\r\n    pos: [0, 0],\r\n    d_pos: [0, 0],\r\n\r\n    \r\n    zoom_test: 100,\r\n    config: {mass: 1, tension: 100 , friction: 200},\r\n\r\n  }));\r\n\r\n  const [{ theta_test, last_pointer_angle }, setTestTouchGridTheta] = useSpring(() => ({\r\n\r\n    theta_test: 0,\r\n    last_pointer_angle: 0,\r\n\r\n    config: {mass: 1, tension: 100 , friction: 200},\r\n\r\n  }))\r\n\r\n  // touch target bind for testing\r\n  const testTouchBind = useGesture({\r\n\r\n    onPinchStart: ({ event }) => {\r\n      event.preventDefault();\r\n    },\r\n    onPinch: ({ offset: [d, a], down, movement: [mx, my], vdva: [vd, va], last, memo = [theta_test.getValue(), last_pointer_angle.getValue()] }) => {\r\n      // alert(mx, my)\r\n      // let [theta, lpa] = memo\r\n      console.log(va);\r\n\r\n      setTestTouchGridTheta({ \r\n        zoom_test: d / 200, \r\n        // pos: [a, a],\r\n        theta_test: memo[0] + (a - memo[1]),\r\n        last_pointer_angle: a,\r\n        immediate: down, \r\n        config: { velocity: va, decay: true }\r\n      })\r\n      // if (last) {\r\n      //   setTestTouchGridTheta({ \r\n      //     // zoom_test: d / 200, \r\n      //     // // pos: [a, a],\r\n      //     theta_test: va,\r\n      //     // immediate: down, \r\n      //     config: { velocity: va, decay: true }\r\n      //   })\r\n      //   // memo += a\r\n      //   // return memo + a\r\n      // }\r\n\r\n      return memo\r\n    //   // alert(theta_test.getValue())\r\n    },\r\n    onPinchEnd: ({ vdva: [vd, va] }) => {\r\n      // alert(`va = ${va}`)\r\n      setTestTouchGridTheta({ \r\n        // zoom_test: d / 200, \r\n        // // pos: [a, a],\r\n        theta_test: va,\r\n        // immediate: down, \r\n        config: { velocity: va, decay: true }\r\n      })\r\n      // alert(theta_test.getValue())\r\n    },\r\n\r\n\r\n    // onDragStart: ({event}) => event.preventDefault(),\r\n\r\n    onDrag: ({ down, movement, velocity, direction, memo = pos.getValue()}) => {\r\n  \r\n      // change according to this formula:\r\n      // move (x, y) in the opposite direction of drag (pan with cursor)\r\n      // divide by canvas size to scale appropriately\r\n      // multiply by 2 to correct scaling on viewport\r\n      //                                    current img size\r\n      // const [dx, dy] = [mx, my].map(a => - a);\r\n      \r\n      // let [x, y, dx, dy, theta, zoom] = testTouchGrid;\r\n  \r\n      setTestTouchGridPos({ \r\n        pos: add(movement, memo), \r\n        immediate: down, \r\n        config: { velocity: scale(direction, velocity), decay: true }\r\n      })\r\n      return memo\r\n    },\r\n\r\n    // onDragEnd: () => {},\r\n\r\n  }, { event: { passive: false, capture: false }, domTarget: testTouchTarget })\r\n  // const testTouchBind = useDrag(({ movement, down, event, first, velocity, direction, memo = pos.getValue()}) => {\r\n  //   !first && event.preventDefault();\r\n\r\n  //   // change according to this formula:\r\n  //   // move (x, y) in the opposite direction of drag (pan with cursor)\r\n  //   // divide by canvas size to scale appropriately\r\n  //   // multiply by 2 to correct scaling on viewport\r\n  //   //                                    current img size\r\n  //   // const [dx, dy] = [mx, my].map(a => - a);\r\n    \r\n  //   // let [x, y, dx, dy, theta, zoom] = testTouchGrid;\r\n\r\n  //   setTestTouchGrid({ \r\n  //     pos: add(movement, memo), \r\n  //     immediate: down, \r\n  //     config: { velocity: scale(direction, velocity), decay: true }\r\n  //   })\r\n\r\n    \r\n  //   // if (last) {\r\n  //   //   // let [vx, vy] = vxvy //.map(v => _.clamp(v, -8, 8));\r\n  //   //   // // vy = _.clamp(vy, -8, 8);\r\n  //   //   // // extrapolate from last angle\r\n  //   //   // let [x, y] = pos.getValue()\r\n  //   //   // console.log(x, y)\r\n  //   //   // console.log(mx, my)\r\n  //   //   // console.log(vxvy)\r\n  //   //   setTestTouchGrid({\r\n  //   //     pos: addV(memo, movement),\r\n  //   //     d_pos: [0, 0],\r\n  //   //     // immediate: false,\r\n\r\n  //   //       // 0,\r\n  //   //       // 0,\r\n  //   //     // theta: 0,\r\n  //   //     // ]\r\n  //   //     // y: y.value + dy,\r\n  //   //   });\r\n  //   //   // clearCanvas(ctx);\r\n  //   //   // fillProc(ctx);\r\n  //   // }\r\n  //   return memo\r\n\r\n  //   // ()down ? fillProcFast(ctx) : null;\r\n  // }, { event: { passive: false, capture: false }, domTarget: testTouchTarget });\r\n\r\n  useEffect(testTouchBind, [testTouchBind]);\r\n\r\n  // the current binding for the canvas movement\r\n  const bind = useDrag(({ movement: [mx, my], down, event, first, last }) => {\r\n    !first && event.preventDefault();\r\n\r\n    // change according to this formula:\r\n    // move (x, y) in the opposite direction of drag (pan with cursor)\r\n    // divide by canvas size to scale appropriately\r\n    // multiply by 2 to correct scaling on viewport\r\n    const [dx, dy] = [mx, my].map(a => -2 * a / (canvasSize * zoomFactor));\r\n    \r\n    setGrid({\r\n      dx: dx, \r\n      dy: dy,\r\n    });\r\n\r\n    // setDown(down);\r\n    let {x, y} = grid;\r\n\r\n    if (last) {\r\n      setGrid({\r\n        x: x.value + dx,\r\n        y: y.value + dy,\r\n        \r\n        dx: 0,\r\n        dy: 0,\r\n      });\r\n      // clearCanvas(ctx);\r\n      // fillProc(ctx);\r\n    }\r\n\r\n    // ()down ? fillProcFast(ctx) : null;\r\n  }, { event: { passive: false, capture: false }, domTarget: touchTarget });\r\n\r\n  useEffect(bind, [bind]);\r\n\r\n  const [ptime, setPtime] = useState(0);\r\n  const [ptime2, setPtime2] = useState(0);\r\n  const [ptime3, setPtime3] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"canvas loaded\");\r\n    const ctx = canvas.current.getContext(\"2d\");\r\n    setCtx(ctx);\r\n    \r\n    // if(!down) {\r\n    //   clearCanvas(ctx)\r\n    //   fillProc(ctx)\r\n    // }\r\n    // canvas.current.ready(() => {\r\n    // fillProcFast(ctx);\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div \r\n      className=\"fullSize\" \r\n      // style={{\r\n      //   width: \"100%\",\r\n      //   height: \"100%\"\r\n      // }} \r\n      {...props}\r\n      ref={touchTarget}\r\n    >\r\n      <animated.canvas \r\n        id=\"mandelbrot\" \r\n        // className=\"fullSize\"\r\n        // width={window.innerWidth}\r\n        // height={window.innerHeight}\r\n        width={canvasSize}\r\n        height={canvasSize}\r\n        alt={grid.x.interpolate(d => grid.x.value + d)}\r\n        style= {{\r\n          width: canvasSize * zoomFactor,\r\n          height: canvasSize * zoomFactor,\r\n          transform: interpolate([pos], ([x, y]) =>\r\n            `matrix3d(\r\n              1, 0, 0, 0,\r\n              0, 1, 0, 0,\r\n              0, 0, 1, 0,\r\n              0, 0, 0, 1\r\n            )`\r\n          ),\r\n        }}\r\n        ref={canvas} \r\n      />\r\n\r\n      <animated.div\r\n        id=\"touch-test\"\r\n        ref={testTouchTarget}\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          width: 500,\r\n          height: 500,\r\n          // transform: theta_test.interpolate(t => \r\n          //   `rotateZ(${t}deg)`  \r\n          // )\r\n          transform: interpolate([pos, theta_test, zoom_test], ([x, y], t, z) =>\r\n          // transform: pos.interpolate((x, y) =>\r\n            `\r\n            translate(${x}px, ${y}px)\r\n            rotate(${t}deg)\r\n            scale(${z/100})\r\n            `\r\n            // `matrix3d(\r\n            //   1, 0, 0, 0,\r\n            //   0, 1, 0, 0,\r\n            //   0, 0, 1, 0,\r\n            //   ${x}, ${y}, 0, 1\r\n            // )`\r\n          ),\r\n        }}\r\n      >\r\n        <div style={{\r\n          display: 'flex-column',\r\n          position: \"relative\",\r\n          // height: 0,\r\n        }}>\r\n          <Typography>\r\n            pos: <animated.span>{pos.interpolate((x, y) => `x=${x.toFixed(3)}, y=${y.toFixed(3)}`)}</animated.span>; \r\n            theta = <animated.span>{theta_test.interpolate(t => t.toFixed(3))}</animated.span>,\r\n            {/* zoom = {zoom_test.getValue()} */}\r\n          </Typography>\r\n          <img \r\n            src={\"https://media.stockinthechannel.com/pic/4AGEj7MMZkuSUvh25OpLUw.c-r.jpg\"}\r\n            style={{\r\n              maxWidth: '100%',\r\n              maxHeight: '100%',\r\n              // position: 'relative',\r\n            }}\r\n          />\r\n        </div>\r\n      </animated.div>\r\n\r\n      <Typography>\r\n        theta: <animated.span>{theta_test.interpolate(t => t)}</animated.span>, \r\n        x: <animated.span>{grid.dx.interpolate(d => (grid.x.value + d).toFixed(3))}</animated.span>, \r\n        y: <animated.span>{grid.dy.interpolate(d => (grid.y.value + d).toFixed(3))}</animated.span>\r\n      </Typography>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={e => {\r\n          let t0 = performance.now();\r\n          fillProc(ctx);\r\n          let t1 = performance.now()\r\n          setPtime(t1 - t0);\r\n        }}>{ptime.toFixed(2)}</Button>\r\n\r\n      <Button variant=\"contained\" color=\"primary\" onClick={e => {\r\n          let t0 = performance.now();\r\n          fillProcFast(ctx);\r\n          let t1 = performance.now()\r\n          setPtime2(t1 - t0);\r\n        }\r\n      }>{ptime2.toFixed(2)}</Button>\r\n      \r\n      <Button variant=\"contained\" color=\"secondary\" onClick={e => async function () {\r\n          let t0 = performance.now();\r\n          await fillProcAsync(ctx);\r\n          let t1 = performance.now()\r\n          setPtime3(t1 - t0);\r\n        }()\r\n      }>{ptime3.toFixed(2)}</Button>\r\n\r\n      <Button variant=\"outlined\" onClick={e => clearCanvas(ctx)}>clear</Button>\r\n\r\n      <hr />\r\n\r\n      <Slider\r\n        defaultValue={maxI}\r\n        valueLabelDisplay=\"on\"\r\n        step={1}\r\n        min={1}\r\n        max={100}\r\n        style={{ \r\n          width: 200,\r\n          margin: 30,\r\n        }}\r\n        onChange={ (e, v) => setMaxI(v) }\r\n      />\r\n    </div>\r\n  )\r\n}","import React, { Fragment } from 'react';\r\nimport './App.css';\r\nimport { Grid } from '@material-ui/core';\r\nimport ZoomBar, { } from './components/ZoomBar';\r\nimport RotationControl from './components/RotationControl';\r\n\r\nimport 'typeface-roboto';\r\nimport MandelbrotRenderer from './components/MandelbrotRenderer.jsx';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Fragment>\r\n      <MandelbrotRenderer\r\n        style={{\r\n          position: 'absolute',\r\n          zIndex: 0,\r\n        }}\r\n      />\r\n      <Grid\r\n        className=\"App\"\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-around\"\r\n        alignItems=\"center\"\r\n        style={{\r\n          width: '100%',\r\n          height: '100%',\r\n          zIndex: 1,\r\n        }}\r\n      >\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-end\"\r\n          alignItems=\"center\">\r\n          <ZoomBar />\r\n        </Grid>\r\n        <RotationControl />\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}