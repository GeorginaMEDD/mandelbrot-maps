{"version":3,"sources":["plus-icon.svg","minus-icon.svg","components/TransparentFab.js","components/ZoomBar.js","components/RotationControl.js","components/MandelbrotRenderer.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","plus_icon_ref2","react_default","a","createElement","d","plus_icon_SvgPlusIcon","_ref","svgRef","props","width","height","fillRule","clipRule","ref","ForwardRef","forwardRef","__webpack_require__","p","minus_icon_extends","minus_icon_objectWithoutProperties","minus_icon_objectWithoutPropertiesLoose","minus_icon_ref2","minus_icon_SvgMinusIcon","minus_icon_ForwardRef","TransparentFab","children","objectWithoutProperties","Fab","style","backgroundColor","boxShadow","ZoomBar","_useSpring","useSpring","zoom","config","friction","tension","_useSpring2","slicedToArray","setZoom","zoomClick","dir","z","Math","sign","value","clamp","display","Paper","borderRadius","maxHeight","margin","flexDirection","justifyContent","onClick","c","position","ZoomBarFab","diameter","zoomControl","minZoom","maxZoom","_useSpring3","y","_useSpring4","set","_useState","useState","_useState2","gestureDown","setGestureDown","_useState3","_useState4","zoomMult","setZoomMult","React","useRef","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","pow","bind","useDrag","_ref2","down","_ref2$movement","movement","event","first","last","preventDefault","clampY","abs","passive","capture","domTarget","web","div","transform","interpolate","concat","marginLeft","marginTop","top","left","zIndex","e","getValue","Typography","color","span","toFixed","RotationControl","theta","itheta","prevTheta","revs","dt","_useSpring2$","elemProps","x","elemCenter","setElemCenter","_ref$xy","xy","_ref$initial","initial","ix","iy","_ref$previous","previous","_ref$memo","memo","cx","cy","atan2","PI","_elemCenter","newTheta","el","r","getBoundingClientRect","t","userSelect","MandelbrotRenderer","touchTarget","testTouchTarget","canvas","bounds","maxI","setMaxI","ctx","setCtx","dx","dy","grid","setGrid","linspace","start","stop","cardinality","step","_","range","clearCanvas","clearRect","fillProcAsync","console","log","Promise","resolve","_bounds$x","xl","xr","_bounds$y","yb","yt","fillStyle","forEach","re","im","Complex","ZERO","draw","iter","mul","add","fillRect","pos","d_pos","mass","setTestTouchGridPos","_useSpring5","theta_test","last_pointer_angle","zoom_test","last_pointer_dist","_useSpring6","_useSpring6$","setTestTouchGridTheta","testTouchBind","useGesture","onPinchStart","onPinch","_ref2$offset","offset","_ref2$vdva","vdva","va","_ref2$memo","_memo","lpa","zt","lpd","d_rel","immediate","velocity","decay","onPinchEnd","_ref3","_ref3$vdva","onDrag","_ref4","direction","_ref4$memo","scale","_ref5","_ref5$movement","mx","my","_map","map","_map2","_useState5","_useState6","ptime","setPtime","_useState7","_useState8","ptime2","setPtime2","_useState9","_useState10","ptime3","setPtime3","getContext","className","alt","canvasSize","_ref6","_ref7","_ref8","_ref9","src","maxWidth","Button","variant","t0","performance","now","xs","ys","fillProc","t1","lsRe","lsIm","push","fillProcFast","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","Slider","defaultValue","valueLabelDisplay","min","max","onChange","v","App","react","Grid","container","justify","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wQAAA,SAAAA,IAAmR,OAA9PA,EAAAC,OAAAC,QAAA,SAAAC,GAAgD,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkBS,MAAAC,KAAAR,WAEnR,SAAAS,EAAAP,EAAAQ,GAAqD,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAAI,EAAAQ,GAA0D,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAF9MgB,CAAAZ,EAAAQ,GAA0E,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIoB,EAEJC,EAAAC,EAAKC,cAAA,QACLC,EAAA,kDAGIC,EAAW,SAAAC,GACf,IAAAC,EAAAD,EAAAC,OACAC,EAAAjB,EAAAe,EAAA,YAEA,OAASL,EAAAC,EAAKC,cAAA,MAAA1B,EAAA,CACdgC,MAAA,GACAC,OAAA,GACAC,SAAA,UACAC,SAAA,UACAC,IAAAN,GACGC,GAAUR,IAGbc,EAAiBb,EAAAC,EAAKa,WAAA,SAAAP,EAAAK,GACtB,OAASZ,EAAAC,EAAKC,cAAeE,EAAW5B,EAAA,CACxC8B,OAAAM,GACGL,MAEYQ,EAAAC,EChCf,SAASC,IAA0Q,OAA7PA,EAAQxC,OAAAC,QAAA,SAAAC,GAAuC,QAAAC,EAAA,EAAgBA,EAAAC,UAAAC,OAAsBF,IAAA,CAAO,IAAAG,EAAAF,UAAAD,GAA2B,QAAAI,KAAAD,EAA0BN,OAAAQ,UAAAC,eAAAC,KAAAJ,EAAAC,KAAyDL,EAAAK,GAAAD,EAAAC,IAAiC,OAAAL,IAAkCS,MAAAC,KAAAR,WAEnS,SAASqC,EAAwBnC,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAA8DC,EAAAJ,EAA9DD,EAEpF,SAAsCI,EAAAQ,GAAoB,SAAAR,EAAA,SAA+B,IAAuDC,EAAAJ,EAAvDD,EAAA,GAAiBa,EAAAf,OAAAgB,KAAAV,GAAkD,IAAAH,EAAA,EAAYA,EAAAY,EAAAV,OAAuBF,IAAOI,EAAAQ,EAAAZ,GAAqBW,EAAAG,QAAAV,IAAA,IAA0CL,EAAAK,GAAAD,EAAAC,IAA6B,OAAAL,EAFhMwC,CAA6BpC,EAAAQ,GAA+B,GAAAd,OAAAmB,sBAAA,CAAoC,IAAAC,EAAApB,OAAAmB,sBAAAb,GAA6D,IAAAH,EAAA,EAAYA,EAAAiB,EAAAf,OAA6BF,IAAOI,EAAAa,EAAAjB,GAA2BW,EAAAG,QAAAV,IAAA,GAA0CP,OAAAQ,UAAAa,qBAAAX,KAAAJ,EAAAC,KAAwEL,EAAAK,GAAAD,EAAAC,IAA+B,OAAAL,EAM3d,IAAIyC,EAEJpB,EAAAC,EAAKC,cAAA,QACLC,EAAA,uBAGIkB,EAAY,SAAAhB,GAChB,IAAAC,EAAAD,EAAAC,OACAC,EAAcW,EAAwBb,EAAA,YAEtC,OAASL,EAAAC,EAAKC,cAAA,MAAsBe,EAAQ,CAC5CT,MAAA,GACAC,OAAA,GACAC,SAAA,UACAC,SAAA,UACAC,IAAAN,GACGC,GAAUa,IAGTE,EAAatB,EAAAC,EAAKa,WAAA,SAAAP,EAAAK,GACtB,OAASZ,EAAAC,EAAKC,cAAemB,EAAcJ,EAAQ,CACnDX,OAAAM,GACGL,SAEYQ,EAAAC,SC7BA,SAASO,EAAehB,GAAO,IACpCiB,EAAmBjB,EAAnBiB,SAAaR,EADuBvC,OAAAgD,EAAA,EAAAhD,CACjB8B,EADiB,cAE5C,OACIP,EAAAC,EAAAC,cAACwB,EAAA,EAADjD,OAAAC,OAAA,CAAKiD,MAAO,CACVC,gBAAiB,cACjBC,UAAW,SACNb,GACJQ,uCCDM,SAASM,EAAQvB,GAC9B,IADqCwB,EAKTC,YAAU,iBAAO,CAAEC,KAAM,IAAKC,OAAQ,CAChEC,SAAU,GACVC,QAAS,QAP0BC,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAsD,EAAA,GAK5BE,EAL4BI,EAAA,GAK5BJ,KAAQM,EALoBF,EAAA,GAU/BG,EAAY,SAAAC,GAEhB,IAAMC,EAAIC,KAAKC,KAAKH,IAAQ,GAAOR,EAAKY,MAAQ,GAChDN,EAAQ,CAAEN,KAAMa,gBAAMb,EAAKY,MAAQH,EAVX,IAAM,QAahC,OACE1C,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CACRnB,MAjBQ,GAkBRuC,QAAS,SAET/C,EAAAC,EAAAC,cAAC8C,EAAA,EAAD,CAAOrB,MAAO,CACZsB,aAAc,MACdC,UArBQ,IAsBRC,OAAQ,OACRJ,QAAS,OACTK,cAAe,iBACfC,eAAgB,kBAEhBrD,EAAAC,EAAAC,cAACqB,EAAD,CAAgB+B,QAAS,SAAAC,GAAC,OAAIf,GAAW,KACvCxC,EAAAC,EAAAC,cAACoB,EAAD,OAEFtB,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CACVlB,OAhCI,GAiCJ+C,SAAU,aAEVxD,EAAAC,EAAAC,cAACuD,EAAD,CACEC,SApCE,GAqCFzB,KAAMA,EACN0B,YAAapB,EACbqB,QArCc,IAsCdC,QAtCoB,OAyCxB7D,EAAAC,EAAAC,cAACqB,EAAD,CAAgB+B,QAAS,SAAAC,GAAC,OAAIf,EAAU,KACtCxC,EAAAC,EAAAC,cAACW,EAAD,SAOL,SAAS4C,EAAWlD,GAAO,IAAAuD,EACX9B,YAAU,iBAAO,CAAE+B,EAAG,EAAG7B,OAAQ,CACnDC,SAAU,GACVC,QAAS,IACTU,OAAO,MAJsBkB,EAAAvF,OAAA6D,EAAA,EAAA7D,CAAAqF,EAAA,GACvBC,EADuBC,EAAA,GACvBD,EAAKE,EADkBD,EAAA,GAAA3D,EAOR,CAACE,EAAM0B,KAAM1B,EAAMoD,aAApC1B,EAPyB5B,EAAA,GAOnBkC,EAPmBlC,EAAA,GAAA6D,EASMC,oBAAS,GATfC,EAAA3F,OAAA6D,EAAA,EAAA7D,CAAAyF,EAAA,GASzBG,EATyBD,EAAA,GASZE,EATYF,EAAA,GAAAG,EAUAJ,mBAAS,GAVTK,EAAA/F,OAAA6D,EAAA,EAAA7D,CAAA8F,EAAA,GAUzBE,EAVyBD,EAAA,GAUfE,EAVeF,EAAA,GAW1B5D,EAAM+D,IAAMC,OAAO,OAOzB,SAAqBC,EAAUC,GAC7B,IAAMC,EAAgBH,mBAEtBI,oBAAU,WACRD,EAAcE,QAAUJ,IAG1BG,oBAAU,WAIR,GAAc,OAAVF,EAAgB,CAClB,IAAII,EAAKC,YAJX,WACEJ,EAAcE,WAGaH,GAC3B,OAAO,kBAAMM,cAAcF,MAE5B,CAACJ,IAKNO,CAAY,WACV,IAAM3C,EAAII,gBAAMb,EAAKY,MAAQ,MAAYF,KAAA2C,IAAArD,EAAKY,MAAS,KAAO,GAAK4B,EAAUlE,EAAMqD,QAASrD,EAAMsD,SAClGtB,EAAQ,CAAEN,KAAMS,KACf2B,EAAc,GAAK,MAEtB,IAAMkB,EAAOC,YAAQ,SAAAC,GAAoD,IAAjDC,EAAiDD,EAAjDC,KAAiDC,EAAAlH,OAAA6D,EAAA,EAAA7D,CAAAgH,EAA3CG,SAA2C,GAA7B7B,GAA6B4B,EAAA,GAAAA,EAAA,IAAzBE,EAAyBJ,EAAzBI,MAAOC,EAAkBL,EAAlBK,MAAOC,EAAWN,EAAXM,MAI1DD,IAAUC,GAASF,EAAMG,iBAG3B1B,EAAeoB,GAEf,IACMO,EAASnD,gBAAMiB,GADP,OAGdW,EAAYgB,GAAQ/C,KAAKC,KAAKqD,GAAXtD,KAAA2C,IAAqB3C,KAAKuD,IAAID,EAAS,IAAK,GAAI,GACnEhC,EAAI,CAAEF,EAAG2B,EAAOO,EAAS,KAExB,CAAEJ,MAAO,CAAEM,SAAS,EAAOC,SAAS,GAASC,UAAWzF,IAI3D,OAFA+D,IAAMK,UAAUO,EAAM,CAACA,IAGrBvF,EAAAC,EAAAC,cAACoG,EAAA,EAASC,IAAV,CACE3F,IAAKA,EACLe,MAAO,CACL6E,UAAWzC,EAAE0C,YAAY,SAAA1C,GAAC,wBAAA2C,OAAsB3C,EAAtB,YAC1Bd,aAAc,QACdzC,MAAOD,EAAMmD,SACbjD,OAAQF,EAAMmD,SAEdiD,YAAapG,EAAMmD,SAAS,EAC5BkD,WAAYrG,EAAMmD,SAAS,EAC3BmD,IAAK,MACLC,KAAM,MACNtD,SAAU,WACVuD,OAAQ,IAGV/G,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CACE4B,QAAU,SAAA0D,GAEe,IAAjBjD,EAAEkD,YApEd1E,EAAQ,CAAEN,KAAM,OAuEZN,MAAO,CACLC,gBAAiB,UACjBpB,MAAOD,EAAMmD,SACbjD,OAAQF,EAAMmD,WAEhB1D,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAYvF,MAAO,CAAEwF,MAAO,SAC1BnH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgBnF,EAAKwE,YAAY,SAAA/D,GAAC,OAAIA,EAAE2E,QAAQ,MADlD,OCjJO,SAASC,IAAkB,IAAAvF,EAEcC,YAAU,iBAAO,CACrEuF,MAAO,IACPC,OAAQ,EACRC,UAAW,EACXC,KAAM,EACNC,GAAI,KAPkCtF,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAsD,EAAA,GAAA6F,EAAAvF,EAAA,GAE/BkF,EAF+BK,EAE/BL,MAAOC,EAFwBI,EAExBJ,OAAQC,EAFgBG,EAEhBH,UAAWC,EAFKE,EAELF,KAAYzD,GAFP2D,EAECD,GAFDtF,EAAA,IAapCwF,EAAY,CAAEC,EAAG,EAAG/D,EAAG,EAAGvD,MAAO,EAAGC,OAAQ,GAbRyD,EAeJC,mBAAS,CAAC,EAAG,IAfTC,EAAA3F,OAAA6D,EAAA,EAAA7D,CAAAyF,EAAA,GAejC6D,EAfiC3D,EAAA,GAerB4D,EAfqB5D,EAAA,GAqBlCmB,EAAOC,YAAQ,SAAAnF,GAAqG,IAAA4H,EAAAxJ,OAAA6D,EAAA,EAAA7D,CAAA4B,EAAlG6H,GAAkG,GAA7FJ,EAA6FG,EAAA,GAA1FlE,EAA0FkE,EAAA,GAAAE,EAAA1J,OAAA6D,EAAA,EAAA7D,CAAA4B,EAAtF+H,QAAsF,GAA5EC,EAA4EF,EAAA,GAAxEG,EAAwEH,EAAA,GAAAI,EAAA9J,OAAA6D,EAAA,EAAA7D,CAAA4B,EAAnEmI,SAAmE,GAA/C1C,GAA+CyC,EAAA,GAAAA,EAAA,GAAAlI,EAA/CyF,OAAOC,EAAwC1F,EAAxC0F,KAAwC0C,EAAApI,EAAlCqI,YAAkC,IAAAD,EAA3BhB,EAAUR,WAAiBwB,EAExH,IAAI1C,EAAJ,CAGA,GAAID,EAAO,KACF6C,EAAWd,EAAUC,EAAID,EAAUrH,MAAQ,EAAvCoI,EAA0Cf,EAAU9D,EAAI8D,EAAUpH,OAAS,EAWtF,OATAuH,EAAc,CAACW,EAAIC,SAEnB3E,EAAI,CAEFuD,OAAQ,IAAM7E,KAAKkG,QAAQR,EAAKM,GAAKL,EAAKM,IAAiB,EAAVjG,KAAKmG,IAEtDrB,UAAW,EACXE,GAAI,IAfgH,IAAAoB,EAAAtK,OAAA6D,EAAA,EAAA7D,CAuBvGsJ,EAvBuG,GAuBjHY,EAvBiHI,EAAA,GAuB7GH,EAvB6GG,EAAA,GA2BlHC,EAAWrG,KAAKkG,QAAQf,EAAIa,GAAK5E,EAAI6E,GAUrCzI,EAAK,IAAM6I,GAAsB,EAAVrG,KAAKmG,IAAWtB,EAAOP,WAAayB,EAgBjE,OAbAzE,EAAI,CACFsD,MAAOA,EAAM1E,MAAQ1C,EACrBsH,UAAWuB,IAWNN,KAGT,OACE1I,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CACVnB,MA7Dc,IA8DdC,OA9Dc,IA+DdsC,QAAS,OACTS,SAAU,aAEVxD,EAAAC,EAAAC,cAACoG,EAAA,EAASC,IAAV,CAAc5E,MAAO,CACnBnB,MAAO,GACPC,OAAQ,GACRmB,gBAAiB,MAGjB4B,SAAU,QACVqD,IAAK,EACLC,KAAM,KAER9G,EAAAC,EAAAC,cAAC8C,EAAA,EAADvE,OAAAC,OAAA,GAAW6G,IAAX,CACE3E,IAAK,SAAAqI,GACH,GAAKA,EAAL,CACA,IAAIC,EAAID,EAAGE,wBACXtB,EAAY,CAAEC,EAAGoB,EAAEpB,EAAG/D,EAAGmF,EAAEnF,EAAGvD,MAAO0I,EAAE1I,MAAOC,OAAQyI,EAAEzI,UAG1DkB,MAAO,CACLsB,aAAc,QACdzC,MArFU,IAsFVC,OAtFU,OAmGZT,EAAAC,EAAAC,cAACoG,EAAA,EAASC,IAAV,CACE5E,MAAO,CACL6E,UAAWe,EAAMd,YAAY,SAAA2C,GAAC,gBAAA1C,OAClB0C,EADkB,UAK9B5I,MAAO,OACPC,OAAQ,SAEVT,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAYvF,MAAO,CAAE0H,WAAY,SAAjC,QAIJrJ,EAAAC,EAAAC,cAACwB,EAAA,EAAD,CAAKC,MAAO,CACVnB,MAjHY,GAkHZC,OAlHY,GAmHZwC,aAAc,QACdrB,gBAAiB,UACjBmB,QAAS,OACTS,SAAU,WACVsD,KAAM,MACND,IAAK,MACL1D,QAAQ,KAGRnD,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAYvF,MAAO,CACjBwF,MAAO,OACPhE,OAAQ,SAERnD,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KACEG,EAAMd,YAAY,SAAA2C,GAAC,OAAIA,EAAE/B,QAAQ,MALrC,SAUsBrH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgBM,EAAKjB,YAAY,SAAAyC,GAAC,OAAIA,KAV5D,mFCzIO,SAASI,EAAmB/I,GAEzC,IAAMgJ,EAAc3E,iBAAO,MACrB4E,EAAkB5E,iBAAO,MACzB6E,EAAS7E,iBAAO,MAIhB8E,EAAa,EAAE,IAAK,IAApBA,EAA6B,EAAE,EAAG,GARQxF,EASxBC,mBAAS,IATeC,EAAA3F,OAAA6D,EAAA,EAAA7D,CAAAyF,EAAA,GASzCyF,EATyCvF,EAAA,GASnCwF,EATmCxF,EAAA,GAAAG,EAW1BJ,mBAAS,MAXiBK,EAAA/F,OAAA6D,EAAA,EAAA7D,CAAA8F,EAAA,GAWzCsF,EAXyCrF,EAAA,GAWpCsF,EAXoCtF,EAAA,GAAAzC,EAgBxBC,YAAU,iBAAO,CACvC8F,EAAG,EACH/D,EAAG,EAEHgG,GAAI,EACJC,GAAI,EAEJzC,MAAO,EAEPtF,KAAM,OAzBwCI,EAAA5D,OAAA6D,EAAA,EAAA7D,CAAAsD,EAAA,GAgBzCkI,EAhByC5H,EAAA,GAgBnC6H,EAhBmC7H,EAAA,GAqChD,SAAS8H,EAASC,EAAOC,EAAMC,GAC7B,IAAIC,GAAQF,EAAOD,GAASE,EAC5B,OAAOE,IAAEC,MAAML,EAAOC,EAAME,GAG9B,IAAMG,EAAc,SAAAb,GAClB,IAAItG,EAAIkG,EAAOxE,QACf4E,EAAIc,UAAU,EAAG,EAAGpH,EAAE/C,MAAO+C,EAAE9C,SA2E3BmK,EAAgB,SAAAf,GAEpB,OADAgB,QAAQC,IAAI,oBACL,IAAIC,QAAQ,SAAAC,GAAW,IAAAC,EAAAxM,OAAA6D,EAAA,EAAA7D,CACXiL,EADW,GACrBwB,EADqBD,EAAA,GACjBE,EADiBF,EAAA,GAAAG,EAAA3M,OAAA6D,EAAA,EAAA7D,CAEXiL,EAFW,GAErB2B,EAFqBD,EAAA,GAEjBE,EAFiBF,EAAA,GAG5BvB,EAAI0B,UAAY,OAChBpB,EAASe,EAAIC,EAxHE,KAwHcK,QAAQ,SAACC,EAAI3D,GACxCqC,EAASkB,EAAIC,EAzHA,KAyHgBE,QAAQ,SAACE,EAAI3H,GAKxC,IAJA,IAAIR,EAAIoI,IAAQF,EAAIC,GAChBhJ,EAAIiJ,IAAQC,KACZC,GAAO,EAEFC,EAAO,EAAGA,EAAOnC,EAAMmC,IAE9B,IADApJ,EAAIA,EAAEqJ,IAAIrJ,GAAGsJ,IAAIzI,IACX2C,MAAQ,EAAK,CAAE2F,GAAO,EAAO,MAEjCA,GACFhC,EAAIoC,SAASnE,EAAG/D,EAAG,EAAG,OAI5BiH,OA5I4ClH,EAuKT9B,YAAU,iBAAO,CAGtDkK,IAAK,CAAC,EAAG,GACTC,MAAO,CAAC,EAAG,GAGXjK,OAAQ,CAACkK,KAAM,EAAGhK,QAAS,IAAMD,SAAU,QA9KG6B,EAAAvF,OAAA6D,EAAA,EAAA7D,CAAAqF,EAAA,GAuKvCoI,EAvKuClI,EAAA,GAuKvCkI,IAAOG,EAvKgCrI,EAAA,GAAAsI,EAkLkDtK,YAAU,iBAAO,CAEjHuK,WAAY,EACZC,mBAAoB,EAEpBC,UAAW,EACXC,kBAAmB,EAEnBxK,OAAQ,CAACkK,KAAM,EAAGhK,QAAS,IAAMD,SAAU,QA1LGwK,EAAAlO,OAAA6D,EAAA,EAAA7D,CAAA6N,EAAA,GAAAM,EAAAD,EAAA,GAkLvCJ,EAlLuCK,EAkLvCL,WAAYC,EAlL2BI,EAkL3BJ,mBAAoBC,EAlLOG,EAkLPH,UAAWC,EAlLJE,EAkLIF,kBAAqBG,EAlLzBF,EAAA,GA+L1CG,EAAgBC,YAAW,CAE/BC,aAAc,SAAA3M,GAAeA,EAAZwF,MACTG,kBAERiH,QAAS,SAAAxH,GAAuK,IAAAyH,EAAAzO,OAAA6D,EAAA,EAAA7D,CAAAgH,EAApK0H,OAAoK,GAA3JhN,EAA2J+M,EAAA,GAAxJjN,EAAwJiN,EAAA,GAApJxH,EAAoJD,EAApJC,KAAoJ0H,EAAA3O,OAAA6D,EAAA,EAAA7D,CAAAgH,EAA9I4H,KAA8I,GAAnIC,GAAmIF,EAAA,GAAAA,EAAA,IAAAG,GAAA9H,EAA9HM,KAA8HN,EAAxHiD,aAAwH,IAAA6E,EAAjH,CAAChB,EAAWtF,WAAYuF,EAAmBvF,WAAYwF,EAAUxF,WAAYyF,EAAkBzF,YAAkBsG,EAAAC,EAAA/O,OAAA6D,EAAA,EAAA7D,CAGlJiK,EAHkJ,GAGzKnB,EAHyKiG,EAAA,GAGlKC,EAHkKD,EAAA,GAG7JE,EAH6JF,EAAA,GAGzJG,EAHyJH,EAAA,GAI9K3C,QAAQC,IAAI3K,GACZ,IAAIyN,EAAQzN,EAAE,IAuBd,OArBA0M,EAAsB,CACpBJ,UAAWiB,GAAME,EAAQD,GACzBjB,kBAAmBkB,EAEnBrB,WAAYhF,GAAStH,EAAIwN,GACzBjB,mBAAoBvM,EACpB4N,UAAWnI,EACXxD,OAAQ,CAAE4L,SAAUR,EAAIS,OAAO,KAc1BrF,GAGTsF,WAAY,SAAAC,GAAwB,IAAAC,EAAAzP,OAAA6D,EAAA,EAAA7D,CAAAwP,EAArBZ,KAAqB,GAAVC,GAAUY,EAAA,GAAAA,EAAA,IAElCrB,EAAsB,CAGpBN,WAAYe,EAEZpL,OAAQ,CAAE4L,SAAUR,EAAIS,OAAO,MAQnCI,OAAQ,SAAAC,GAAmE,IAAhE1I,EAAgE0I,EAAhE1I,KAAME,EAA0DwI,EAA1DxI,SAAUkI,EAAgDM,EAAhDN,SAAUO,EAAsCD,EAAtCC,UAAsCC,EAAAF,EAA3B1F,YAA2B,IAAA4F,EAApBpC,EAAIjF,WAAgBqH,EAgBzE,OALAjC,EAAoB,CAClBH,IAAKF,cAAIpG,EAAU8C,GACnBmF,UAAWnI,EACXxD,OAAQ,CAAE4L,SAAUS,gBAAMF,EAAWP,GAAWC,OAAO,KAElDrF,IAKR,CAAE7C,MAAO,CAAEM,SAAS,EAAOC,SAAS,GAASC,UAAWmD,IA+C3DxE,oBAAU8H,EAAe,CAACA,IAG1B,IAAMvH,EAAOC,YAAQ,SAAAgJ,GAAsD,IAAAC,EAAAhQ,OAAA6D,EAAA,EAAA7D,CAAA+P,EAAnD5I,SAAmD,GAAxC8I,EAAwCD,EAAA,GAApCE,EAAoCF,EAAA,GAAzB5I,GAAyB2I,EAA/B9I,KAA+B8I,EAAzB3I,OAAOC,EAAkB0I,EAAlB1I,MAAOC,EAAWyI,EAAXzI,MAC7DD,GAASD,EAAMG,iBADyD,IAAA4I,EAOxD,CAACF,EAAIC,GAAIE,IAAI,SAAA5O,GAAC,OAAK,EAAIA,EAAL,MAPsC6O,EAAArQ,OAAA6D,EAAA,EAAA7D,CAAAmQ,EAAA,GAOlE7E,EAPkE+E,EAAA,GAO9D9E,EAP8D8E,EAAA,GASzE5E,EAAQ,CACNH,GAAIA,EACJC,GAAIA,IAXmE,IAepElC,EAAQmC,EAARnC,EAAG/D,EAAKkG,EAALlG,EAEJgC,GACFmE,EAAQ,CACNpC,EAAGA,EAAEjF,MAAQkH,EACbhG,EAAGA,EAAElB,MAAQmH,EAEbD,GAAI,EACJC,GAAI,KAOP,CAAEnE,MAAO,CAAEM,SAAS,EAAOC,SAAS,GAASC,UAAWkD,IAE3DvE,oBAAUO,EAAM,CAACA,IAzV+B,IAAAwJ,EA2VtB5K,mBAAS,GA3Va6K,EAAAvQ,OAAA6D,EAAA,EAAA7D,CAAAsQ,EAAA,GA2VzCE,EA3VyCD,EAAA,GA2VlCE,EA3VkCF,EAAA,GAAAG,EA4VpBhL,mBAAS,GA5VWiL,EAAA3Q,OAAA6D,EAAA,EAAA7D,CAAA0Q,EAAA,GA4VzCE,GA5VyCD,EAAA,GA4VjCE,GA5ViCF,EAAA,GAAAG,GA6VpBpL,mBAAS,GA7VWqL,GAAA/Q,OAAA6D,EAAA,EAAA7D,CAAA8Q,GAAA,GA6VzCE,GA7VyCD,GAAA,GA6VjCE,GA7ViCF,GAAA,GA6WhD,OAdAxK,oBAAU,WAER,IAAM6E,EAAMJ,EAAOxE,QAAQ0K,WAAW,MACtC7F,EAAOD,IAQN,IAID7J,EAAAC,EAAAC,cAAA,MAAAzB,OAAAC,OAAA,CACEkR,UAAU,YAKNrP,EANN,CAOEK,IAAK2I,IAELvJ,EAAAC,EAAAC,cAACoG,EAAA,EAASmD,OAAV,CACEvE,GAAG,aAIH1E,MAvXa,IAwXbC,OAxXa,IAyXboP,IAAK5F,EAAKnC,EAAErB,YAAY,SAAAtG,GAAC,OAAI8J,EAAKnC,EAAEjF,MAAQ1C,IAC5CwB,MAAQ,CACNnB,MAAOsP,IACPrP,OAAQqP,IACRtJ,UAAWC,YAAY,CAACyF,GAAM,SAAA6D,GAAA,IAAAC,EAAAvR,OAAA6D,EAAA,EAAA7D,CAAAsR,EAAA,GAAAC,EAAA,GAAAA,EAAA,kJAShCpP,IAAK6I,IAGPzJ,EAAAC,EAAAC,cAACoG,EAAA,EAASC,IAAV,CACErB,GAAG,aACHtE,IAAK4I,EACL7H,MAAO,CACL6B,SAAU,WACVqD,IAAK,EACLrG,MAAO,IACPC,OAAQ,IAIR+F,UAAWC,YAAY,CAACyF,EAAKK,EAAYE,GAAY,SAAAwD,EAAS7G,EAAG1G,GAAZ,IAAAwN,EAAAzR,OAAA6D,EAAA,EAAA7D,CAAAwR,EAAA,GAAEnI,EAAFoI,EAAA,GAAKnM,EAALmM,EAAA,oCAAAxJ,OAGvCoB,EAHuC,QAAApB,OAG/B3C,EAH+B,4BAAA2C,OAI1C0C,EAJ0C,4BAAA1C,OAK3ChE,EAL2C,uBAgBvD1C,EAAAC,EAAAC,cAAA,OAAKyB,MAAO,CACVoB,QAAS,cACTS,SAAU,aAGVxD,EAAAC,EAAAC,cAACgH,EAAA,EAAD,aACOlH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgB8E,EAAIzF,YAAY,SAACqB,EAAG/D,GAAJ,WAAA2C,OAAeoB,EAAET,QAAQ,GAAzB,QAAAX,OAAkC3C,EAAEsD,QAAQ,OADnF,aAEUrH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgBmF,EAAW9F,YAAY,SAAA2C,GAAC,OAAIA,EAAE/B,QAAQ,MAFhE,KAKArH,EAAAC,EAAAC,cAAA,OACEiQ,IAAK,wFACLxO,MAAO,CACLyO,SAAU,OACVlN,UAAW,YAOnBlD,EAAAC,EAAAC,cAACgH,EAAA,EAAD,eACSlH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgBmF,EAAW9F,YAAY,SAAA2C,GAAC,OAAIA,EAAE/B,QAAQ,MAD/D,WAEQrH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgBqF,EAAUhG,YAAY,SAAA/D,GAAC,OAAIA,EAAE2E,QAAQ,MAF7D,QAGKrH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgB6C,EAAKF,GAAGtD,YAAY,SAAAtG,GAAC,OAAK8J,EAAKnC,EAAEjF,MAAQ1C,GAAGkH,QAAQ,MAHzE,QAIKrH,EAAAC,EAAAC,cAACoG,EAAA,EAASc,KAAV,KAAgB6C,EAAKD,GAAGvD,YAAY,SAAAtG,GAAC,OAAK8J,EAAKlG,EAAElB,MAAQ1C,GAAGkH,QAAQ,OAEzErH,EAAAC,EAAAC,cAACmQ,EAAA,EAAD,CAAQC,QAAQ,YAAYnJ,MAAM,UAAU7D,QAAS,SAAA0D,GACjD,IAAIuJ,EAAKC,YAAYC,OAnWZ,SAAA5G,GAAO,IACjB/B,EAAgBmC,EAAhBnC,EAAG/D,EAAakG,EAAblG,EAAGgG,EAAUE,EAAVF,GAAIC,EAAMC,EAAND,GACR0G,EAAW5I,EAAEjF,MAAQkH,EAAGlH,MAApB8N,EAA2B5M,EAAElB,MAAQmH,EAAGnH,MAE5CwI,EAAWsF,EAAG,EAAVrF,EAAaqF,EAAG,EAC3BxG,EAFkBuG,EAAG,EAAGA,EAAG,EAhGV,KAkGYlF,QAAQ,SAACC,EAAI3D,GACxCqC,EAASkB,EAAIC,EAnGE,KAmGcE,QAAQ,SAACE,EAAI3H,GAKxC,IAJA,IAAIR,EAAIoI,IAAQF,EAAIC,GAChBhJ,EAAIiJ,IAAQC,KACZC,GAAO,EAEFC,EAAO,EAAGA,EAAOnC,EAAMmC,IAE9B,IADApJ,EAAIA,EAAEqJ,IAAIrJ,GAAGsJ,IAAIzI,IACX2C,MAAQ,EAAK,CAAE2F,GAAO,EAAO,MAErChC,EAAI0B,UAAYM,EAAO,OAAS,OAChChC,EAAIoC,SAASnE,EAAG/D,EAAG,EAAG,OAoVpB6M,CAAS/G,GACT,IAAIgH,EAAKL,YAAYC,MACrBvB,EAAS2B,EAAKN,KACZtB,EAAM5H,QAAQ,IAEpBrH,EAAAC,EAAAC,cAACmQ,EAAA,EAAD,CAAQC,QAAQ,YAAYnJ,MAAM,UAAU7D,QAAS,SAAA0D,GACjD,IAAIuJ,EAAKC,YAAYC,OApZR,SAAA5G,GAAO,IACrB/B,EAAcmC,EAAdnC,EAAG/D,EAAWkG,EAAXlG,EAAG9B,EAAQgI,EAARhI,KACJiJ,EAAWpD,EAAEjF,MAAM,EAAfsI,EAAkBrD,EAAEjF,MAAM,EAC9BwI,EAAWtH,EAAElB,MAAM,EAAfyI,EAAkBvH,EAAElB,MAAM,EAErC6H,EAAYb,GACZgB,QAAQC,IAAIgF,KACZjF,QAAQC,IAAI7I,GACZ4I,QAAQC,IAAIO,GAIZxB,EAAI0B,UAAY,OAEhB,IAAMuF,EAAO3G,EAASe,EAAIC,EAjET,KAkEX4F,EAAO5G,EAASmB,EAAI,EAAGwE,KAC7BiB,EAAKC,KAAK,GAEVF,EAAKtF,QAAQ,SAACC,EAAI3D,GAGhBiJ,EAAKvF,QAAQ,SAACE,EAAI3H,GAMhB,IAJA,IAAIR,EAAIoI,IAAQF,EAAIC,GAChBhJ,EAAIiJ,IAAQC,KACZC,GAAO,EAEFC,EAAO,EAAGA,EAAOnC,EAAMmC,IAE9B,IADApJ,EAAIA,EAAEqJ,IAAIrJ,GAAGsJ,IAAIzI,IACX2C,MAAQ,EAAG,CAAE2F,GAAO,EAAO,MAE/BA,IACFhC,EAAIoC,SAASnE,EAAG/D,EAAG,EAAG,GAClBA,EApFO,KAqFT8F,EAAIoC,SAASnE,EArFJ,IAqFqB/D,EAAI,EAAG,QAmXvCkN,CAAapH,GACb,IAAIgH,EAAKL,YAAYC,MACrBnB,GAAUuB,EAAKN,KAEhBlB,GAAOhI,QAAQ,IAElBrH,EAAAC,EAAAC,cAACmQ,EAAA,EAAD,CAAQC,QAAQ,YAAYnJ,MAAM,YAAY7D,QAAS,SAAA0D,GAAC,OAAIvI,OAAAyS,EAAA,EAAAzS,CAAA0S,EAAAlR,EAAAmR,KAAA,SAAAC,IAAA,IAAAd,EAAAM,EAAA,OAAAM,EAAAlR,EAAAqR,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACpDlB,EAAKC,YAAYC,MADmCc,EAAAE,KAAA,EAElD7G,EAAcf,GAFoC,OAGpDgH,EAAKL,YAAYC,MACrBf,GAAUmB,EAAKN,GAJyC,wBAAAgB,EAAAlH,SAAAgH,KAAA5S,KAMzDgR,GAAOpI,QAAQ,IAElBrH,EAAAC,EAAAC,cAACmQ,EAAA,EAAD,CAAQC,QAAQ,WAAWhN,QAAS,SAAA0D,GAAC,OAAI0D,EAAYb,KAArD,SAEA7J,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACwR,EAAA,EAAD,CACEC,aAAchI,EACdiI,kBAAkB,KAClBrH,KAAM,EACNsH,IAAK,EACLC,IAAK,IACLnQ,MAAO,CACLnB,MAAO,IACP2C,OAAQ,IAEV4O,SAAW,SAAC/K,EAAGgL,GAAJ,OAAUpI,EAAQoI,OCxctBC,MAnCf,WAEE,OACEjS,EAAAC,EAAAC,cAACgS,EAAA,SAAD,KACElS,EAAAC,EAAAC,cAACoJ,EAAD,CACE3H,MAAO,CACL6B,SAAU,WACVuD,OAAQ,KAGZ/G,EAAAC,EAAAC,cAACiS,EAAA,EAAD,CACEvC,UAAU,MACVwC,WAAS,EACT/D,UAAU,SACVgE,QAAQ,eACRC,WAAW,SACX3Q,MAAO,CACLnB,MAAO,OACPC,OAAQ,OACRsG,OAAQ,IAGV/G,EAAAC,EAAAC,cAACiS,EAAA,EAAD,CACEC,WAAS,EACT/D,UAAU,MACVgE,QAAQ,WACRC,WAAW,UACXtS,EAAAC,EAAAC,cAAC4B,EAAD,OAEF9B,EAAAC,EAAAC,cAACoH,EAAD,SC3BYiL,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7S,EAAAC,EAAAC,cAAC4S,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a23ff925.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M11 11v-11h1v11h11v1h-11v11h-1v-11h-11v-1h11z\"\n});\n\nvar SvgPlusIcon = function SvgPlusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-icon.e4581c1a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 12v1h23v-1h-23z\"\n});\n\nvar SvgMinusIcon = function SvgMinusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMinusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/minus-icon.8bace023.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Fab } from '@material-ui/core';\n\nexport default function TransparentFab(props) {\n  const { children, ...p } = props;\n  return (\n      <Fab style={{\n        backgroundColor: \"transparent\",\n        boxShadow: \"none\",\n      }} {...p} >\n        {children}\n      </Fab>\n  )\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { Paper, Fab, Typography } from '@material-ui/core';\nimport { ReactComponent as PlusIcon } from '../plus-icon.svg';\nimport { ReactComponent as MinusIcon } from '../minus-icon.svg';\nimport TransparentFab from \"./TransparentFab\";\nimport { useSpring, animated } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport { clamp } from 'lodash';\n\nexport default function ZoomBar(props) {\n  let fabSize = 70;\n  let maxHeight = 240;\n  let [minZoom, maxZoom] = [0.01, 1000]\n  // const [zoom, setZoom] = useState(100) // useSpring(() => ({ zoom: 100 }));\n  const [{ zoom }, setZoom] = useSpring(() => ({ zoom: 100, config: {\n    friction: 50, \n    tension: 600,\n  }}));\n\n  const zoomClick = dir => {\n    // zoom in a particular direction\n    const z = Math.sign(dir) * (1e-1 * zoom.value + 1);\n    setZoom({ zoom: clamp(zoom.value + z, minZoom, maxZoom) });\n  }\n\n  return (\n    <div style={{\n        width: fabSize,\n        display: \"flex\"\n      }}>\n        <Paper style={{\n          borderRadius: \"5em\",\n          maxHeight: maxHeight,\n          margin: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column-reverse\",\n          justifyContent: \"space-between\",\n        }}>\n          <TransparentFab onClick={c => zoomClick(-1)}>\n            <MinusIcon />\n          </TransparentFab>\n          <div style={{\n            height: fabSize,\n            position: \"relative\",\n          }}>\n            <ZoomBarFab \n              diameter={fabSize} \n              zoom={zoom} \n              zoomControl={setZoom} \n              minZoom={minZoom}\n              maxZoom={maxZoom}\n            />\n          </div>\n          <TransparentFab onClick={c => zoomClick(1)}>\n            <PlusIcon />\n          </TransparentFab>\n        </Paper>\n      </div>\n  )\n}\n\nexport function ZoomBarFab(props) {\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: {\n     friction: 30, \n     tension: 400,\n     clamp: true,\n  }}))\n  \n  const [zoom, setZoom] = [props.zoom, props.zoomControl];\n  \n  const [gestureDown, setGestureDown] = useState(false);\n  const [zoomMult, setZoomMult] = useState(0);\n  const ref = React.useRef(null);\n  \n  const reset = () => {\n    setZoom({ zoom: 100 });\n  }\n\n  // https://upmostly.com/tutorials/setinterval-in-react-components-using-hooks\n  function useInterval(callback, delay) {\n    const savedCallback = useRef();\n  \n    useEffect(() => {\n      savedCallback.current = callback;\n    });\n  \n    useEffect(() => {\n      function tick() {\n        savedCallback.current();\n      }\n      if (delay !== null) {\n        let id = setInterval(tick, delay);\n        return () => clearInterval(id);\n      }\n    }, [delay]);\n  }\n\n  // determine speed to zoom at based on distance from center of the control\n  // updates zoom every 50ms based on the multiplier\n  useInterval(() => {\n    const z = clamp(zoom.value + 2 * 3e-5 * (zoom.value ** 0.75 + 1) * zoomMult, props.minZoom, props.maxZoom)\n    setZoom({ zoom: z });\n  }, gestureDown ? 50 : null);\n\n  const bind = useDrag(({ down, movement: [x, y], event, first, last }) => {\n    // only prevent default between first and last event\n    // first: prevents browser events\n    // last: allows buttons to activate and ripple\n    (!first && !last) && event.preventDefault();\n    \n    // tell zoom listener if drag is happening\n    setGestureDown(down);\n    \n    const limit = 80;\n    const clampY = clamp(y, -limit, limit)\n    \n    setZoomMult(down ? -Math.sign(clampY) * Math.abs(clampY / 10)**4 : 0)\n    set({ y: down ? clampY : 0 })\n    \n  }, { event: { passive: false, capture: false }, domTarget: ref })\n  \n  React.useEffect(bind, [bind])\n\n  return (\n    <animated.div \n      ref={ref}\n      style={{\n        transform: y.interpolate(y => `translate3D(0, ${y}px, 0)`),\n        borderRadius: '50rem',\n        width: props.diameter,\n        height: props.diameter,\n\n        marginLeft: -props.diameter/2,\n        marginTop: -props.diameter/2,\n        top: \"50%\",\n        left: \"50%\",\n        position: \"absolute\",\n        zIndex: 1,\n      }} \n      >\n      <Fab \n        onClick={ e => {\n            // if click registered and fab not moved, trigger reset\n            if (y.getValue() === 0) { reset(); }\n          }\n        }\n        style={{\n          backgroundColor: \"#2196f3\",\n          width: props.diameter,\n          height: props.diameter,\n        }}>\n        <Typography style={{ color: \"#fff\" }}>\n          <animated.span>{zoom.interpolate(z => z.toFixed(1))}</animated.span>%\n        </Typography>\n      </Fab>\n    </animated.div>\n  )\n}\n","import React, { useState } from 'react';\nimport { Paper, Typography, Fab } from '@material-ui/core';\nimport { animated, useSpring } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\n\n\nexport default function RotationControl() {\n\n  const [{ theta, itheta, prevTheta, revs, dt }, set] = useSpring(() => ({\n    theta: 150,\n    itheta: 0,\n    prevTheta: 0,\n    revs: 0,\n    dt: 0,\n    // xy: [0, 0],\n  }))\n\n  const clampAngle = t => ((t + 360) % 360 + 360) % 360\n\n  var elemProps = { x: 0, y: 0, width: 0, height: 0 };\n\n  const [elemCenter, setElemCenter] = useState([0, 0]);\n  // const [elemOffset, setElemOffset] = useState([0, 0]);\n\n  const outerSize = 160;\n  const innerSize = 70;\n\n  const bind = useDrag(({ xy: [x, y], initial: [ix, iy], previous: [px, py], first, last, memo = prevTheta.getValue() }) => {\n\n    if (last) {\n      return\n    }\n    if (first) {\n      const [cx, cy] = [elemProps.x + elemProps.width / 2, elemProps.y + elemProps.height / 2];\n      // console.log(cx, cy)\n      setElemCenter([cx, cy]);\n      // setElemOffset([ix - cx, iy - cy]);\n      set({\n        // remember initial angle\n        itheta: 360 * Math.atan2(-(ix - cx), iy - cy) / (Math.PI * 2),\n        // theta: theta.value + dt.value,\n        prevTheta: 0,\n        dt: 0\n      })\n      return;\n      //   set({ initialTheta: Math.atan2(iy - (pos.y + pos.height / 2), ix - (pos.x + pos.width / 2)) });\n    }\n    // set({ xy: [x, y] })\n\n    // console.log(ix, x, iy, y)\n    const [cx, cy] = elemCenter;\n\n    // const \n    // if (abs(theta.value + dt.value) >)\n    const newTheta = Math.atan2(-(x - cx), y - cy);\n    // const diff = newTheta - memo - ;\n    // console.log(prevTheta);\n    // if (Math.abs(diff) > Math.PI && Math.abs(prevTheta) > Math.PI / 2 - 0.5) {\n    //   console.log(diff);\n    //   set({\n    //     revs: revs.value + 1 * Math.sign(diff)\n    //   });\n    // }\n\n    const d = (360 * newTheta / (Math.PI * 2)) - itheta.getValue() - memo;\n\n    // set current angle, delta since last\n    set({\n      theta: theta.value + d,\n      prevTheta: newTheta,\n      // xy: [x, y] \n    });\n\n    // if (last) {\n    //   set({ \n    //     // theta: theta.value + dt,\n    //     // dt: 0 \n    //   })\n    // }\n\n    return memo;\n  })\n\n  return (\n    <div style={{\n      width: outerSize,\n      height: outerSize,\n      display: 'flex',\n      position: 'relative',\n    }}>\n      <animated.div style={{\n        width: 10,\n        height: 10,\n        backgroundColor: \"red\",\n        // transform: xy.interpolate((x, y) => `translate3d(${x - 5}px, ${y - 5}px, 0)`),\n        // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n      }} />\n      <Paper {...bind()}\n        ref={el => {\n          if (!el) return;\n          let r = el.getBoundingClientRect();\n          elemProps = { x: r.x, y: r.y, width: r.width, height: r.height }\n          // console.log(pos);\n        }}\n        style={{\n          borderRadius: '50rem',\n          width: outerSize,\n          height: outerSize,\n        }} >\n        {/* <div style={{\n          width: 10,\n          height: 10,\n          backgroundColor: \"aqua\",\n          transform: `translate3d(${- 5}px, ${- 5}px, 0)`,\n          // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          zIndex: 2,\n        }} /> */}\n        <animated.div\n          style={{\n            transform: theta.interpolate(t =>\n              `rotate(${t}deg)`\n              // ((360 + theta.value + dt) % 360)\n              // .toFixed(1)\n            ),\n            width: \"100%\",\n            height: \"100%\"\n          }}>\n          <Typography style={{ userSelect: \"none\" }}>hi</Typography>\n        </animated.div>\n      </Paper>\n\n      <Fab style={{\n        width: innerSize,\n        height: innerSize,\n        borderRadius: '50rem',\n        backgroundColor: \"#2196f3\",\n        display: 'flex',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        margin: -innerSize / 2,\n      }}>\n        {/* <CardContent > */}\n        <Typography style={{\n          color: \"#fff\",\n          margin: 'auto',\n        }}>\n          <animated.span>{\n            theta.interpolate(t => t.toFixed(1))\n            // dt.interpolate(dt =>\n            //   clampAngle(theta.value + dt)\n            //     .toFixed(1)\n            // )\n          }</animated.span>° (<animated.span>{revs.interpolate(r => r)}</animated.span>)\n        </Typography>\n      </Fab>\n    </div>\n  )\n  // }\n};","import React, { useRef, useEffect, useState } from \"react\";\nimport Complex from 'complex.js';\nimport _ from 'lodash';\nimport { Typography, Button, Slider } from \"@material-ui/core\";\n\nimport { useDrag, addV, subV, useGesture } from \"react-use-gesture\";\nimport { add, scale, dist } from 'vec-la'\n\nimport { useSpring, animated, interpolate, config } from \"react-spring\";\n// import { performance } from 'perf_hooks';\n\n\nexport default function MandelbrotRenderer(props) {\n\n  const touchTarget = useRef(null);\n  const testTouchTarget = useRef(null);\n  const canvas = useRef(null);\n  const canvasSize = 200;\n  const zoomFactor = 3;\n\n  const bounds = {x: [-1.5, 0.5], y: [-1, 1]};\n  const [maxI, setMaxI] = useState(23);\n\n  const [ctx, setCtx] = useState(null);\n\n  // const [toggle, setToggle] = useState(false);\n\n  // {x, y, dx, dy, theta, zoom}\n  const [grid, setGrid] = useSpring(() => ({\n    x: 0, \n    y: 0, \n\n    dx: 0,\n    dy: 0,\n\n    theta: 0,\n\n    zoom: 100,\n\n  }));\n\n  // const trans1 = ({x, y, theta, zoom}) => \n  //   `translate3d(${x / 3.5}px,${y / 3.5}px,0)`\n  // ;\n\n  // let gridVals = () => [Object.values(grid)];\n\n  // const [down, setDown] = useState(false);\n\n  function linspace(start, stop, cardinality) {\n    let step = (stop - start) / cardinality;\n    return _.range(start, stop, step);\n  }\n\n  const clearCanvas = ctx => {\n    let c = canvas.current;\n    ctx.clearRect(0, 0, c.width, c.height)\n  }\n\n  // const fillDiag = ctx => {\n  //   ctx.fillStyle = \"#444\";\n\n  //   for (let i = 0; i < canvasSize; i++) {\n  //     console.log(\"square: \" + i);\n  //     ctx.fillRect(i, i, 1, 1);\n  //   }\n  // }\n\n  const fillProcFast = ctx => {\n    let {x, y, zoom} = grid;\n    const [xl, xr] = [x.value-1, x.value+1];\n    const [yb, yt] = [y.value-1, y.value+1];\n\n    clearCanvas(ctx);\n    console.log(canvasSize / 2);\n    console.log(zoom);\n    console.log(yb);\n    // let l = linspace(yt, 0, canvasSize / 2)\n    // l.push(0);\n    // console.log(l);\n    ctx.fillStyle = \"#444\";\n\n    const lsRe = linspace(xl, xr, canvasSize);\n    const lsIm = linspace(yt, 0, canvasSize / 2);\n    lsIm.push(0);\n\n    lsRe.forEach((re, x) => {\n      // let l = \n      // l.push(0);\n      lsIm.forEach((im, y) => {\n        // y > 180 && console.log(y);\n        let c = Complex(re, im);\n        var z = Complex.ZERO;\n        var draw = true;\n        // console.log(z.toString());\n        for (let iter = 0; iter < maxI; iter++) {\n          z = z.mul(z).add(c);\n          if (z.abs() > 2) { draw = false; break; }\n        }\n        if (draw) {\n          ctx.fillRect(x, y, 1, 1);\n          if (y < canvasSize) {\n            ctx.fillRect(x, (canvasSize - y), 1, 1);\n          }\n        }\n      });\n    });\n  };\n\n\n  const fillProc = ctx => {\n    let {x, y, dx, dy} = grid;\n    const [xs, ys] = [x.value + dx.value, y.value + dy.value]\n    const [xl, xr] = [xs-1, xs+1];\n    const [yb, yt] = [ys-1, ys+1];\n    linspace(xl, xr, canvasSize).forEach((re, x) => {\n      linspace(yb, yt, canvasSize).forEach((im, y) => {\n        let c = Complex(re, im);\n        var z = Complex.ZERO;\n        var draw = true;\n        // console.log(z.toString());\n        for (let iter = 0; iter < maxI; iter++) {\n          z = z.mul(z).add(c);\n          if (z.abs() > 2.0) { draw = false; break; }\n        }\n        ctx.fillStyle = draw ? \"#000\" : \"#fff\";\n        ctx.fillRect(x, y, 1, 1);\n      });\n    });\n  };\n\n  const fillProcAsync = ctx => {\n    console.log(\"entered fillproc\");\n    return new Promise(resolve => {\n      const [xl, xr] = bounds.x;\n      const [yb, yt] = bounds.y;\n      ctx.fillStyle = \"#ddd\";\n      linspace(xl, xr, canvasSize).forEach((re, x) => {\n        linspace(yb, yt, canvasSize).forEach((im, y) => {\n          let c = Complex(re, im);\n          var z = Complex.ZERO;\n          var draw = true;\n          // console.log(z.toString());\n          for (let iter = 0; iter < maxI; iter++) {\n            z = z.mul(z).add(c);\n            if (z.abs() > 2.0) { draw = false; break; }\n          }\n          if (draw) {\n            ctx.fillRect(x, y, 1, 1);\n          }\n        });\n      });\n      resolve();\n    })\n  };\n\n  // const toggleRect = ctx => {\n  //   const fill = () => ctx.fillRect(0, 0, 200, 200);\n  //   const clear = () => ctx.clearRect(0, 0, 200, 200);\n  //   toggle ? clear() : fill();\n  //   setToggle(!toggle);\n  //   // useEffect(() => {\n  //   //   console.log(\"click\");\n  //   // })\n  // }\n  // // \n  // const [{pos, d_pos, theta_test, zoom_test}, setTestTouchGrid] = useSpring(() => ({\n  //   // testTouchGrid: [\n  //   // // [x, y, dx, dy, theta, zoom]\n  //   pos: [0, 0],\n  //   d_pos: [0, 0],\n\n  //   theta_test: 0,\n\n  //   zoom_test: 100,\n  //   config: {mass: 1, tension: 100 , friction: 200},\n\n  // }));\n\n  const [{ pos }, setTestTouchGridPos] = useSpring(() => ({\n    // testTouchGrid: [\n    // // [x, y, dx, dy, theta, zoom]\n    pos: [0, 0],\n    d_pos: [0, 0],\n\n    \n    config: {mass: 1, tension: 100 , friction: 200},\n\n  }));\n\n  const [{ theta_test, last_pointer_angle, zoom_test, last_pointer_dist }, setTestTouchGridTheta] = useSpring(() => ({\n\n    theta_test: 0,\n    last_pointer_angle: 0,\n\n    zoom_test: 1,\n    last_pointer_dist: 0,\n\n    config: {mass: 1, tension: 100 , friction: 200},\n\n  }))\n\n  // touch target bind for testing\n  const testTouchBind = useGesture({\n\n    onPinchStart: ({ event }) => {\n      event.preventDefault();\n    },\n    onPinch: ({ offset: [d, a], down, vdva: [vd, va], last, memo = [theta_test.getValue(), last_pointer_angle.getValue(), zoom_test.getValue(), last_pointer_dist.getValue()] }) => {\n      // alert(mx, my)\n      // let [theta, lpa] = memo\n      let [theta, lpa, zt, lpd] = memo;\n      console.log(d);\n      let d_rel = d/250;\n\n      setTestTouchGridTheta({ \n        zoom_test: zt + (d_rel - lpd), \n        last_pointer_dist: d_rel,\n        // pos: [a, a],\n        theta_test: theta + (a - lpa),\n        last_pointer_angle: a,\n        immediate: down, \n        config: { velocity: va, decay: true }\n      })\n      // if (last) {\n      //   setTestTouchGridTheta({ \n      //     // zoom_test: d / 200, \n      //     // // pos: [a, a],\n      //     theta_test: va,\n      //     // immediate: down, \n      //     config: { velocity: va, decay: true }\n      //   })\n      //   // memo += a\n      //   // return memo + a\n      // }\n\n      return memo\n    //   // alert(theta_test.getValue())\n    },\n    onPinchEnd: ({ vdva: [vd, va] }) => {\n      // alert(`va = ${va}`)\n      setTestTouchGridTheta({ \n        // zoom_test: d / 200, \n        // // pos: [a, a],\n        theta_test: va,\n        // immediate: down, \n        config: { velocity: va, decay: true }\n      })\n      // alert(theta_test.getValue())\n    },\n\n\n    // onDragStart: ({event}) => event.preventDefault(),\n\n    onDrag: ({ down, movement, velocity, direction, memo = pos.getValue()}) => {\n  \n      // change according to this formula:\n      // move (x, y) in the opposite direction of drag (pan with cursor)\n      // divide by canvas size to scale appropriately\n      // multiply by 2 to correct scaling on viewport\n      //                                    current img size\n      // const [dx, dy] = [mx, my].map(a => - a);\n      \n      // let [x, y, dx, dy, theta, zoom] = testTouchGrid;\n  \n      setTestTouchGridPos({ \n        pos: add(movement, memo), \n        immediate: down, \n        config: { velocity: scale(direction, velocity), decay: true }\n      })\n      return memo\n    },\n\n    // onDragEnd: () => {},\n\n  }, { event: { passive: false, capture: false }, domTarget: testTouchTarget })\n  // const testTouchBind = useDrag(({ movement, down, event, first, velocity, direction, memo = pos.getValue()}) => {\n  //   !first && event.preventDefault();\n\n  //   // change according to this formula:\n  //   // move (x, y) in the opposite direction of drag (pan with cursor)\n  //   // divide by canvas size to scale appropriately\n  //   // multiply by 2 to correct scaling on viewport\n  //   //                                    current img size\n  //   // const [dx, dy] = [mx, my].map(a => - a);\n    \n  //   // let [x, y, dx, dy, theta, zoom] = testTouchGrid;\n\n  //   setTestTouchGrid({ \n  //     pos: add(movement, memo), \n  //     immediate: down, \n  //     config: { velocity: scale(direction, velocity), decay: true }\n  //   })\n\n    \n  //   // if (last) {\n  //   //   // let [vx, vy] = vxvy //.map(v => _.clamp(v, -8, 8));\n  //   //   // // vy = _.clamp(vy, -8, 8);\n  //   //   // // extrapolate from last angle\n  //   //   // let [x, y] = pos.getValue()\n  //   //   // console.log(x, y)\n  //   //   // console.log(mx, my)\n  //   //   // console.log(vxvy)\n  //   //   setTestTouchGrid({\n  //   //     pos: addV(memo, movement),\n  //   //     d_pos: [0, 0],\n  //   //     // immediate: false,\n\n  //   //       // 0,\n  //   //       // 0,\n  //   //     // theta: 0,\n  //   //     // ]\n  //   //     // y: y.value + dy,\n  //   //   });\n  //   //   // clearCanvas(ctx);\n  //   //   // fillProc(ctx);\n  //   // }\n  //   return memo\n\n  //   // ()down ? fillProcFast(ctx) : null;\n  // }, { event: { passive: false, capture: false }, domTarget: testTouchTarget });\n\n  useEffect(testTouchBind, [testTouchBind]);\n\n  // the current binding for the canvas movement\n  const bind = useDrag(({ movement: [mx, my], down, event, first, last }) => {\n    !first && event.preventDefault();\n\n    // change according to this formula:\n    // move (x, y) in the opposite direction of drag (pan with cursor)\n    // divide by canvas size to scale appropriately\n    // multiply by 2 to correct scaling on viewport\n    const [dx, dy] = [mx, my].map(a => -2 * a / (canvasSize * zoomFactor));\n    \n    setGrid({\n      dx: dx, \n      dy: dy,\n    });\n\n    // setDown(down);\n    let {x, y} = grid;\n\n    if (last) {\n      setGrid({\n        x: x.value + dx,\n        y: y.value + dy,\n        \n        dx: 0,\n        dy: 0,\n      });\n      // clearCanvas(ctx);\n      // fillProc(ctx);\n    }\n\n    // ()down ? fillProcFast(ctx) : null;\n  }, { event: { passive: false, capture: false }, domTarget: touchTarget });\n\n  useEffect(bind, [bind]);\n\n  const [ptime, setPtime] = useState(0);\n  const [ptime2, setPtime2] = useState(0);\n  const [ptime3, setPtime3] = useState(0);\n\n  useEffect(() => {\n    // console.log(\"canvas loaded\");\n    const ctx = canvas.current.getContext(\"2d\");\n    setCtx(ctx);\n    \n    // if(!down) {\n    //   clearCanvas(ctx)\n    //   fillProc(ctx)\n    // }\n    // canvas.current.ready(() => {\n    // fillProcFast(ctx);\n  }, [])\n\n\n  return (\n    <div \n      className=\"fullSize\" \n      // style={{\n      //   width: \"100%\",\n      //   height: \"100%\"\n      // }} \n      {...props}\n      ref={touchTarget}\n    >\n      <animated.canvas \n        id=\"mandelbrot\" \n        // className=\"fullSize\"\n        // width={window.innerWidth}\n        // height={window.innerHeight}\n        width={canvasSize}\n        height={canvasSize}\n        alt={grid.x.interpolate(d => grid.x.value + d)}\n        style= {{\n          width: canvasSize * zoomFactor,\n          height: canvasSize * zoomFactor,\n          transform: interpolate([pos], ([x, y]) =>\n            `matrix3d(\n              1, 0, 0, 0,\n              0, 1, 0, 0,\n              0, 0, 1, 0,\n              0, 0, 0, 1\n            )`\n          ),\n        }}\n        ref={canvas} \n      />\n\n      <animated.div\n        id=\"touch-test\"\n        ref={testTouchTarget}\n        style={{\n          position: 'absolute',\n          top: 0,\n          width: 500,\n          height: 500,\n          // transform: theta_test.interpolate(t => \n          //   `rotateZ(${t}deg)`  \n          // )\n          transform: interpolate([pos, theta_test, zoom_test], ([x, y], t, z) =>\n          // transform: pos.interpolate((x, y) =>\n            `\n            translate(${x}px, ${y}px)\n            rotate(${t}deg)\n            scale(${z})\n            `\n            // `matrix3d(\n            //   1, 0, 0, 0,\n            //   0, 1, 0, 0,\n            //   0, 0, 1, 0,\n            //   ${x}, ${y}, 0, 1\n            // )`\n          ),\n        }}\n      >\n        <div style={{\n          display: 'flex-column',\n          position: \"relative\",\n          // height: 0,\n        }}>\n          <Typography>\n            pos: <animated.span>{pos.interpolate((x, y) => `x=${x.toFixed(3)}, y=${y.toFixed(3)}`)}</animated.span>; \n            theta = <animated.span>{theta_test.interpolate(t => t.toFixed(3))}</animated.span>,\n            {/* zoom = {zoom_test.getValue()} */}\n          </Typography>\n          <img \n            src={\"https://upload.wikimedia.org/wikipedia/commons/2/21/Mandel_zoom_00_mandelbrot_set.jpg\"}\n            style={{\n              maxWidth: '100%',\n              maxHeight: '100%',\n              // position: 'relative',\n            }}\n          />\n        </div>\n      </animated.div>\n\n      <Typography>\n        theta: <animated.span>{theta_test.interpolate(t => t.toFixed(3))}</animated.span>, \n        zoom: <animated.span>{zoom_test.interpolate(z => z.toFixed(3))}</animated.span>, \n        x: <animated.span>{grid.dx.interpolate(d => (grid.x.value + d).toFixed(3))}</animated.span>, \n        y: <animated.span>{grid.dy.interpolate(d => (grid.y.value + d).toFixed(3))}</animated.span>\n      </Typography>\n      <Button variant=\"contained\" color=\"primary\" onClick={e => {\n          let t0 = performance.now();\n          fillProc(ctx);\n          let t1 = performance.now()\n          setPtime(t1 - t0);\n        }}>{ptime.toFixed(2)}</Button>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={e => {\n          let t0 = performance.now();\n          fillProcFast(ctx);\n          let t1 = performance.now()\n          setPtime2(t1 - t0);\n        }\n      }>{ptime2.toFixed(2)}</Button>\n      \n      <Button variant=\"contained\" color=\"secondary\" onClick={e => async function () {\n          let t0 = performance.now();\n          await fillProcAsync(ctx);\n          let t1 = performance.now()\n          setPtime3(t1 - t0);\n        }()\n      }>{ptime3.toFixed(2)}</Button>\n\n      <Button variant=\"outlined\" onClick={e => clearCanvas(ctx)}>clear</Button>\n\n      <hr />\n\n      <Slider\n        defaultValue={maxI}\n        valueLabelDisplay=\"on\"\n        step={1}\n        min={1}\n        max={100}\n        style={{ \n          width: 200,\n          margin: 30,\n        }}\n        onChange={ (e, v) => setMaxI(v) }\n      />\n    </div>\n  )\n}","import React, { Fragment } from 'react';\nimport './App.css';\nimport { Grid } from '@material-ui/core';\nimport ZoomBar, { } from './components/ZoomBar';\nimport RotationControl from './components/RotationControl';\n\nimport 'typeface-roboto';\nimport MandelbrotRenderer from './components/MandelbrotRenderer.jsx';\n\n\nfunction App() {\n\n  return (\n    <Fragment>\n      <MandelbrotRenderer\n        style={{\n          position: 'absolute',\n          zIndex: 0,\n        }}\n      />\n      <Grid\n        className=\"App\"\n        container\n        direction=\"column\"\n        justify=\"space-around\"\n        alignItems=\"center\"\n        style={{\n          width: '100%',\n          height: '100%',\n          zIndex: 1,\n        }}\n      >\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-end\"\n          alignItems=\"center\">\n          <ZoomBar />\n        </Grid>\n        <RotationControl />\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}