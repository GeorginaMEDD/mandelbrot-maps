{"version":3,"sources":["shaders/newSmoothMandelbrotShader.js","shaders/fullVertexShader.js","components/WebGLCanvas.jsx","components/utils.js","components/MandelbrotRenderer.jsx","shaders/newSmoothJuliaShader.js","components/JuliaRenderer.jsx","components/SettingsMenu.jsx","components/InfoDialog.jsx","App.js","serviceWorker.js","index.js"],"names":["newSmoothMandelbrotShader","_ref","_ref$maxI","maxI","_ref$AA","AA","_ref$B","B","crosshair","arguments","length","undefined","stroke","radius","concat","toFixed","fullscreenVertexArray","position","numComponents","data","React","forwardRef","ref","_ref$mini","mini","props","Object","objectWithoutProperties","gl","glRef","renderRequestRef","useRef","bufferInfo","programInfo","zoom","u","getValue","currZoom","dpr","useEffect","current","getContext","twgl","render","useCallback","time","canvas","viewport","width","height","uniforms","resolution","u_zoom","u_c","c","map","x","screenScaleMultiplier","u_pos","scale","pos","u_maxI","useProgram","program","requestAnimationFrame","fragShader","cancelAnimationFrame","react_default","a","createElement","web","id","className","genericTouchBind","domTarget","posControl","zoomControl","_posControl","slicedToArray","setControlPos","_zoomControl","_zoomControl$","minZoom","maxZoom","setControlZoom","binds","onDragStart","_ref2","event","preventDefault","onPinchStart","_ref3","onPinch","_ref4","vd","vdva","down","dx","delta","origin","first","_ref4$memo","memo","_ref4$z","z","newZ","newZclamp","_","clamp","immediate","config","velocity","onWheel","_ref5","my","movement","active","_ref5$z","onDrag","_ref6","direction","pinching","_ref6$memo","realZoom","plotMovement","relMove","relDir","addV","decay","passive","capture","MandelbrotRenderer","canvasRef","miniCanvasRef","miniGl","screenmult","controls","_props$controls$zoom","maxiter","aa","miniFragShader","gtb","touchBind","useGesture","style","WebGLCanvas","enableMini","div","zIndex","margin","left","bottom","miniSize","borderRadius","boxShadow","overflow","opacity","interpolate","display","onClick","newSmoothJuliaShader","JuliaRenderer","useStyles","makeStyles","theme","root","spacing","right","flexDirection","button","marginTop","sliderControl","SettingsMenu","classes","_React$useState","useState","_React$useState2","anchorEl","setAnchorEl","Fab","aria-controls","size","aria-haspopup","e","currentTarget","Settings_default","Backdrop","open","Boolean","Popover","keepMounted","onClose","anchorOrigin","horizontal","vertical","transformOrigin","Grid","container","paddingLeft","paddingRight","paddingTop","paddingBottom","item","alignItems","justify","Typography","variant","fontSize","Divider","orientation","flexItem","IconButton","aria-label","toggleInfo","Info_default","settings","group","key","title","marginBottom","FormGroup","values","items","ctrl","FormControlLabel","label","name","control","labelPlacement","placement","marginLeft","marginRight","Button","reset","startIcon","MyLocation_default","DialogTitle","withStyles","padding","closeButton","top","color","palette","grey","children","other","assign","disableTypography","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","InfoDialog","_props$ctrl","setOpen","_useState","_useState2","snackBarOpen","setSnackBarOpen","handleClose","clientData","window","jscd","Dialog","aria-labelledby","InfoDialog_DialogTitle","alt","src","InfoDialog_DialogContent","dividers","gutterBottom","Link","href","target","Box","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","align","colSpan","TableBody","entries","k","v","fontFamily","String","InfoDialog_DialogActions","navigator","clipboard","writeText","prompt","writeToClipboard","JSON","stringify","FileCopy_default","Snackbar","autoHideDuration","InfoDialog_Alert","severity","autoFocus","surveyLink","Launch_default","App","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","defaultSpringConfig","mass","tension","friction","setDpr","startPos","mandelbrotControls","useSpring","rot","theta","last_pointer_angle","itheta","last_pointer_dist","juliaControls","resetPosSpringConfig","resetZoomSpringConfig","_useState3","_useState4","showInfo","setShowInfo","coords","miniViewer","Switch","checked","onChange","iterations","Slider","min","max","step","defaultValue","valueLabelDisplay","value","marks","val","devicePixelRatio","useDpr","Card","span","y","xs","location","hostname","match","ReactDOM","src_App","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b69bc8d8.chunk.js","sourcesContent":["// TODO set max iterations as parameter, crosshair as parameter\n\nconst newSmoothMandelbrotShader = ({\n        maxI = 300, \n        AA = 1, \n        B = 64\n    },\n    crosshair = {\n        stroke: 2, \n        radius: 100, \n    }\n) => `\n// Created by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// See here for more information on smooth iteration count:\n// http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\n\n// render parameters\n#define AA ${AA}\n#define MAXI ${maxI}\n#define B ${B.toFixed(1)}\n\n// crosshair parameters\n#define cross_stroke ${crosshair.stroke.toFixed(1)}\n#define cross_radius ${crosshair.radius.toFixed(1)}\n\n// set high float precision (lower than this may break colours on mobile)\nprecision highp float;\n\n// need to know the resolution of the canvas\nuniform vec2 resolution;\n\n// properties should be passed as uniforms\nuniform int   u_maxI;  \nuniform vec2  u_pos;\nuniform float u_zoom;\nuniform float u_theta;\n\nbool crosshair( float x, float y ) {\n    float abs_x = abs(2.0*x - resolution.x);\n    float abs_y = abs(2.0*y - resolution.y);\n\n    return \n    // crosshair in centre of screen\n    (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\n    // crosshair size / \"radius\"\n    (abs_x <= cross_radius && abs_y <= cross_radius);\n}\n\nfloat mandelbrot( in vec2 c ) {\n    {\n        float c2 = dot(c, c);\n        // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\n        if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\n        // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\n        if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\n    }\n\n    float l = 0.0;\n    vec2 z  = vec2(0.0);\n    for( int i=0; i<MAXI; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n        if( dot(z,z)>(B*B) ) break;\n        l += 1.0;\n    }\n\n    // maxed out iterations\n    if( l>float(MAXI)-1.0 ) return 0.0;\n    \n    // optimized smooth interation count\n    l = l - log2(log2(dot(z,z))) + 4.0;\n\n    return l;\n}\n\nvoid main() {    \n    // set the initial colour to black\n    vec3 col = vec3(0.0);\n\n    // anti-aliasing\n    #if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\n        vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n        float w = float(AA*m+n);\n    #else    \n        // adjust pixels to range from [-1, 1]\n        vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n    #endif\n\n    // c is based on offset and grid position, z_0 = 0\n    vec2 c = u_pos + p/u_zoom;\n    \n    float l = mandelbrot(c);\n    col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n\n    // antialiasing\n    #if AA>1\n    }\n    col /= float(AA*AA);\n    #endif\n\n    // add crosshair\n    if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\n        col = 1. - col;\n    }\n\n    // Output to screen\n    gl_FragColor = vec4( col, 1.0 );\n}\n`;\n\nexport default newSmoothMandelbrotShader;","export const fullVertexShader = `\nattribute vec4 position;\n\nvoid main() {\n  gl_Position = position;\n}\n`;\n\n// This \"position\" array specifies the vertex positions of the element \n// to be displayed by the vertex shader. It represents two triangles,\n// each filling half of the screen diagonally, and together filling the\n// full canvas space to allow the fragment shader to act on the full canvas.\nexport const fullscreenVertexArray = {\n  position: {\n    numComponents: 3,\n    data: [\n    -1, -1, 0, \n     1, -1, 0, \n    -1,  1, 0, \n    -1,  1, 0, \n     1, -1, 0, \n     1,  1, 0\n  ]},\n};\n","import React, { useEffect, useCallback, useRef } from \"react\";\nimport * as twgl from \"twgl.js\";\nimport { fullVertexShader, fullscreenVertexArray } from \"../shaders/fullVertexShader\";\nimport { scale } from 'vec-la';\nimport { animated } from \"react-spring\";\n\nexport default React.forwardRef(({mini = false, ...props}, ref) => {\n  // props:\n  // id\n  // fragShader\n  // -- uniforms:\n  //    u_zoom\n  //    u_pos\n  //    u_maxI\n  // ref\n  // glRef\n\n  // variables to hold canvas and webgl information\n  const gl               = props.glRef;\n  const renderRequestRef = useRef(null);\n  const bufferInfo       = useRef(null);\n  const programInfo      = useRef(null);\n\n  // have a zoom callback\n  const zoom = mini ? () => 1.0 : () => props.u.zoom.getValue();\n  const currZoom = useRef(zoom);\n\n  const dpr = props.dpr || 1;\n\n  useEffect(() => {\n    currZoom.current = props.u.zoom.getValue();\n  }, [props.u]);\n\n  // initial context-getter\n  useEffect(() => {\n    gl.current = ref.current.getContext('webgl');\n    // console.log(`got canvas context: ${gl.current}`);\n    bufferInfo.current = twgl.createBufferInfoFromArrays(gl.current, fullscreenVertexArray);\n  }, [gl, ref]);\n\n  // the main render function for WebGL\n  const render = useCallback(time => {\n    twgl.resizeCanvasToDisplaySize(gl.current.canvas, dpr);\n    gl.current.viewport(0, 0, gl.current.canvas.width, gl.current.canvas.height);\n\n    const uniforms = {\n      resolution: [gl.current.canvas.width, gl.current.canvas.height],\n      u_zoom: zoom(),\n      u_c:    props.u.c === undefined ? 0 : props.u.c.getValue().map(x => x * props.u.screenScaleMultiplier),\n      u_pos:  scale(props.u.pos.getValue(), props.u.screenScaleMultiplier),\n      u_maxI: props.u.maxI,\n    };\n\n    gl.current.useProgram(programInfo.current.program);\n    twgl.setBuffersAndAttributes(gl.current, programInfo.current, bufferInfo.current);\n    twgl.setUniforms(programInfo.current, uniforms);\n    twgl.drawBufferInfo(gl.current, bufferInfo.current);\n    // The 'state' will always be the initial value here\n    renderRequestRef.current = requestAnimationFrame(render);\n  }, [gl, props.u, zoom, dpr]);\n\n  // re-compile program if shader changes\n  useEffect(() => {\n    programInfo.current = twgl.createProgramInfo(gl.current, [fullVertexShader, props.fragShader]);\n  }, [gl, props.fragShader]);\n\n  // \n  useEffect(() => {\n    renderRequestRef.current = requestAnimationFrame(render);\n    return () => cancelAnimationFrame(renderRequestRef.current);\n  }, [render]);\n\n  return (\n    <animated.canvas\n      id={props.id}\n      className=\"renderer\"\n      ref={ref} />\n  );\n});","import { useEffect, useState, useCallback } from \"react\";\nimport { addV } from \"react-use-gesture\";\nimport { scale } from \"vec-la\";\nimport _ from \"lodash\";\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(() => ({\n    width: isClient ? window.innerWidth : undefined,\n    height: isClient ? window.innerHeight : undefined\n  }), [isClient]);\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      // return false;\n      return () => {};\n    }\n    \n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\n// a touchbind for re-using across renderers\nexport function genericTouchBind({ domTarget, posControl, zoomControl, screenScaleMultiplier, gl }) {\n  let [{ pos }, setControlPos] = posControl;\n  let [{ zoom, minZoom, maxZoom }, setControlZoom] = zoomControl;\n  return {\n    binds: {\n\n    // prevent some browser events such as swipe-based navigation or\n    // pinch-based zoom and instead redirect them to this handler\n    onDragStart:  ({ event }) => event.preventDefault(),\n    onPinchStart: ({ event }) => event.preventDefault(),\n\n    onPinch: ({ vdva: [vd,], down, delta: [dx,], origin, first, memo = [pos.getValue()], z = zoom.getValue() }) => {\n      if (first) {\n        let [p] = memo;\n        return [p, origin];\n      }\n      // initial origin access\n      // let [p, initialOrigin] = memo;\n      let newZ = z * (1 + dx * 5e-3);\n      let newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\n\n      // let realZoom = gl.current.canvas.height * newZclamp * screenScaleMultiplier;\n      // let plotMovement = scale(subV(origin, initialOrigin), -2/realZoom);\n      // let relMove = [plotMovement[0], -plotMovement[1]];\n\n      setControlZoom({\n        zoom: newZclamp,\n        immediate: down,\n        config: {\n          // value needs revising, currently too slow\n          velocity: 10 * vd,\n        }\n      });\n\n      // setControlPos({\n      //   pos: addV(p, relMove),                    // add the displacement to the starting position\n      //   immediate: down,                                  // immediately apply if the gesture is active\n      // });\n\n      return memo;\n    },\n\n    onWheel: ({ movement: [, my], active, z = zoom.getValue() }) => {\n      // x, y obtained from event\n      let newZ = z * (1 - my * (my < 0 ? 3e-4 : 2e-4));\n\n      setControlZoom({\n        zoom: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\n        immediate: active,\n        config: {\n          // velocity: active ? 0 : 10,\n        }\n      });\n\n      return z;\n    },\n\n    onDrag: ({ down, movement, velocity, direction, pinching, memo = pos.getValue() }) => {\n\n      // let pinch handle movement\n      if (pinching) return;\n      // change according to this formula:\n      // move (x, y) in the opposite direction of drag (pan with cursor)\n      // divide by canvas size to scale appropriately\n      // multiply by 2 to correct scaling on viewport\n      // use screen multiplier for more granularity\n      let realZoom = gl.current.canvas.height * zoom.getValue() * screenScaleMultiplier;\n      \n      let plotMovement = scale(movement, -2/realZoom);\n\n      let relMove = [plotMovement[0], -plotMovement[1]];\n      let relDir  = [direction[0], -direction[1]];\n\n      setControlPos({\n        pos: addV(memo, relMove),                    // add the displacement to the starting position\n        immediate: down,                                  // immediately apply if the gesture is active\n        config: { \n          velocity: scale(relDir, -velocity/realZoom),  // set the velocity (gesture momentum)\n          decay: true,\n        },\n      });\n\n      return memo;\n    },\n\n  },\n  config: { \n    event: { passive: false, capture: false }, \n    domTarget: domTarget,\n    // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\n    // for specific gesture options. See here for more details.\n    // drag: {\n    //   bounds,\n    //   rubberband: true,\n    // }\n  }};\n}","import React, { useRef, useEffect } from \"react\";\nimport _ from 'lodash';\n\nimport { useGesture } from \"react-use-gesture\";\nimport { animated } from \"react-spring\";\n\nimport newSmoothMandelbrotShader from \"../shaders/newSmoothMandelbrotShader\";\nimport WebGLCanvas from \"./WebGLCanvas\";\nimport { genericTouchBind } from \"./utils\";\n\nexport default function MandelbrotRenderer(props) {\n\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef(null);\n  const miniCanvasRef = useRef(null);\n  \n  const gl = useRef(null);\n  const miniGl = useRef(null);\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  const screenScaleMultiplier = props.screenmult;\n\n  // temporary bounds to prevent excessive panning\n  // eslint-disable-next-line\n  const radialBound = 1;\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\n\n\n  // read incoming props\n  const [{ pos }] = props.controls.pos;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ zoom }, setControlZoom] = props.controls.zoom;\n  const maxI = props.maxiter;\n  const AA = props.aa ? 2 : 1;\n\n  const fragShader = newSmoothMandelbrotShader({\n    maxI: maxI,\n    AA: AA,\n  });\n  const miniFragShader = newSmoothMandelbrotShader({\n    maxI: maxI,\n    AA: 2, \n    }, {\n    stroke: 1, \n    radius: 30,\n  });\n\n  \n  let gtb = genericTouchBind({\n    domTarget: canvasRef,\n    posControl: props.controls.pos,\n    zoomControl: props.controls.zoom,\n    screenScaleMultiplier: screenScaleMultiplier / props.dpr,\n    gl: gl,\n  });\n\n  let touchBind = useGesture(\n    gtb.binds,\n    gtb.config\n  );\n\n  useEffect(touchBind, [touchBind]);  \n\n\n  return (\n    <div className=\"renderer\" style={{\n      position: \"relative\"\n    }}>\n      <WebGLCanvas \n        id=\"mandelbrot\"\n        fragShader={fragShader}\n        dpr={props.dpr}\n        touchBind={touchBind}\n        u={{\n          zoom: zoom,\n          pos: pos,\n          maxI: maxI,\n          screenScaleMultiplier: screenScaleMultiplier,\n        }}\n        ref={canvasRef}\n        glRef={gl}\n      />\n      {props.enableMini ? \n      <animated.div style={{\n        position: \"absolute\",\n        zIndex: 2,\n        margin: \"0.5rem\",\n        left: 0,\n        bottom: 0,\n        height: props.miniSize[0],\n        width: props.miniSize[0],\n        borderRadius: props.miniSize[0],\n        // border: \"1px solid #000\",\n        boxShadow: \"0px 2px 10px 1px rgba(0, 0, 0, 0.4)\",\n        overflow: \"hidden\",\n        opacity: zoom.interpolate(z => _.clamp(z - 1, 0, 1)),\n        display: zoom.interpolate(z => _.clamp(z - 1, 0, 1) === 0 ? \"none\" : \"block\"),\n      }}\n      onClick={() => setControlZoom({ zoom: 1 })}\n      >\n        <WebGLCanvas \n          id=\"mini-mandelbrot\"\n          fragShader={miniFragShader}\n          dpr={props.dpr}\n          u={{\n            zoom: zoom,\n            pos: pos,\n            maxI: maxI,\n            screenScaleMultiplier: screenScaleMultiplier,\n          }}\n          ref={miniCanvasRef}\n          glRef={miniGl}\n          \n          mini={true}\n        />\n      </animated.div>\n      : <div />\n      }\n    </div>\n  )\n\n\n}","// TODO set max iterations as parameter\n\nconst newSmoothJuliaShader = ({\n  maxI = 300, \n  AA = 1, \n  B = 64, \n  // crosshair = {\n  //     stroke: 0, \n  //     radius: 0\n  // },\n}) => `\n\n#define AA ${AA}\n#define MAXI ${maxI}\n#define B ${B.toFixed(1)}\n\n// set high float precision (lower than this may break colours on mobile)\nprecision highp float;\n\n// need to know the resolution of the canvas\nuniform vec2 resolution;\n\n// properties should be passed as uniforms\nuniform int   u_maxI;\nuniform vec2  u_pos;\nuniform vec2  u_c;\nuniform float u_zoom;\nuniform float u_theta;\n\nfloat julia( vec2 z, vec2 c ) {\n\n  float l = 0.0;\n  for( int i=0; i<MAXI; i++ )\n  {\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n      if( dot(z,z)>(B*B) ) break;\n      l += 1.0;\n  }\n\n  // maxed out iterations\n  if( l>float(MAXI)-1.0 ) return 0.0;\n\n  // equivalent optimized smooth interation count\n  l = l - log2(log2(dot(z,z))) + 4.0;\n\n  return l;\n}\n\nvoid main() {    \n  // set the initial colour to black\n  vec3 col = vec3(0.0);\n\n  // anti-aliasing\n  #if AA>1\n  for( int m=0; m<AA; m++ )\n  for( int n=0; n<AA; n++ )\n  {\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n      float w = float(AA*m+n);\n  #else    \n      // adjust pixels to range from [-1, 1]\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n  #endif\n  \n  // constant \"c\" to add, based on mandelbrot position\n  vec2 c = u_c;\n  vec2 z = u_pos + p/u_zoom;\n\n  float l = julia(z, c);\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n\n  // antialiasing\n  #if AA>1\n  }\n  col /= float(AA*AA);\n  #endif\n\n  // Output to screen\n  gl_FragColor = vec4( col, 1.0 );\n}\n`;\n\nexport default newSmoothJuliaShader;","import React, { useRef, useEffect } from \"react\";\r\nimport { useGesture } from \"react-use-gesture\";\r\nimport { animated } from \"react-spring\";\r\nimport newSmoothJuliaShader from \"../shaders/newSmoothJuliaShader\";\r\nimport _ from \"lodash\";\r\nimport WebGLCanvas from \"./WebGLCanvas\";\r\nimport { genericTouchBind } from \"./utils\";\r\n\r\n\r\nexport default function JuliaRenderer(props) {\r\n\r\n  // variables to hold canvas and webgl information\r\n  const canvasRef = useRef(null);\r\n  const miniCanvasRef = useRef(null);\r\n  \r\n  const gl = useRef(null);\r\n  const miniGl = useRef(null);\r\n\r\n  // this multiplier subdivides the screen space into smaller increments\r\n  // to allow for velocity calculations to not immediately decay, due to the\r\n  // otherwise small scale that is being mapped to the screen.\r\n  const screenScaleMultiplier = props.screenmult;\r\n\r\n  // read incoming props\r\n  const [{ pos }] = props.controls.pos;\r\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\r\n  const [{ zoom }, setControlZoom] = props.controls.zoom;\r\n  const maxI = props.maxiter;\r\n  const AA = props.aa ? 2 : 1;\r\n\r\n  const fragShader = newSmoothJuliaShader({\r\n    maxI: maxI,\r\n    AA: AA,\r\n  });\r\n\r\n  const miniFragShader = newSmoothJuliaShader({\r\n    maxI: maxI,\r\n    AA: 2, \r\n  });\r\n\r\n  let gtb = genericTouchBind({\r\n    domTarget: canvasRef,\r\n    posControl: props.controls.pos,\r\n    zoomControl: props.controls.zoom,\r\n    screenScaleMultiplier: screenScaleMultiplier / props.dpr,\r\n    gl: gl,\r\n  });\r\n\r\n  let touchBind = useGesture(\r\n    gtb.binds,\r\n    gtb.config\r\n  );\r\n\r\n  useEffect(touchBind, [touchBind]);  \r\n  \r\n  return (\r\n    <div className=\"renderer\" style={{\r\n      position: \"relative\"\r\n    }}>\r\n      <WebGLCanvas\r\n          id=\"julia\"\r\n          fragShader={fragShader}\r\n          dpr={props.dpr}\r\n          u={{\r\n            zoom: zoom,\r\n            pos: pos,\r\n            c: props.c,\r\n            maxI: maxI,\r\n            screenScaleMultiplier: screenScaleMultiplier,\r\n          }}\r\n          ref={canvasRef}\r\n          glRef={gl}\r\n        />\r\n      {/* mini viewer */}\r\n      {props.enableMini ? \r\n        <animated.div style={{\r\n          position: \"absolute\",\r\n          zIndex: 2,\r\n          margin: 20,\r\n          left: 0,\r\n          bottom: 0,\r\n          height: props.miniSize[0],\r\n          width: props.miniSize[0],\r\n          borderRadius: props.miniSize[0],\r\n          // border: \"1px solid #000\",\r\n          boxShadow: \"0px 2px 10px 1px rgba(0, 0, 0, 0.4)\",\r\n          overflow: \"hidden\",\r\n          opacity: zoom.interpolate(z => _.clamp(z - 1, 0, 1)),\r\n          display: zoom.interpolate(z => _.clamp(z - 1, 0, 1) === 0 ? \"none\" : \"block\"),\r\n        }}\r\n        onClick={() => setControlZoom({ zoom: 1 })}\r\n        >\r\n          <WebGLCanvas \r\n            id=\"mini-mandelbrot\"\r\n            fragShader={miniFragShader}\r\n            dpr={props.dpr}\r\n            u={{\r\n              zoom: zoom,\r\n              pos: pos,\r\n              c: props.c,\r\n              maxI: maxI,\r\n              screenScaleMultiplier: screenScaleMultiplier,\r\n            }}\r\n            ref={miniCanvasRef}\r\n            glRef={miniGl}\r\n            \r\n            mini={true}\r\n          />\r\n        </animated.div>\r\n        :\r\n        <div />\r\n        }\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles, Fab, Popover, FormGroup, FormControlLabel, Typography, Grid, Divider, Backdrop, IconButton } from '@material-ui/core';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'absolute',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        zIndex: 2,\r\n    },\r\n    button: {\r\n        marginTop: 10,\r\n    },\r\n    sliderControl: {\r\n        width: 30,\r\n    }\r\n}));\r\n\r\nexport default function SettingsMenu(props) {\r\n    const classes = useStyles();\r\n\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Fab aria-controls=\"menu\" \r\n                size=\"small\" \r\n                aria-haspopup=\"true\"\r\n                onClick={(e) => setAnchorEl(e.currentTarget)}\r\n                className={classes.button}\r\n                >\r\n                <SettingsIcon />\r\n            </Fab>\r\n            <Backdrop open={Boolean(anchorEl)}>\r\n                <Popover\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={() => setAnchorEl(null)}\r\n                    anchorOrigin={{\r\n                        horizontal: \"right\",\r\n                        vertical: \"bottom\"\r\n                    }}\r\n                    transformOrigin={{\r\n                        vertical: \"bottom\",\r\n                        horizontal: \"right\"\r\n                    }}\r\n                >\r\n                    <Grid container direction=\"column\" style={{\r\n                        paddingLeft: \"1.5em\",\r\n                        paddingRight: \"1.5em\",\r\n                        paddingTop: \"1em\",\r\n                        paddingBottom: \"1em\",\r\n                    }}>\r\n                        <Grid item container alignItems=\"center\" justify=\"space-around\">\r\n                            <Grid item>\r\n                                <Typography variant=\"h1\" style={{ fontSize: 20, paddingLeft: 20, paddingRight: 20 }}>\r\n                                    Configuration\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Divider orientation=\"vertical\" flexItem />\r\n                            <Grid item>\r\n                                <IconButton aria-label=\"info\" size=\"medium\" onClick={() => {\r\n                                    // open info panel\r\n                                    props.toggleInfo();\r\n                                    // close popover\r\n                                    setAnchorEl(null);\r\n                                }}>\r\n                                    <InfoIcon fontSize=\"inherit\" />\r\n                                </IconButton>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n\r\n                        {props.settings.map((group) =>\r\n                            <Grid item key={group.title}>\r\n                                <Divider style={{\r\n                                    marginTop: 10,\r\n                                    marginBottom: 4,\r\n                                }} />\r\n                                <Typography variant=\"overline\" style={{ fontSize: 14, marginBottom: 4 }}>{group.title}</Typography>\r\n                                <FormGroup>\r\n                                {Object.values(group.items).map((ctrl) => \r\n                                    <FormControlLabel \r\n                                        label={ctrl.name}\r\n                                        key={ctrl.name}\r\n                                        control={ctrl.ctrl}\r\n                                        labelPlacement={ctrl.placement ? ctrl.placement : \"end\"}\r\n                                        style={ctrl.placement ? {\r\n                                            marginLeft: 0,\r\n                                            marginRight: 0,\r\n                                        } : {}}\r\n                                    />\r\n                                )}\r\n                                </FormGroup>\r\n                            </Grid>\r\n                        )}\r\n\r\n                        <Divider style={{\r\n                            marginTop: 10,\r\n                            marginBottom: 4,\r\n                        }} />\r\n\r\n                        <Button aria-controls=\"reset\" \r\n                            onClick={() => props.reset()}\r\n                            className={classes.button}\r\n                            startIcon={<MyLocationIcon />}\r\n                            >\r\n                            Reset position\r\n                        </Button>\r\n                    </Grid>\r\n                </Popover>\r\n            </Backdrop>\r\n        </div>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Link, TableContainer, Table, Paper, TableRow, TableCell, TableHead, TableBody, Box, Divider, Snackbar } from '@material-ui/core';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { surveyLink } from './surveyLink.json';\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h1\" style={{ fontSize: 30 }}>{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function InfoDialog(props) {\r\n  const [open, setOpen] = props.ctrl;\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  // guard against null / undefined window\r\n  const clientData = window.jscd || {};\r\n\r\n  let writeToClipboard = data => {\r\n    try {\r\n      navigator.clipboard.writeText(data);\r\n      setSnackBarOpen(true);\r\n    } catch (e) {\r\n      window.prompt(\"Auto copy to clipboard failed, copy manually from below:\", data)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        <img\r\n          alt=\"Mandelbrot Maps logo\"\r\n          width={60}\r\n          src=\"https://cdn4.iconfinder.com/data/icons/logos-3/600/React.js_logo-512.png\"></img>\r\n        Mandelbrot Maps\r\n        </DialogTitle>\r\n      <DialogContent dividers>\r\n        <Typography gutterBottom>\r\n          Mandelbrot Maps is an interactive fractal explorer built using React and WebGL.\r\n            </Typography>\r\n        <Typography gutterBottom>\r\n          Mandelbrot set shader code adapted from <Link href=\"https://www.shadertoy.com/view/4df3Rn\">\r\n            Mandelbrot - smooth\r\n                </Link> by <Link href=\"http://iquilezles.org/\" target=\"_blank\">\r\n            Inigo Quilez\r\n                </Link>.\r\n        </Typography>\r\n        <Divider style={{ marginTop: 8, marginBottom: 8 }} />\r\n        <Box style={{ display: \"flex\"}}>\r\n          <TableContainer component={Paper} style={{ width: \"auto\", margin: \"auto\", }}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">Device properties</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.entries(clientData).map(([k, v]) => \r\n                  <TableRow key={k}>\r\n                    <TableCell>{k}</TableCell>\r\n                    <TableCell align=\"right\" style={{ fontFamily: \"monospace\"}}>{String(v)}</TableCell>\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button onClick={() => {writeToClipboard(JSON.stringify(clientData))}} color=\"primary\" variant=\"outlined\" startIcon={<FileCopyIcon />}>Copy</Button>\r\n        <Snackbar open={snackBarOpen} autoHideDuration={5000} onClose={() => setSnackBarOpen(false)}>\r\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\r\n            Device properties copied!\r\n          </Alert>\r\n        </Snackbar>\r\n        <Button autoFocus href={surveyLink} color=\"primary\" variant=\"outlined\" startIcon={<LaunchIcon />}>Feedback</Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport './App.css';\r\nimport { Grid, Card, Typography, Slider, Switch } from '@material-ui/core';\r\n\r\n// import 'typeface-roboto';\r\nimport MandelbrotRenderer from './components/MandelbrotRenderer.jsx';\r\nimport { useSpring, animated } from 'react-spring';\r\nimport JuliaRenderer from './components/JuliaRenderer';\r\nimport { useWindowSize } from './components/utils';\r\nimport SettingsMenu from \"./components/SettingsMenu\";\r\n\r\nimport InfoDialog from './components/InfoDialog';\r\n\r\nfunction App() {\r\n\r\n  const size = useWindowSize();\r\n\r\n  let defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\r\n\r\n  // this multiplier subdivides the screen space into smaller increments\r\n  // to allow for velocity calculations to not immediately decay, due to the\r\n  // otherwise small scale that is being mapped to the screen.\r\n  const screenScaleMultiplier = 1e-7;\r\n  // make default device pixel ratio 1\r\n  const [dpr, setDpr] = useState(1);\r\n\r\n  const startPos = [-0.743030, 0.126433];\r\n  // const startPos = [-.7426482, .1271875 ];\r\n  // const startPos = [-0.1251491, -0.8599647];\r\n  const startZoom = 165.0;\r\n  const miniSize = useState(100);\r\n\r\n  const mandelbrotControls = {\r\n    pos: useSpring(() => ({\r\n      pos: startPos.map(x => x / screenScaleMultiplier),\r\n      config: defaultSpringConfig,\r\n    })),\r\n\r\n    rot: useSpring(() => ({\r\n      theta: 0,\r\n      last_pointer_angle: 0,\r\n      itheta: 0,\r\n      config: defaultSpringConfig,\r\n    })),\r\n\r\n    zoom: useSpring(() => ({\r\n      zoom: startZoom,\r\n      last_pointer_dist: 0,\r\n  \r\n      minZoom: 0.5,\r\n      maxZoom: 100000,\r\n  \r\n      config: { mass: 1, tension: 600, friction: 50 },\r\n    })),\r\n  };\r\n\r\n  const juliaControls = {\r\n    pos: useSpring(() => ({\r\n      pos: [0, 0],\r\n      config: defaultSpringConfig,\r\n    })),\r\n\r\n    rot: useSpring(() => ({\r\n      theta: 0,\r\n      last_pointer_angle: 0,\r\n      itheta: 0,\r\n      config: defaultSpringConfig,\r\n    })),\r\n\r\n    zoom: useSpring(() => ({\r\n      zoom: 0.5,\r\n      last_pointer_dist: 0,\r\n  \r\n      minZoom: 0.5,\r\n      maxZoom: 100000,\r\n  \r\n      config: { mass: 1, tension: 600, friction: 50 },\r\n    })),\r\n  };\r\n\r\n  let resetPosSpringConfig  = { tension: 200, friction: 75 };\r\n  let resetZoomSpringConfig = { tension: 300, friction: 60 };\r\n\r\n  let reset = () => {\r\n    mandelbrotControls.pos[1]({\r\n      pos: [0, 0],\r\n      config: resetPosSpringConfig,\r\n    });\r\n    mandelbrotControls.zoom[1]({\r\n      zoom: 1,\r\n      config: resetZoomSpringConfig,\r\n    });\r\n    \r\n    juliaControls.pos[1]({\r\n      pos: [0, 0],\r\n      config: resetPosSpringConfig,\r\n    });\r\n    juliaControls.zoom[1]({\r\n      zoom: 1,\r\n      config: resetZoomSpringConfig,\r\n    });\r\n  };\r\n\r\n  const [showInfo, setShowInfo] = useState(false);\r\n\r\n  let toggleInfo = () => setShowInfo(!showInfo);\r\n\r\n  let controls = {\r\n    coords: useState(false),\r\n    miniViewer: useState(true),\r\n    maxI: useState(250),\r\n    aa: useState(false),\r\n    dpr: useState(false),\r\n  };\r\n\r\n  let settings = [{\r\n    title: \"Interface\",\r\n    items: {\r\n      miniViewer: {\r\n        name: 'Mini viewers', \r\n        ctrl: <Switch \r\n          color=\"primary\"\r\n          checked={controls.miniViewer[0]} \r\n          onChange={() => controls.miniViewer[1](!controls.miniViewer[0])} \r\n        />\r\n      },\r\n      coords: {\r\n        name: 'Show coordinates', \r\n        ctrl: <Switch \r\n          color=\"primary\"\r\n          checked={controls.coords[0]} \r\n          onChange={() => controls.coords[1](!controls.coords[0])} \r\n        />\r\n      },\r\n    }\r\n  }, {\r\n    title: \"Graphics\",\r\n    items: {\r\n      iterations: {\r\n        name: 'Iterations', \r\n        ctrl: <Slider \r\n          min={5}\r\n          max={1000}\r\n          step={5}\r\n          defaultValue={250}\r\n          valueLabelDisplay=\"auto\"\r\n          value={controls.maxI[0]}\r\n          marks={[\r\n            { value: 5, label: 5 },\r\n            { value: 250, label: 250 },\r\n            { value: 500, label: 500 },\r\n            { value: 750, label: 750 },\r\n            { value: 1000, label: 1000 },\r\n          ]}\r\n          onChange={(e, val) => controls.maxI[1](val)}\r\n          // onChange={(e, val) => console.log(val)}\r\n        />,\r\n        placement: \"top\"},\r\n      dpr: {\r\n        name: `Use pixel ratio (${window.devicePixelRatio || 1})`, \r\n        ctrl: <Switch\r\n          checked={controls.dpr[0]} \r\n          color=\"primary\"\r\n          onChange={() => {\r\n            let useDpr = !controls.dpr[0];\r\n            // console.log(useDpr ? window.devicePixelRatio : 1);\r\n            setDpr(useDpr ? window.devicePixelRatio : 1)\r\n            controls.dpr[1](useDpr);\r\n          }}\r\n        />\r\n      },\r\n      aa: {\r\n        name: 'Anti-aliasing (slow)', \r\n        ctrl: <Switch\r\n          color=\"primary\"\r\n          checked={controls.aa[0]} \r\n          onChange={() => controls.aa[1](!controls.aa[0])}\r\n        />\r\n      },\r\n    }\r\n  }]\r\n  // const [{ pos }, setPos] = mandelbrotControls.pos;\r\n  \r\n  return (\r\n    <Grid container>\r\n      <Grid\r\n        item\r\n        container\r\n        direction={size.width < size.height ? \"column-reverse\" : \"row\"}\r\n        justify=\"center\"\r\n        className=\"fullSize\"\r\n        style={{\r\n          position: \"absolute\",\r\n        }}\r\n      >\r\n        <Card\r\n        style={{\r\n          width: \"auto\",\r\n          position: \"absolute\",\r\n          zIndex: 2,\r\n          right: 0,\r\n          top: 0,\r\n          margin: 20,\r\n          padding: 8,\r\n          display: controls.coords[0] ? \"block\" : \"none\",\r\n          // borderRadius: 100,\r\n        }}\r\n        >\r\n          <Typography align=\"right\">\r\n            <animated.span>{mandelbrotControls.pos[0].pos.interpolate((x) => (x * screenScaleMultiplier).toFixed(7))}</animated.span> : x<br />\r\n            <animated.span>{mandelbrotControls.pos[0].pos.interpolate((x, y) => (y * screenScaleMultiplier).toFixed(7))}</animated.span> : y\r\n          </Typography>\r\n        </Card>\r\n        <Grid item xs className=\"renderer\">\r\n          <MandelbrotRenderer\r\n            controls={mandelbrotControls}\r\n            maxiter={controls.maxI[0]}\r\n            screenmult={screenScaleMultiplier}\r\n            miniSize={miniSize}\r\n            enableMini={controls.miniViewer[0]}\r\n            aa={controls.aa[0]}\r\n            dpr={dpr}\r\n          />\r\n        </Grid>\r\n        <Grid item xs className=\"renderer\" \r\n          // style={{ display: \"none\" }}\r\n          >\r\n          <JuliaRenderer\r\n            c={mandelbrotControls.pos[0].pos}\r\n            controls={juliaControls}\r\n            maxiter={controls.maxI[0]}\r\n            screenmult={screenScaleMultiplier}\r\n            miniSize={miniSize}\r\n            enableMini={controls.miniViewer[0]}\r\n            aa={controls.aa[0]}\r\n            dpr={dpr}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <SettingsMenu \r\n        settings={settings}\r\n        reset={() => reset()}\r\n        toggleInfo={() => toggleInfo()}\r\n      />\r\n\r\n      <InfoDialog ctrl={[showInfo, setShowInfo]} />\r\n\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}