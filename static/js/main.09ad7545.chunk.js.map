{"version":3,"sources":["components/info/CoordinatesCard.tsx","components/info/ChangeCoordinatesCard.tsx","components/info/InfoDialog.jsx","shaders/newSmoothJuliaShader.js","theme/theme.tsx","shaders/fullVertexShader.js","components/render/WebGLCanvas.tsx","components/render/MinimapViewer.tsx","components/utils.js","components/settings/SettingsDefinitions.tsx","components/settings/SettingsContext.tsx","components/render/JuliaRenderer.jsx","shaders/newSmoothMandelbrotShader.ts","components/info/FPSCard.tsx","components/render/MandelbrotRenderer.tsx","serviceWorker.js","components/ServiceWorkerWrapper.tsx","components/settings/SettingsMenu.tsx","App.tsx","index.tsx"],"names":["CoordinatesCard","props","Grow","in","show","Card","style","width","zIndex","position","padding","marginBottom","Typography","align","fontFamily","fontSize","span","mandelbrot","xy","interpolate","x","y","screenScaleMultiplier","toFixed","zoom","z","theta","t","ChangeCoordinatesCard","useState","startPos","setX","setY","startZoom","setZoom","startTheta","setTheta","display","flexDirection","flexShrink","Grid","container","direction","alignItems","TextField","size","onChange","e","Number","target","value","label","justify","Button","marginTop","onClick","xyCtrl","vScale","config","resetPosSpringConfig","zoomCtrl","resetZoomSpringConfig","rotCtrl","DialogTitle","withStyles","theme","root","margin","spacing","image","marginRight","height","closeButton","marginLeft","color","palette","grey","children","classes","onClose","other","disableTypography","className","src","alt","variant","IconButton","aria-label","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","InfoDialog","ctrl","open","setOpen","snackBarOpen","setSnackBarOpen","handleClose","clientData","window","jscd","Dialog","aria-labelledby","maxWidth","id","dividers","gutterBottom","Link","href","Divider","Box","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","colSpan","TableBody","Object","entries","map","k","v","key","String","data","navigator","clipboard","writeText","prompt","writeToClipboard","JSON","stringify","startIcon","Snackbar","autoHideDuration","severity","autoFocus","surveyLink","newSmoothJuliaShader","maxI","AA","B","createMuiTheme","MuiSwitch","MuiButton","primary","main","colors","blue","secondary","red","info","fullscreenVertexArray","numComponents","WebGLCanvas","React","forwardRef","refAny","canvasRef","gl","useRef","renderRequestRef","bufferInfo","programInfo","u","setFps","fps","useCallback","mini","getValue","currZoom","dpr","useDPR","devicePixelRatio","useEffect","current","getContext","twgl","fragShader","then","frames","elapsedTime","render","time","viewport","uniforms","resolution","u_zoom","u_c","undefined","c","u_xy","u_maxI","u_theta","useProgram","program","requestAnimationFrame","cancelAnimationFrame","canvas","ref","cursor","dragging","displayName","MinimapViewer","rest","ButtonBase","left","bottom","borderRadius","boxShadow","overflow","genericTouchBind","domTarget","posControl","zoomControl","setDragging","setControlXY","minZoom","maxZoom","setControlZoom","binds","onDragStart","event","preventDefault","onPinchStart","onPinch","vd","vdva","down","dx","delta","origin","first","memo","newZ","newZclamp","_","clamp","immediate","velocity","onWheel","my","movement","active","onDrag","pinching","realZoom","plotMovement","relMove","relDir","addV","vRotate","decay","eventOptions","passive","capture","settingsWidgets","settings","showMinimap","checked","control","Switch","showCrosshair","showCoordinates","labelPlacement","Slider","min","max","step","valueLabelDisplay","marks","useAA","showFPS","defaultSettings","SettingsContext","createContext","setSettings","SettingsProvider","Provider","JuliaRenderer","miniCanvasRef","miniGl","screenmult","controls","miniFragShader","gtb","touchBind","useGesture","Consumer","glRef","makeCrosshair","stroke","radius","standardCrosshair","miniCrosshair","newSmoothMandelbrotShader","crosshairShape","FPSCard","top","userSelect","div","MandelbrotRenderer","isLocalhost","Boolean","location","hostname","match","register","URL","process","addEventListener","swUrl","fetch","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","ServiceWorkerWrapper","showReload","setShowReload","waitingWorker","setWaitingWorker","onSWUpdate","waiting","anchorOrigin","vertical","horizontal","action","postMessage","type","useStyles","makeStyles","right","button","sliderControl","GroupDivider","GroupTitle","title","SettingsMenu","anchorEl","setAnchorEl","ResetButton","aria-controls","reset","AboutButton","toggleInfo","Fab","aria-haspopup","currentTarget","Backdrop","Popover","keepMounted","transformOrigin","paddingLeft","paddingRight","paddingTop","paddingBottom","item","name","widgets","getSettingsWidgetsGrouping","g","FormGroup","widget","FormControlLabel","val","prevState","defaultSpringConfig","mass","tension","friction","App","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","removeEventListener","useWindowSize","mandelbrotControls","useSpring","juliaControls","showInfo","setShowInfo","ThemeProvider","xs","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.09ad7545.chunk.js","sourcesContent":["import { Card, Grow, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { CoordinatesCardProps } from '../../common/info';\n\nconst CoordinatesCard = (props: CoordinatesCardProps): JSX.Element => {\n  return (\n    <Grow in={props.show}>\n      <Card\n        style={{\n          width: 'auto',\n          zIndex: 1300,\n          position: 'relative',\n          padding: '6px 12px',\n          marginBottom: 8,\n          // display: props.show ? 'block' : 'none',\n          // borderRadius: 100,\n        }}\n      >\n        <Typography align=\"right\" style={{ fontFamily: 'monospace', fontSize: '1.2rem' }}>\n          {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n          {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n          <animated.span>\n            {props.mandelbrot.xy.interpolate(\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n              (x, y) => `${(x * props.screenScaleMultiplier).toFixed(7)} : x`,\n            )}\n          </animated.span>\n          <br />\n          <animated.span>\n            {props.mandelbrot.xy.interpolate(\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n              (x, y) => `${(y * props.screenScaleMultiplier).toFixed(7)} : y`,\n            )}\n          </animated.span>\n          <br />\n          <animated.span>\n            {props.mandelbrot.zoom.interpolate((z) => `${z.toFixed(2)} : z`)}\n          </animated.span>\n          <br />\n          <animated.span>\n            {props.mandelbrot.theta.interpolate((t) => `${t.toFixed(3)} : t`)}\n          </animated.span>\n        </Typography>\n      </Card>\n    </Grow>\n  );\n};\n\nexport default CoordinatesCard;\n\n// <Card\n//   style={{\n//     width: 'auto',\n//     position: 'absolute',\n//     zIndex: 2,\n//     right: 0,\n//     top: 0,\n//     margin: 20,\n//     padding: 8,\n//     display: settings.coords[0] ? 'block' : 'none',\n//     // borderRadius: 100,\n//   }}\n// >\n//   <Typography align=\"right\">\n//     {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n//     {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\n//       )}\n//     </animated.span>\n//     <br />\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\n//       )}\n//     </animated.span>\n//   </Typography>\n// </Card>;\n","import { Button, Card, Grid, Grow, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { vScale } from 'vec-la-fp';\nimport {\n  resetPosSpringConfig,\n  resetZoomSpringConfig,\n  startPos,\n  startTheta,\n  startZoom,\n} from '../../App';\nimport { ChangeCoordinatesCardProps } from '../../common/info';\n\nconst ChangeCoordinatesCard = (props: ChangeCoordinatesCardProps): JSX.Element => {\n  const [x, setX] = useState(startPos[0]);\n  const [y, setY] = useState(startPos[1]);\n  const [zoom, setZoom] = useState(startZoom);\n  const [theta, setTheta] = useState(startTheta);\n\n  const go = () => {\n    props.mandelbrot.xyCtrl[1]({\n      xy: vScale(1 / props.screenScaleMultiplier, [x, y]),\n      config: resetPosSpringConfig,\n    });\n    props.mandelbrot.zoomCtrl[1]({\n      z: zoom,\n      config: resetZoomSpringConfig,\n    });\n    props.mandelbrot.rotCtrl[1]({\n      theta: theta,\n      config: resetZoomSpringConfig,\n    });\n  };\n\n  return (\n    <Grow in={props.show}>\n      <Card\n        style={{\n          width: 'auto',\n          zIndex: 1300,\n          position: 'relative',\n          padding: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          flexShrink: 1,\n          // display: props.show ? 'block' : 'none',\n          // borderRadius: 100,\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\">\n          <TextField\n            size=\"small\"\n            style={{ width: '12ch' }}\n            onChange={(e) => setX(Number(e.target.value))}\n            value={x}\n            label=\"x\"\n          />\n          <TextField\n            size=\"small\"\n            style={{ width: '12ch' }}\n            onChange={(e) => setY(Number(e.target.value))}\n            value={y}\n            label=\"y\"\n          />\n          <Grid container direction=\"row\" justify=\"space-around\">\n            <TextField\n              size=\"small\"\n              style={{ width: '5ch' }}\n              onChange={(e) => setZoom(Number(e.target.value))}\n              value={zoom}\n              label=\"zoom\"\n            />\n            <TextField\n              size=\"small\"\n              style={{ width: '3ch' }}\n              onChange={(e) => setTheta(Number(e.target.value))}\n              value={theta}\n              label=\"theta\"\n            />\n          </Grid>\n          <Button style={{ marginTop: 12 }} onClick={() => go()}>\n            Go\n          </Button>\n        </Grid>\n      </Card>\n    </Grow>\n  );\n};\n\nexport default ChangeCoordinatesCard;\n","import React, { useState } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Link,\n  TableContainer,\n  Table,\n  Paper,\n  TableRow,\n  TableCell,\n  TableHead,\n  TableBody,\n  Box,\n  Divider,\n  Snackbar,\n} from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport MuiAlert from '@material-ui/lab/Alert';\nimport { surveyLink } from '../surveyLink.json';\n\n// for evaluating build time\nimport preval from 'preval.macro';\n\nconst dateTimeStamp = preval`module.exports = new Date();`;\n\nconst styles = (theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'row',\n    // align: \"middle\",\n  },\n  image: {\n    marginTop: 'auto',\n    marginBottom: 'auto',\n    marginRight: 8,\n    height: 50,\n  },\n  closeButton: {\n    // position: 'absolute',\n    // right: theme.spacing(1),\n    // top: theme.spacing(1),\n    marginLeft: 'auto',\n    color: theme.palette.grey[500],\n  },\n});\n\nconst DialogTitle = withStyles(styles)((props) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <img src=\"logo-512.png\" alt=\"Mandelbrot Maps logo\" className={classes.image} />\n      <Typography\n        variant=\"h1\"\n        style={{ fontSize: 24, marginTop: 'auto', marginBottom: 'auto' }}\n      >\n        {children}\n      </Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles((theme) => ({\n  root: {\n    padding: theme.spacing(3),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles((theme) => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nexport default function InfoDialog(props) {\n  const [open, setOpen] = props.ctrl;\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\n\n  const handleClose = () => setOpen(false);\n\n  // guard against null / undefined window\n  const clientData = window.jscd || {};\n\n  let writeToClipboard = (data) => {\n    try {\n      navigator.clipboard.writeText(data);\n      setSnackBarOpen(true);\n    } catch (e) {\n      window.prompt('Auto copy to clipboard failed, copy manually from below:', data);\n    }\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"customized-dialog-title\"\n      open={open}\n      maxWidth=\"md\"\n    >\n      {/* <div style={{ maxWidth: 700 }}> */}\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n        Mandelbrot Maps\n      </DialogTitle>\n      <DialogContent dividers style={{ maxWidth: 700 }}>\n        <Typography gutterBottom>\n          Mandelbrot Maps is an interactive fractal explorer built using React and WebGL.\n        </Typography>\n        <Typography gutterBottom>\n          Developed by{' '}\n          <Link href=\"https://jmaio.github.io/\" target=\"_blank\">\n            Joao Maio\n          </Link>{' '}\n          in 2019/2020 as part of an Honours Project at The University of Edinburgh, under\n          the supervision of Philip Wadler.\n        </Typography>\n        <Typography gutterBottom>\n          The project was simultaneously undertaken by Freddie Bawden, also under the\n          supervision of Philip Wadler. Freddie's version of the project is available at:{' '}\n          <Link href=\"http://mmaps.freddiejbawden.com/\" target=\"_blank\">\n            mmaps.freddiejbawden.com\n          </Link>\n        </Typography>\n        <Typography gutterBottom>\n          The{' '}\n          <Link\n            href=\"https://homepages.inf.ed.ac.uk/wadler/mandelbrot-maps/index.html\"\n            target=\"_blank\"\n          >\n            original Mandelbrot Maps project\n          </Link>{' '}\n          was developed by Iain Parris in 2008 as a Java Applet.\n        </Typography>\n        <Typography gutterBottom>\n          Mandelbrot set shader code adapted from{' '}\n          <Link href=\"https://www.shadertoy.com/view/4df3Rn\">Mandelbrot - smooth</Link> by{' '}\n          <Link href=\"http://iquilezles.org/\" target=\"_blank\">\n            Inigo Quilez\n          </Link>\n          .\n        </Typography>\n        {/* <Typography>\n            &copy; Joao Maio 2020\n          </Typography> */}\n\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n\n        <Box style={{ display: 'flex' }}>\n          <TableContainer\n            component={Paper}\n            style={{ width: 'auto', margin: 'auto', maxWidth: 460 }}\n          >\n            <Table size=\"small\" aria-label=\"a dense table\">\n              <TableHead>\n                <TableRow>\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">\n                    Device properties\n                  </TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {Object.entries(clientData).map(([k, v]) => (\n                  <TableRow key={k}>\n                    <TableCell>{k}</TableCell>\n                    <TableCell align=\"right\" style={{ fontFamily: 'monospace' }}>\n                      {String(v)}\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </Box>\n\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\n\n        <Box style={{ display: 'flex' }}>\n          <Typography variant=\"overline\" align=\"center\" style={{ margin: 'auto' }}>\n            Build:\n            <Typography style={{ fontFamily: 'monospace' }}>{dateTimeStamp}</Typography>\n            {/* {console.log(new Date(dateTimeStamp).toLocaleString('en-GB', { timeZone: 'UTC' }))} */}\n          </Typography>\n        </Box>\n      </DialogContent>\n\n      <DialogActions>\n        <Button\n          onClick={() => {\n            writeToClipboard(JSON.stringify(clientData));\n          }}\n          color=\"primary\"\n          variant=\"outlined\"\n          startIcon={<FileCopyIcon />}\n        >\n          Copy\n        </Button>\n        <Snackbar\n          open={snackBarOpen}\n          autoHideDuration={5000}\n          onClose={() => setSnackBarOpen(false)}\n        >\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\n            Device properties copied!\n          </Alert>\n        </Snackbar>\n        <Button\n          autoFocus\n          href={surveyLink}\n          target=\"_blank\"\n          color=\"primary\"\n          variant=\"outlined\"\n          startIcon={<LaunchIcon />}\n        >\n          Feedback\n        </Button>\n      </DialogActions>\n      {/* </div> */}\n    </Dialog>\n  );\n}\n","// TODO set max iterations as parameter\n\nconst newSmoothJuliaShader = ({\n  maxI = 300,\n  AA = 1,\n  B = 64,\n  // crosshair = {\n  //     stroke: 0,\n  //     radius: 0\n  // },\n}) => `\n\n#define AA ${AA}\n#define MAXI ${maxI}\n#define B ${B.toFixed(1)}\n\n// set high float precision (lower than this may break colours on mobile)\nprecision highp float;\n\n// need to know the resolution of the canvas\nuniform vec2 resolution;\n\n// properties should be passed as uniforms\nuniform int   u_maxI;\nuniform vec2  u_xy;\nuniform vec2  u_c;\nuniform float u_zoom;\nuniform float u_theta;\n\nfloat julia( vec2 z, vec2 c ) {\n\n  float l = 0.0;\n  for( int i=0; i<MAXI; i++ )\n  {\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n      if( dot(z,z)>(B*B) ) break;\n      l += 1.0;\n  }\n\n  // maxed out iterations\n  if( l>float(MAXI)-1.0 ) return 0.0;\n\n  // equivalent optimized smooth interation count\n  l = l - log2(log2(dot(z,z))) + 4.0;\n\n  return l;\n}\n\nvoid main() {    \n  // set the initial colour to black\n  vec3 col = vec3(0.0);\n\n  // anti-aliasing\n  #if AA>1\n  for( int m=0; m<AA; m++ )\n  for( int n=0; n<AA; n++ )\n  {\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n      float w = float(AA*m+n);\n  #else    \n      // adjust pixels to range from [-1, 1]\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n  #endif\n  \n  // constant \"c\" to add, based on mandelbrot position\n  vec2 c = u_c;\n  vec2 z = u_xy + p/u_zoom;\n\n  float l = julia(z, c);\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n\n  // antialiasing\n  #if AA>1\n  }\n  col /= float(AA*AA);\n  #endif\n\n  // Output to screen\n  gl_FragColor = vec4( col, 1.0 );\n}\n`;\n\nexport default newSmoothJuliaShader;\n","import { colors, createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  props: {\n    // Name of the component ⚛️\n    MuiSwitch: {\n      // The default props to change\n      color: 'primary', // x, on the whole application 💣!\n    },\n    MuiButton: {\n      variant: 'outlined',\n    },\n  },\n  palette: {\n    primary: {\n      main: colors.blue[700],\n    },\n    secondary: {\n      main: colors.red[700],\n    },\n    info: {\n      main: colors.blue[700],\n    },\n  },\n});\n\nexport const simpleBoxShadow = '0px 2px 10px 1px rgba(0, 0, 0, 0.4)';\n\nexport default theme;\n","export const fullVertexShader = `\r\nattribute vec4 position;\r\n\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\n// This \"position\" array specifies the vertex positions of the element\r\n// to be displayed by the vertex shader. It represents two triangles,\r\n// each filling half of the screen diagonally, and together filling the\r\n// full canvas space to allow the fragment shader to act on the full canvas.\r\nexport const fullscreenVertexArray = {\r\n  position: {\r\n    numComponents: 3,\r\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\r\n  },\r\n};\r\n","import React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { animated } from 'react-spring';\nimport * as twgl from 'twgl.js';\nimport { vScale } from 'vec-la-fp';\nimport { WebGLCanvasProps } from '../../common/render';\nimport { fullscreenVertexArray, fullVertexShader } from '../../shaders/fullVertexShader';\n\n// https://mariusschulz.com/blog/typing-destructured-object-parameters-in-typescript\n// https://stackoverflow.com/a/50294843/9184658\nconst WebGLCanvas = React.forwardRef<\n  HTMLCanvasElement,\n  WebGLCanvasProps & { mini?: boolean }\n>((props, refAny) => {\n  // const { mini = false, ...rest } = props;\n  // props:\n  // id\n  // fragShader\n  // -- uniforms:\n  //    u_zoom\n  //    u_pos\n  //    u_maxI\n  // ref\n  // glRef\n\n  const canvasRef = refAny as React.MutableRefObject<HTMLCanvasElement>;\n\n  const gl = useRef<WebGLRenderingContext | null>();\n  const renderRequestRef = useRef<number>();\n  const bufferInfo = useRef<twgl.BufferInfo>();\n  const programInfo = useRef<twgl.ProgramInfo>();\n\n  const u = props.u;\n  const setFps = props.fps;\n\n  // have a zoom callback\n  const zoom = useCallback(() => (props.mini ? 1.0 : props.u.zoom.getValue()), [\n    props.mini,\n    props.u.zoom,\n  ]);\n  const currZoom = useRef(zoom());\n\n  const dpr = props.useDPR ? window.devicePixelRatio : 1;\n\n  // useEffect(() => {\n  //   console.log(props.cursor?.getValue());\n  // });\n\n  // initial context-getter\n  useEffect(() => {\n    // console.log(gl);\n    // console.log(gl.current);\n    gl.current = canvasRef.current.getContext('webgl');\n  }, [canvasRef]);\n\n  useEffect(() => {\n    // console.log(`got canvas context: ${gl.current}`);\n    bufferInfo.current = twgl.createBufferInfoFromArrays(\n      gl.current as WebGLRenderingContext,\n      fullscreenVertexArray,\n    );\n  }, [gl]);\n\n  useEffect(() => {\n    currZoom.current = props.u.zoom.getValue();\n  }, [props.u]);\n\n  // re-compile program if shader changes\n  useEffect(() => {\n    programInfo.current = twgl.createProgramInfo(gl.current as WebGLRenderingContext, [\n      fullVertexShader,\n      props.fragShader,\n    ]);\n  }, [gl, props.fragShader]);\n\n  const then = useRef(0);\n  const frames = useRef(0);\n  const elapsedTime = useRef(0);\n  // fps update interval\n  const interval = 1000;\n  // const mult = 1000 / interval;\n  // the main render function for WebGL\n  const render = useCallback(\n    (time) => {\n      twgl.resizeCanvasToDisplaySize(canvasRef.current, dpr);\n      (gl.current as WebGLRenderingContext).viewport(\n        0,\n        0,\n        canvasRef.current.width,\n        canvasRef.current.height,\n      );\n\n      const uniforms = {\n        resolution: [canvasRef.current.width, canvasRef.current.height],\n        u_zoom: zoom(),\n        u_c:\n          u.c === undefined ? 0 : u.c.getValue().map((x) => x * u.screenScaleMultiplier),\n        u_xy: vScale(u.screenScaleMultiplier, u.xy.getValue()),\n        u_maxI: u.maxI,\n        u_theta: u.theta?.getValue(),\n      };\n\n      (gl.current as WebGLRenderingContext).useProgram(\n        (programInfo.current as twgl.ProgramInfo).program,\n      );\n      twgl.setBuffersAndAttributes(\n        gl.current as WebGLRenderingContext,\n        programInfo.current as twgl.ProgramInfo,\n        bufferInfo.current as twgl.BufferInfo,\n      );\n      twgl.setUniforms(programInfo.current as twgl.ProgramInfo, uniforms);\n      twgl.drawBufferInfo(\n        gl.current as WebGLRenderingContext,\n        bufferInfo.current as twgl.BufferInfo,\n      );\n\n      // calculate fps\n      if (setFps !== undefined) {\n        frames.current++;\n        elapsedTime.current += time - then.current;\n        then.current = time;\n\n        // console.log(elapsedTime.current);\n        if (elapsedTime.current >= interval) {\n          //multiply with (1000 / elapsed) for accuracy\n          setFps((frames.current * (interval / elapsedTime.current)).toFixed(1));\n          frames.current = 0;\n          elapsedTime.current -= interval;\n\n          // document.getElementById('test').innerHTML = fps;\n        }\n        // time *= 0.001;                      // convert to seconds\n        // const deltaTime = time - then.current; // compute time since last frame\n        // then.current = time;                // remember time for next frame\n        // const fs = 1 / deltaTime;           // compute frames per second\n        // console.log(fs);\n        // (fs.toFixed(1));  // update fps display\n      }\n\n      // The 'state' will always be the initial value here\n      renderRequestRef.current = requestAnimationFrame(render);\n    },\n    [gl, u, zoom, dpr, setFps, interval, canvasRef],\n  );\n\n  //\n  useEffect(() => {\n    renderRequestRef.current = requestAnimationFrame(render);\n    return () => cancelAnimationFrame(renderRequestRef.current as number);\n  }, [render]);\n\n  return (\n    <animated.canvas\n      className=\"renderer\"\n      ref={refAny}\n      style={{\n        // cursor should show whether the viewer is being grabbed\n        cursor: props.dragging ? 'grabbing' : 'grab',\n        // adding style allows direct style override\n        ...props.style,\n      }}\n    />\n  );\n});\n\nWebGLCanvas.displayName = 'WebGLCanvas';\n\nexport default WebGLCanvas;\n","import { ButtonBase, Grow } from '@material-ui/core';\nimport React from 'react';\nimport { MinimapViewerProps } from '../../common/render';\nimport { simpleBoxShadow } from '../../theme/theme';\nimport WebGLCanvas from './WebGLCanvas';\n\nconst miniSize = 100;\n// TODO: make square with rounded corners?\nconst borderRadius = 8;\n\nconst MinimapViewer = (props: MinimapViewerProps): JSX.Element => {\n  const { canvasRef, onClick, show, ...rest } = props;\n  return (\n    <Grow in={show}>\n      <ButtonBase\n        style={{\n          position: 'absolute',\n          // make minimap stick out through backdrop\n          zIndex: 1300,\n          margin: '0.5rem',\n          left: 0,\n          bottom: 0,\n          // cursor: 'pointer',\n          height: miniSize,\n          width: miniSize,\n          borderRadius: borderRadius,\n          // border: \"1px solid #000\",\n          boxShadow: simpleBoxShadow,\n          overflow: 'hidden',\n          // opacity: zoom.interpolate((z) => _.clamp(z - 1, 0, 1)),\n          // display: zoom.interpolate((z) => (_.clamp(z - 1, 0, 1) === 0 ? 'none' : 'block')),\n        }}\n        onClick={onClick}\n      >\n        {/* <animated.div */}\n        {/* // \n      // > */}\n        <WebGLCanvas\n          mini={true}\n          ref={canvasRef}\n          {...rest}\n          // setting border radius here stops the canvas clickable area from overflowing\n          // outside the div circle, which would make the clickable area a rectangle\n          style={{\n            borderRadius: borderRadius,\n            // cursor should be \"pointer\" (looks clickable) if this is a minimap,\n            cursor: 'pointer',\n          }}\n        />\n        {/* </animated.div> */}\n      </ButtonBase>\n    </Grow>\n  );\n};\nexport default MinimapViewer;\n","import _ from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { addV } from 'react-use-gesture';\nimport { vRotate, vScale } from 'vec-la-fp';\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => ({\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }),\n    [isClient],\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      // return false;\n      return () => {};\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\n// a touchbind for re-using across renderers\nexport function genericTouchBind({\n  domTarget,\n  posControl,\n  zoomControl,\n  rotCtrl,\n  screenScaleMultiplier,\n  // gl,\n  setDragging,\n}) {\n  const [{ xy }, setControlXY] = posControl;\n  const [{ z, minZoom, maxZoom }, setControlZoom] = zoomControl;\n  const [{ theta }, setRotCtrl] = rotCtrl || [{ theta: { getValue: () => 0 } }, () => {}];\n  return {\n    binds: {\n      // prevent some browser events such as swipe-based navigation or\n      // pinch-based zoom and instead redirect them to this handler\n      onDragStart: ({ event }) => event.preventDefault(),\n      onPinchStart: ({ event }) => event.preventDefault(),\n\n      onPinch: ({\n        vdva: [vd],\n        down,\n        delta: [dx],\n        origin,\n        first,\n        memo = [xy.getValue()],\n        zoom = z.getValue(),\n      }) => {\n        if (first) {\n          let [p] = memo;\n          return [p, origin];\n        }\n        // initial origin access\n        // let [p, initialOrigin] = memo;\n        let newZ = zoom * (1 + dx * 5e-3);\n        let newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\n\n        // let realZoom = gl.current.canvas.height * newZclamp * screenScaleMultiplier;\n        // let plotMovement = scale(subV(origin, initialOrigin), -2/realZoom);\n        // let relMove = [plotMovement[0], -plotMovement[1]];\n\n        setControlZoom({\n          z: newZclamp,\n          immediate: down,\n          config: {\n            // value needs revising, currently too slow\n            velocity: 10 * vd,\n          },\n        });\n\n        // setControlPos({\n        //   pos: addV(p, relMove),                    // add the displacement to the starting position\n        //   immediate: down,                                  // immediately apply if the gesture is active\n        // });\n\n        return memo;\n      },\n\n      onWheel: ({ movement: [, my], active, zoom = z.getValue() }) => {\n        // x, y obtained from event\n        let newZ = zoom * (1 - my * (my < 0 ? 3e-4 : 2e-4));\n\n        setControlZoom({\n          z: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\n          immediate: active,\n          config: {\n            // velocity: active ? 0 : 10,\n          },\n        });\n\n        return zoom;\n      },\n\n      onDrag: ({\n        down,\n        movement,\n        velocity,\n        direction,\n        pinching,\n        memo = { xy: xy.getValue(), theta: theta.getValue() },\n      }) => {\n        // let pinch handle movement\n        if (pinching) return;\n        // change according to this formula:\n        // move (x, y) in the opposite direction of drag (pan with cursor)\n        // divide by canvas size to scale appropriately\n        // multiply by 2 to correct scaling on viewport (?)\n        // use screen multiplier for more granularity\n        let realZoom = domTarget.current.height * z.getValue() * screenScaleMultiplier;\n\n        let plotMovement = vScale(-2 / realZoom, movement);\n\n        let relMove = [plotMovement[0], -plotMovement[1]];\n        let relDir = [direction[0], -direction[1]];\n\n        // console.log(memo.xy);\n        // console.log(relMove);\n        const t = theta.getValue();\n\n        setControlXY({\n          // add to the current position the relative displacement (relMove), rotated by theta,\n          // to maintain the correct displacement direction (without this it would move as if theta=0)\n          xy: addV(memo.xy, vRotate(t, relMove)), // add the displacement to the starting position\n          immediate: down, // immediately apply if the gesture is active\n          config: {\n            // velocity also needs to be rotated according to theta\n            velocity: vScale(-velocity / realZoom, vRotate(t, relDir)), // set the velocity (gesture momentum)\n            decay: true,\n          },\n        });\n\n        // tell the renderer that it's being dragged on\n        setDragging(down);\n        // try {\n        // } catch (e) {}\n\n        return memo;\n      },\n    },\n    config: {\n      eventOptions: { passive: false, capture: false },\n      domTarget: domTarget,\n      // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\n      // for specific gesture options. See here for more details.\n      // drag: {\n      //   bounds,\n      //   rubberband: true,\n      // }\n    },\n  };\n}\n","import { Slider, Switch } from '@material-ui/core';\nimport React from 'react';\nimport {\n  settingsDefinitionsType,\n  settingsGroupType,\n  settingsWidgetType,\n} from '../../common/settings';\n\nexport const defaultSettings = {\n  showMinimap: true,\n  showCrosshair: true,\n  showCoordinates: true,\n  maxI: 250,\n  showFPS: false,\n  useDPR: false,\n  useAA: false,\n};\n\nexport const settingsWidgets = (\n  settings: settingsDefinitionsType,\n): settingsWidgetType => ({\n  showMinimap: {\n    k: 'showMinimap',\n    label: 'Minimap',\n    checked: settings.showMinimap,\n    control: <Switch />,\n  },\n  showCrosshair: {\n    k: 'showCrosshair',\n    label: 'Crosshair',\n    checked: settings.showCrosshair,\n    control: <Switch />,\n  },\n  showCoordinates: {\n    k: 'showCoordinates',\n    label: 'Show coordinates',\n    checked: settings.showCoordinates,\n    control: <Switch />,\n  },\n  maxI: {\n    k: 'maxI',\n    label: 'Iterations',\n    value: settings.maxI,\n    labelPlacement: 'top',\n    style: {\n      marginLeft: 0,\n      marginRight: 0,\n    },\n    control: (\n      <Slider\n        min={10}\n        max={1000}\n        step={10}\n        valueLabelDisplay=\"auto\"\n        marks={[\n          { value: 10, label: 10 },\n          { value: 250, label: 250 },\n          { value: 500, label: 500 },\n          { value: 750, label: 750 },\n          { value: 1000, label: 1000 },\n        ]}\n      />\n    ),\n  },\n  useDPR: {\n    k: 'useDPR',\n    // https://stackoverflow.com/a/12830454/9184658\n    // // There is a downside that values like 1.5 will give \"1.50\" as the output. A fix suggested by @minitech:\n    // var numb = 1.5;\n    // numb = +numb.toFixed(2);\n    // // Note the plus sign that drops any \"extra\" zeroes at the end.\n    // // It changes the result (which is a string) into a number again (think \"0 + foo\"),\n    // // which means that it uses only as many digits as necessary.\n    label: `Use pixel ratio (${+window.devicePixelRatio.toFixed(3)})`,\n    checked: settings.useDPR,\n    control: <Switch />,\n  },\n  useAA: {\n    k: 'useAA',\n    label: `Anti-aliasing (slow)`,\n    checked: settings.useAA,\n    control: <Switch />,\n  },\n  showFPS: {\n    k: 'showFPS',\n    label: `Show FPS`,\n    checked: settings.showFPS,\n    control: <Switch />,\n  },\n});\n\nexport const getSettingsWidgetsGrouping = (\n  settingsWidgets: settingsWidgetType,\n): Array<settingsGroupType> => [\n  {\n    name: 'Interface',\n    widgets: [\n      settingsWidgets.showMinimap,\n      settingsWidgets.showCrosshair,\n      settingsWidgets.showCoordinates,\n    ],\n  },\n  {\n    name: 'Graphics',\n    widgets: [\n      settingsWidgets.maxI,\n      settingsWidgets.useDPR,\n      settingsWidgets.useAA,\n      settingsWidgets.showFPS,\n    ],\n  },\n];\n\nexport default defaultSettings;\n","import React, { createContext, ReactNode, useState } from 'react';\nimport { SettingsContextType, settingsDefinitionsType } from '../../common/settings';\nimport defaultSettings, { settingsWidgets } from './SettingsDefinitions';\n\nexport const SettingsContext = createContext<SettingsContextType>({\n  // provide the context with the default values\n  settings: defaultSettings,\n  // can't set state until it's initialized\n  setSettings: () => {\n    return;\n  },\n  settingsWidgets: settingsWidgets(defaultSettings),\n});\n\n// export const useSettings = (): SettingsContextType => useContext(SettingsContext);\n\nexport const SettingsProvider = ({ children }: { children: ReactNode }): JSX.Element => {\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\n  // no grouping: all settings are accessible\n  const [settings, setSettings] = useState<settingsDefinitionsType>(defaultSettings);\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        settings,\n        setSettings,\n        settingsWidgets: settingsWidgets(settings),\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsProvider;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport newSmoothJuliaShader from '../../shaders/newSmoothJuliaShader';\nimport MinimapViewer from './MinimapViewer';\nimport { genericTouchBind } from '../utils';\nimport WebGLCanvas from './WebGLCanvas';\nimport { SettingsContext } from '../settings/SettingsContext';\n\nexport default function JuliaRenderer(props) {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef();\n  const miniCanvasRef = useRef();\n\n  const gl = useRef();\n  const miniGl = useRef();\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  const screenScaleMultiplier = props.screenmult;\n\n  // read incoming props\n  const [{ xy }] = props.controls.xyCtrl;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1;\n\n  const fragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: AA,\n    // showCrosshair: false,\n  });\n\n  const miniFragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: 2,\n    // showCrosshair: false,\n  });\n\n  const [dragging, setDragging] = useState(false);\n\n  let gtb = genericTouchBind({\n    domTarget: canvasRef,\n    posControl: props.controls.xyCtrl,\n    zoomControl: props.controls.zoomCtrl,\n    screenScaleMultiplier:\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1),\n    gl: gl,\n    setDragging: setDragging,\n  });\n\n  let touchBind = useGesture(gtb.binds, gtb.config);\n\n  useEffect(touchBind, [touchBind]);\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <WebGLCanvas\n            id=\"julia\"\n            fragShader={fragShader}\n            useDPR={props.useDPR}\n            u={{\n              zoom: z,\n              xy: xy,\n              c: props.c,\n              maxI: maxI,\n              screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            ref={canvasRef}\n            glRef={gl}\n            dragging={dragging}\n          />\n          <MinimapViewer\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={{\n              zoom: z,\n              xy: xy,\n              maxI: maxI,\n              c: props.c,\n              screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            canvasRef={miniCanvasRef}\n            glRef={miniGl}\n            onClick={() => setControlZoom({ zoom: 1 })}\n            show={settings.showMinimap}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// TODO set max iterations as parameter, crosshair as parameter\n\nconst makeCrosshair = (stroke: number, radius: number) => ({\n  stroke,\n  radius,\n});\n\nexport const standardCrosshair = makeCrosshair(2, 100);\nexport const miniCrosshair = makeCrosshair(1, 30);\n\nexport interface MandelbrotShaderParams {\n  maxI: number;\n  /** Radial boundary */\n  B: number;\n  /** Anti-aliasing samples */\n  AA: number;\n}\n\nconst newSmoothMandelbrotShader = (\n  { maxI = 300, AA = 1, B = 64 },\n  showCrosshair = true,\n  crosshairShape = {\n    stroke: 2,\n    radius: 100,\n  },\n): string => {\n  return `\n// Adapted by Joao Maio/2019, based on work by inigo quilez - iq/2013\n// License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n\n// See here for more information on smooth iteration count:\n// http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\n\n#define false 0\n#define true 1\n\n// render parameters\n#define AA ${AA}\n#define MAXI ${maxI}\n#define B ${B.toFixed(1)}\n\n// crosshair parameters\n#define show_crosshair ${showCrosshair}\n#define cross_stroke ${crosshairShape.stroke.toFixed(1)}\n#define cross_radius ${crosshairShape.radius.toFixed(1)}\n\n// set high float precision (lower than this may break colours on mobile)\nprecision highp float;\n\n// need to know the resolution of the canvas\nuniform vec2 resolution;\n\n// properties should be passed as uniforms\nuniform int   u_maxI;  \nuniform vec2  u_xy;\nuniform float u_zoom;\nuniform float u_theta;\n\nbool crosshair( float x, float y ) {\n  float abs_x = abs(2.0*x - resolution.x);\n  float abs_y = abs(2.0*y - resolution.y);\n\n  return \n  // crosshair in centre of screen\n  (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\n  // crosshair size / \"radius\"\n  (abs_x <= cross_radius && abs_y <= cross_radius);\n}\n\nfloat mandelbrot( in vec2 c ) {\n    {\n        float c2 = dot(c, c);\n        // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\n        if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\n        // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\n        if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\n    }\n\n    float l = 0.0;\n    vec2 z  = vec2(0.0);\n    for( int i=0; i<MAXI; i++ )\n    {\n        z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n        if( dot(z,z)>(B*B) ) break;\n        l += 1.0;\n    }\n\n    // maxed out iterations\n    if( l>float(MAXI)-1.0 ) return 0.0;\n    \n    // optimized smooth interation count\n    l = l - log2(log2(dot(z,z))) + 4.0;\n\n    return l;\n}\n\nvoid main() {    \n    // set the initial colour to black\n    vec3 col = vec3(0.0);\n\n    // anti-aliasing\n    #if AA>1\n    for( int m=0; m<AA; m++ )\n    for( int n=0; n<AA; n++ )\n    {\n        // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\n        vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n        float w = float(AA*m+n);\n    #else    \n        // adjust pixels to range from [-1, 1]\n        vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n    #endif\n\n    float sinT = sin(u_theta);\n    float cosT = cos(u_theta);\n\n    vec2 xy = vec2( p.x*cosT - p.y*sinT, p.x*sinT + p.y*cosT );\n    // c is based on offset and grid position, z_0 = 0\n    vec2 c = u_xy + xy/u_zoom;\n    \n    float l = mandelbrot(c);\n    col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n\n    // antialiasing\n    #if AA>1\n    }\n    col /= float(AA*AA);\n    #endif\n\n    #if show_crosshair\n    if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\n        col = 1. - col;\n    }\n    #endif\n\n    // Output to screen\n    gl_FragColor = vec4( col, 1.0 );\n}\n    `;\n};\n\nexport default newSmoothMandelbrotShader;\n","import { Card, Grow } from '@material-ui/core';\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { FPSCardProps } from '../../common/info';\n\nconst FPSCard = (props: FPSCardProps): JSX.Element => (\n  <Grow in={props.show}>\n    <Card\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        padding: '4px 12px',\n        margin: 6,\n        fontFamily: 'monospace',\n        borderRadius: 100,\n        fontSize: '1.8rem',\n        zIndex: 1300,\n        userSelect: 'none',\n      }}\n    >\n      <animated.div>{props.fps}</animated.div>\n    </Card>\n  </Grow>\n);\n\nexport default FPSCard;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport { UserHandlersPartial } from 'react-use-gesture/dist/types';\nimport { MandelbrotRendererProps } from '../../common/render';\nimport newSmoothMandelbrotShader, {\n  miniCrosshair,\n  standardCrosshair,\n} from '../../shaders/newSmoothMandelbrotShader';\nimport FPSCard from '../info/FPSCard';\nimport { SettingsContext } from '../settings/SettingsContext';\nimport { genericTouchBind } from '../utils';\nimport MinimapViewer from './MinimapViewer';\nimport WebGLCanvas from './WebGLCanvas';\n\nexport default function MandelbrotRenderer(props: MandelbrotRendererProps): JSX.Element {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const miniCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  // const gl = useRef<WebGLRenderingContext>(null);\n  // const miniGl = useRef<WebGLRenderingContext>(null);\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  const screenScaleMultiplier = props.screenScaleMultiplier; // -> global\n\n  // temporary bounds to prevent excessive panning\n  // eslint-disable-next-line\n  const radialBound = 1;\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\n\n  // read incoming props\n  const [{ xy }] = props.controls.xyCtrl;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ z }, setControlZoom] = props.controls.zoomCtrl;\n  const [{ theta }] = props.controls.rotCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1; // -> global\n\n  const fragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: AA,\n    },\n    props.showCrosshair,\n    standardCrosshair,\n  );\n  const miniFragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: 2,\n    },\n    props.showCrosshair,\n    miniCrosshair,\n  );\n\n  const [dragging, setDragging] = useState(false);\n\n  const gtb = genericTouchBind({\n    domTarget: canvasRef,\n    posControl: props.controls.xyCtrl,\n    zoomControl: props.controls.zoomCtrl,\n    rotCtrl: props.controls.rotCtrl,\n    screenScaleMultiplier:\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1), // -> global\n    // gl: gl,\n    setDragging: setDragging,\n  });\n\n  // @ts-expect-error\n  const touchBind = useGesture(gtb.binds, gtb.config);\n\n  // @ts-expect-error\n  useEffect(touchBind, [touchBind]);\n\n  const [fps, setFps] = useState(0);\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <FPSCard fps={fps} show={settings.showFPS} />\n\n          <WebGLCanvas\n            id=\"mandelbrot\"\n            fragShader={fragShader}\n            useDPR={settings.useDPR}\n            // touchBind={touchBind}\n            u={{\n              zoom: z,\n              xy: xy,\n              theta: theta,\n              maxI: maxI,\n              screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            ref={canvasRef}\n            // glRef={gl}\n            fps={setFps}\n            dragging={dragging}\n          />\n\n          <MinimapViewer\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={{\n              zoom: z,\n              xy: xy,\n              theta: theta,\n              maxI: maxI,\n              screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            canvasRef={miniCanvasRef}\n            // glRef={miniGl}\n            show={settings.showMinimap}\n            onClick={() => setControlZoom({ z: 1 })}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// https://felixgerschau.com/create-a-pwa-update-notification-with-create-react-app/\n\nimport { Button, Snackbar } from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { FC, useEffect } from 'react';\nimport * as serviceWorker from '../serviceWorker';\n\nconst ServiceWorkerWrapper: FC = () => {\n  const [showReload, setShowReload] = React.useState(false);\n  const [waitingWorker, setWaitingWorker] = React.useState<ServiceWorker | null>(null);\n\n  const onSWUpdate = (registration: ServiceWorkerRegistration) => {\n    console.log('Out of date version detected! Triggering snackbar.');\n    setShowReload(true);\n    setWaitingWorker(registration.waiting);\n  };\n\n  useEffect(() => {\n    console.log('Registering Service Worker for update detection...');\n    serviceWorker.register({ onUpdate: onSWUpdate });\n  }, []);\n\n  const reloadPage = () => {\n    // optional chaining was not working here...\n    // https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html\n    waitingWorker && waitingWorker.postMessage({ type: 'SKIP_WAITING' });\n    setShowReload(false);\n    // reload(b: Boolean) is deprecated\n    window.location.reload();\n  };\n\n  return (\n    <Snackbar open={showReload} anchorOrigin={{ vertical: 'top', horizontal: 'center' }}>\n      <Alert\n        severity=\"info\"\n        action={\n          <Button color=\"inherit\" variant=\"outlined\" size=\"small\" onClick={reloadPage}>\n            Update\n          </Button>\n        }\n      >\n        A new version is available!\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default ServiceWorkerWrapper;\n","import {\n  Backdrop,\n  Divider,\n  Fab,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  makeStyles,\n  Popover,\n  Typography,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React, { useState } from 'react';\nimport { SettingsMenuProps } from '../../common/settings';\nimport { SettingsContext } from './SettingsContext';\nimport { getSettingsWidgetsGrouping } from './SettingsDefinitions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 2,\n  },\n  button: {\n    padding: '6px 12px',\n    marginTop: 10,\n  },\n  sliderControl: {\n    width: 30,\n  },\n}));\n\nconst GroupDivider = () => <Divider style={{ marginTop: 10, marginBottom: 4 }} />;\nconst GroupTitle = (props: { title: string }) => (\n  <Typography variant=\"overline\" style={{ fontSize: 14, marginBottom: 4 }}>\n    {props.title}\n  </Typography>\n);\n\nexport default function SettingsMenu(props: SettingsMenuProps): JSX.Element {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = useState<EventTarget & HTMLButtonElement>();\n\n  // interface BottomButtonProps extends {\n  //   icon: JSX.Element;\n  //   text: string;\n  //   color: 'inherit' | 'default' | 'primary' | 'secondary' | undefined;\n  //   onClick: () => void;\n  // }\n  // const BottomButton = (props: BottomButtonProps) => (\n  //   <Button\n  //     variant=\"outlined\"\n  //     color={props.color}\n  //     aria-controls={props.text.toLowerCase()}\n  //     onClick={() => props.onClick()}\n  //     className={classes.button}\n  //     startIcon={<MyLocationIcon />}\n  //   >\n  //     Reset\n  //   </Button>\n  // );\n\n  const ResetButton = () => (\n    <Button\n      startIcon={<MyLocationIcon />}\n      color=\"secondary\"\n      aria-controls=\"reset\"\n      onClick={() => {\n        props.reset();\n      }}\n      className={classes.button}\n    >\n      Reset\n    </Button>\n  );\n  const AboutButton = () => (\n    <Button\n      startIcon={<InfoIcon />}\n      color=\"primary\"\n      aria-controls=\"about\"\n      onClick={() => {\n        props.toggleInfo();\n        setAnchorEl(undefined);\n      }}\n      className={classes.button}\n    >\n      About\n    </Button>\n  );\n\n  return (\n    <div className={classes.root}>\n      <Fab\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        aria-label=\"settings\"\n        size=\"small\"\n        onClick={(e) => setAnchorEl(e.currentTarget)}\n        // className={classes.button}\n      >\n        <SettingsIcon />\n      </Fab>\n      <Backdrop open={Boolean(anchorEl)}>\n        <Popover\n          id=\"menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={() => setAnchorEl(undefined)}\n          anchorOrigin={{\n            horizontal: 'right',\n            vertical: 'bottom',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            style={{\n              paddingLeft: '1.5em',\n              paddingRight: '1.5em',\n              paddingTop: '1em',\n              paddingBottom: '1em',\n            }}\n          >\n            <Grid item container alignItems=\"center\" justify=\"space-around\">\n              <Grid item>\n                <Typography variant=\"h1\" style={{ fontSize: 20, padding: 10 }}>\n                  Configuration\n                </Typography>\n              </Grid>\n              {/* <Divider orientation=\"vertical\" flexItem /> */}\n              {/* <Grid item>\n                <IconButton\n                  aria-label=\"info\"\n                  size=\"medium\"\n                  onClick={() => {\n                    // open info panel\n                    props.toggleInfo();\n                    // close popover\n                    setAnchorEl(undefined);\n                  }}\n                >\n                  <InfoIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Grid> */}\n            </Grid>\n            <SettingsContext.Consumer>\n              {({ setSettings, settingsWidgets }) =>\n                getSettingsWidgetsGrouping(settingsWidgets).map((g) => (\n                  <Grid item key={g.name}>\n                    <GroupDivider />\n                    <GroupTitle title={g.name} />\n                    <FormGroup>\n                      {g.widgets.map((widget) => (\n                        <FormControlLabel\n                          key={`${widget.label}-control`}\n                          style={{ userSelect: 'none' }}\n                          {...widget}\n                          onChange={(e, val) => {\n                            console.log(`${widget.k} -> ${val}`);\n                            setSettings((prevState) => ({\n                              ...prevState,\n                              [widget.k]: val,\n                            }));\n                          }}\n                        />\n                      ))}\n                    </FormGroup>\n                  </Grid>\n                ))\n              }\n            </SettingsContext.Consumer>\n\n            <GroupDivider />\n\n            <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"stretch\">\n              <Grid item>\n                <ResetButton />\n              </Grid>\n              <Grid item style={{ width: '0.5rem' }} />\n              <Grid item>\n                <AboutButton />\n              </Grid>\n            </Grid>\n\n            {/* <Button\n              aria-controls=\"reset\"\n              onClick={() => props.reset()}\n              className={classes.button}\n              startIcon={<MyLocationIcon />}\n            >\n              Reset\n            </Button> */}\n            {/* <Grid item xs>\n                <Button\n                  aria-controls=\"reset\"\n                  onClick={() => props.reset()}\n                  className={classes.button}\n                  startIcon={<MyLocationIcon />}\n                >\n                  Reset\n                </Button>\n              </Grid>\n              <Grid item xs>\n                <Button\n                  aria-label=\"info\"\n                  size=\"medium\"\n                  onClick={() => {\n                    // open info panel\n                    props.toggleInfo();\n                    // close popover\n                    setAnchorEl(undefined);\n                  }}\n                  className={classes.button}\n                  startIcon={<InfoIcon />}\n                >\n                  About\n                </Button>\n              </Grid> */}\n          </Grid>\n        </Popover>\n      </Backdrop>\n    </div>\n  );\n}\n","import { Grid, ThemeProvider } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { OpaqueInterpolation, useSpring } from 'react-spring';\nimport { vScale } from 'vec-la-fp';\nimport './App.css';\nimport {\n  ViewerRotationControl,\n  ViewerXYControl,\n  ViewerZoomControl,\n  ZoomType,\n} from './common/types';\nimport CoordinatesCard from './components/info/CoordinatesCard';\nimport ChangeCoordinatesCard from './components/info/ChangeCoordinatesCard';\nimport InfoDialog from './components/info/InfoDialog';\nimport JuliaRenderer from './components/render/JuliaRenderer';\n// import 'typeface-roboto';\nimport MandelbrotRenderer from './components/render/MandelbrotRenderer';\nimport ServiceWorkerWrapper from './components/ServiceWorkerWrapper';\nimport SettingsProvider, { SettingsContext } from './components/settings/SettingsContext';\nimport SettingsMenu from './components/settings/SettingsMenu';\nimport { useWindowSize } from './components/utils';\nimport theme from './theme/theme';\n\nexport const defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\n\nexport const resetPosSpringConfig = { mass: 1, tension: 200, friction: 75 };\nexport const resetZoomSpringConfig = { mass: 1, tension: 300, friction: 60 };\n\nexport const startPos: [number, number] = [-0.7746931, 0.1242266];\nexport const startZoom = 85.0;\nexport const startTheta = 0.6;\nexport const screenScaleMultiplier = 1e-7;\n\nfunction App(): JSX.Element {\n  const size = useWindowSize();\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n\n  // const startPos = [-.7426482, .1271875 ];\n  // const startPos = [-0.1251491, -0.8599647];\n\n  // interface posInterface extends UseSpringBaseProps {\n  //   pos: [number, number],\n  //   config: SpringConfig,\n  // }\n\n  const mandelbrotControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: vScale(1 / screenScaleMultiplier, startPos),\n      config: defaultSpringConfig,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: startTheta, // should this be rad or deg? rad\n      // last_pointer_angle: 0,\n      // itheta: 0,\n      config: defaultSpringConfig,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: startZoom,\n      // last_pointer_dist: 0,\n\n      minZoom: 0.5,\n      maxZoom: 100000,\n\n      config: { mass: 1, tension: 600, friction: 50 },\n    })),\n  };\n\n  // const [a] = mandelbrotControls.xyCtrl;\n  // typeof a.xy;\n\n  const juliaControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: [0, 0] as [number, number],\n      config: defaultSpringConfig,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: startTheta, // should this be rad or deg? rad\n      // last_pointer_angle: 0,\n      // itheta: 0,\n      config: defaultSpringConfig,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      z: 0.5 as number,\n      // last_pointer_dist: 0,\n\n      minZoom: 0.5,\n      maxZoom: 100000,\n\n      config: { mass: 1, tension: 600, friction: 50 },\n    })),\n  };\n\n  const reset = () => {\n    mandelbrotControls.xyCtrl[1]({\n      xy: [0, 0],\n      config: resetPosSpringConfig,\n    });\n    mandelbrotControls.zoomCtrl[1]({\n      z: 1,\n      config: resetZoomSpringConfig,\n    });\n\n    juliaControls.xyCtrl[1]({\n      xy: [0, 0],\n      config: resetPosSpringConfig,\n    });\n    juliaControls.zoomCtrl[1]({\n      z: 1,\n      config: resetZoomSpringConfig,\n    });\n  };\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const toggleInfo = () => setShowInfo(!showInfo);\n\n  // const { settings } = useSettings();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <ServiceWorkerWrapper />\n      <SettingsProvider>\n        <Grid container>\n          <SettingsContext.Consumer>\n            {({ settings }) => (\n              <Grid\n                item\n                container\n                direction={\n                  (size.width || 1) < (size.height || 0) ? 'column-reverse' : 'row'\n                }\n                justify=\"center\"\n                className=\"fullSize\"\n                style={{\n                  position: 'absolute',\n                }}\n              >\n                <div\n                  style={{\n                    position: 'absolute',\n                    right: 0,\n                    top: 0,\n                    margin: 20,\n                    width: 'auto',\n                  }}\n                >\n                  <CoordinatesCard\n                    show={settings.showCoordinates}\n                    mandelbrot={{\n                      xy: mandelbrotControls.xyCtrl[0].xy,\n                      zoom: mandelbrotControls.zoomCtrl[0].z as OpaqueInterpolation<\n                        ZoomType\n                      >,\n                      theta: mandelbrotControls.rotCtrl[0].theta,\n                    }}\n                    screenScaleMultiplier={screenScaleMultiplier}\n                  />\n                  <ChangeCoordinatesCard\n                    show={settings.showCoordinates}\n                    mandelbrot={mandelbrotControls}\n                    screenScaleMultiplier={screenScaleMultiplier}\n                  />\n                </div>\n                <Grid item xs className=\"renderer\">\n                  <MandelbrotRenderer\n                    controls={mandelbrotControls}\n                    screenScaleMultiplier={screenScaleMultiplier}\n                    {...settings}\n                  />\n                </Grid>\n                <Grid item xs className=\"renderer\">\n                  <JuliaRenderer\n                    c={mandelbrotControls.xyCtrl[0].xy}\n                    controls={juliaControls}\n                    screenmult={screenScaleMultiplier}\n                    {...settings}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </SettingsContext.Consumer>\n\n          <SettingsMenu reset={() => reset()} toggleInfo={() => toggleInfo()} />\n\n          <InfoDialog ctrl={[showInfo, setShowInfo]} />\n        </Grid>\n      </SettingsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.register();\n"],"sourceRoot":""}