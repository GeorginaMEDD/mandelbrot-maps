{"version":3,"sources":["components/info/CoordinatesCard.tsx","components/InfoDialog.jsx","shaders/newSmoothJuliaShader.js","theme/theme.tsx","shaders/fullVertexShader.js","components/WebGLCanvas.tsx","components/render/MinimapViewer.tsx","components/SettingsDefinitions.tsx","components/SettingsWrapper.tsx","components/utils.js","components/JuliaRenderer.jsx","shaders/newSmoothMandelbrotShader.js","theme/ToggleableFade.tsx","components/info/FPSCard.tsx","components/MandelbrotRenderer.jsx","components/SettingsMenu.jsx","App.tsx","serviceWorker.js","index.tsx"],"names":["CoordinatesCard","props","Grow","in","show","Card","style","width","position","zIndex","right","top","margin","padding","Typography","align","fontFamily","fontSize","span","mandelbrot","interpolate","x","y","screenScaleMultiplier","toFixed","DialogTitle","withStyles","theme","root","spacing","display","flexDirection","image","marginTop","marginBottom","marginRight","height","closeButton","marginLeft","color","palette","grey","children","classes","onClose","other","disableTypography","className","src","alt","variant","IconButton","aria-label","onClick","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","Alert","elevation","InfoDialog","ctrl","open","setOpen","useState","snackBarOpen","setSnackBarOpen","handleClose","clientData","window","jscd","Dialog","aria-labelledby","maxWidth","id","dividers","gutterBottom","Link","href","target","Divider","Box","TableContainer","component","Paper","Table","size","TableHead","TableRow","TableCell","colSpan","TableBody","Object","entries","map","k","v","key","String","Button","data","navigator","clipboard","writeText","e","prompt","writeToClipboard","JSON","stringify","startIcon","Snackbar","autoHideDuration","severity","autoFocus","surveyLink","newSmoothJuliaShader","maxI","AA","B","createMuiTheme","MuiSwitch","fullscreenVertexArray","numComponents","WebGLCanvas","React","forwardRef","refAny","ref","gl","glRef","renderRequestRef","useRef","bufferInfo","programInfo","u","setFps","fps","zoom","mini","getValue","currZoom","dpr","useDPR","devicePixelRatio","useEffect","current","getContext","twgl","fragShader","then","frames","elapsedTime","render","useCallback","time","viewport","canvas","uniforms","resolution","u_zoom","u_c","undefined","c","u_xy","vScale","xy","u_maxI","useProgram","program","requestAnimationFrame","cancelAnimationFrame","cursor","dragging","displayName","MinimapViewer","canvasRef","rest","ButtonBase","left","bottom","borderRadius","boxShadow","overflow","settingsWidgets","settings","showMinimap","label","checked","control","Switch","showCrosshair","showCoordinates","value","labelPlacement","Slider","min","max","step","valueLabelDisplay","marks","useAA","showFPS","defaultSettings","SettingsContext","createContext","setSettings","SettingsProvider","Provider","genericTouchBind","domTarget","posControl","zoomControl","setDragging","setControlXY","minZoom","maxZoom","setControlZoom","binds","onDragStart","event","preventDefault","onPinchStart","onPinch","vd","vdva","down","dx","delta","origin","first","memo","z","newZ","newZclamp","_","clamp","immediate","config","velocity","onWheel","my","movement","active","onDrag","direction","pinching","realZoom","plotMovement","relMove","relDir","addV","decay","eventOptions","passive","capture","JuliaRenderer","miniCanvasRef","miniGl","screenmult","controls","xyCtrl","zoomCtrl","miniFragShader","gtb","touchBind","useGesture","Consumer","makeCrosshair","stroke","radius","standardCrosshair","miniCrosshair","newSmoothMandelbrotShader","crosshairShape","ToggleableFade","t","duration","visibility","opacity","transition","FPSCard","userSelect","div","MandelbrotRenderer","useStyles","makeStyles","button","sliderControl","GroupDivider","GroupTitle","title","SettingsMenu","anchorEl","setAnchorEl","Fab","aria-controls","aria-haspopup","currentTarget","Backdrop","Boolean","Popover","keepMounted","anchorOrigin","horizontal","vertical","transformOrigin","Grid","container","paddingLeft","paddingRight","paddingTop","paddingBottom","item","alignItems","justify","orientation","flexItem","toggleInfo","name","widgets","getSettingsWidgetsGrouping","g","FormGroup","widget","FormControlLabel","onChange","val","console","log","prevState","reset","App","isClient","getSize","innerWidth","innerHeight","windowSize","setWindowSize","handleResize","addEventListener","removeEventListener","useWindowSize","defaultSpringConfig","mass","tension","friction","startPos","mandelbrotControls","useSpring","rotCtrl","theta","juliaControls","resetPosSpringConfig","resetZoomSpringConfig","showInfo","setShowInfo","miniViewer","crosshair","coords","aa","ThemeProvider","xs","maxiter","minimap","isLocalhost","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","document","getElementById","URL","process","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0f9a1cd4.chunk.js","sourcesContent":["import { Card, Grow, Typography } from '@material-ui/core';\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { CoordinatesCardProps } from './info';\n\nconst CoordinatesCard = (props: CoordinatesCardProps): JSX.Element => {\n  return (\n    <Grow in={props.show}>\n      <Card\n        style={{\n          width: 'auto',\n          position: 'absolute',\n          zIndex: 1300,\n          right: 0,\n          top: 0,\n          margin: 20,\n          padding: '6px 12px',\n          // display: props.show ? 'block' : 'none',\n          // borderRadius: 100,\n        }}\n      >\n        <Typography align=\"right\" style={{ fontFamily: 'monospace', fontSize: '1.2rem' }}>\n          {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n          {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n          <animated.span>\n            {props.mandelbrot.interpolate(\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n              (x, y) => `${(x * props.screenScaleMultiplier).toFixed(7)} : x`,\n            )}\n          </animated.span>\n          <br />\n          <animated.span>\n            {props.mandelbrot.interpolate(\n              // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n              (x, y) => `${(y * props.screenScaleMultiplier).toFixed(7)} : y`,\n            )}\n          </animated.span>\n        </Typography>\n      </Card>\n    </Grow>\n  );\n};\n\nexport default CoordinatesCard;\n\n// <Card\n//   style={{\n//     width: 'auto',\n//     position: 'absolute',\n//     zIndex: 2,\n//     right: 0,\n//     top: 0,\n//     margin: 20,\n//     padding: 8,\n//     display: settings.coords[0] ? 'block' : 'none',\n//     // borderRadius: 100,\n//   }}\n// >\n//   <Typography align=\"right\">\n//     {/* https://www.typescriptlang.org/docs/handbook/basic-types.html#tuple */}\n//     {/* https://www.typescriptlang.org/docs/handbook/2/objects.html#tuple-types */}\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(x * screenScaleMultiplier).toFixed(7)} : x`,\n//       )}\n//     </animated.span>\n//     <br />\n//     <animated.span>\n//       {mandelbrotControls.xyCtrl[0].xy.interpolate(\n//         // @ts-expect-error: Function call broken in TS, waiting till react-spring v9 to fix\n//         (x, y) => `${(y * screenScaleMultiplier).toFixed(7)} : y`,\n//       )}\n//     </animated.span>\n//   </Typography>\n// </Card>;\n","import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n  Link,\r\n  TableContainer,\r\n  Table,\r\n  Paper,\r\n  TableRow,\r\n  TableCell,\r\n  TableHead,\r\n  TableBody,\r\n  Box,\r\n  Divider,\r\n  Snackbar,\r\n} from '@material-ui/core';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { surveyLink } from './surveyLink.json';\r\n\r\n// for evaluating build time\r\nimport preval from 'preval.macro';\r\n\r\nconst dateTimeStamp = preval`module.exports = new Date();`;\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    // align: \"middle\",\r\n  },\r\n  image: {\r\n    marginTop: 'auto',\r\n    marginBottom: 'auto',\r\n    marginRight: 8,\r\n    height: 50,\r\n  },\r\n  closeButton: {\r\n    // position: 'absolute',\r\n    // right: theme.spacing(1),\r\n    // top: theme.spacing(1),\r\n    marginLeft: 'auto',\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <img src=\"logo-512.png\" alt=\"Mandelbrot Maps logo\" className={classes.image} />\r\n      <Typography variant=\"h1\" style={{ fontSize: 24, marginTop: 'auto', marginBottom: 'auto' }}>\r\n        {children}\r\n      </Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(3),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function InfoDialog(props) {\r\n  const [open, setOpen] = props.ctrl;\r\n  const [snackBarOpen, setSnackBarOpen] = useState(false);\r\n\r\n  const handleClose = () => setOpen(false);\r\n\r\n  // guard against null / undefined window\r\n  const clientData = window.jscd || {};\r\n\r\n  let writeToClipboard = (data) => {\r\n    try {\r\n      navigator.clipboard.writeText(data);\r\n      setSnackBarOpen(true);\r\n    } catch (e) {\r\n      window.prompt('Auto copy to clipboard failed, copy manually from below:', data);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open} maxWidth=\"md\">\r\n      {/* <div style={{ maxWidth: 700 }}> */}\r\n      <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\r\n        Mandelbrot Maps\r\n      </DialogTitle>\r\n      <DialogContent dividers style={{ maxWidth: 700 }}>\r\n        <Typography gutterBottom>\r\n          Mandelbrot Maps is an interactive fractal explorer built using React and WebGL.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          Developed by{' '}\r\n          <Link href=\"https://jmaio.github.io/\" target=\"_blank\">\r\n            Joao Maio\r\n          </Link>{' '}\r\n          in 2019/2020 as part of an Honours Project at The University of Edinburgh, under the supervision of Philip\r\n          Wadler.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          The project was simultaneously undertaken by Freddie Bawden, also under the supervision of Philip Wadler.\r\n          Freddie's version of the project is available at:{' '}\r\n          <Link href=\"http://mmaps.freddiejbawden.com/\" target=\"_blank\">\r\n            mmaps.freddiejbawden.com\r\n          </Link>\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          The{' '}\r\n          <Link href=\"https://homepages.inf.ed.ac.uk/wadler/mandelbrot-maps/index.html\" target=\"_blank\">\r\n            original Mandelbrot Maps project\r\n          </Link>{' '}\r\n          was developed by Iain Parris in 2008 as a Java Applet.\r\n        </Typography>\r\n        <Typography gutterBottom>\r\n          Mandelbrot set shader code adapted from{' '}\r\n          <Link href=\"https://www.shadertoy.com/view/4df3Rn\">Mandelbrot - smooth</Link> by{' '}\r\n          <Link href=\"http://iquilezles.org/\" target=\"_blank\">\r\n            Inigo Quilez\r\n          </Link>\r\n          .\r\n        </Typography>\r\n        {/* <Typography>\r\n            &copy; Joao Maio 2020\r\n          </Typography> */}\r\n\r\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <TableContainer component={Paper} style={{ width: 'auto', margin: 'auto', maxWidth: 460 }}>\r\n            <Table size=\"small\" aria-label=\"a dense table\">\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell align=\"center\" colSpan={2} variant=\"head\">\r\n                    Device properties\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {Object.entries(clientData).map(([k, v]) => (\r\n                  <TableRow key={k}>\r\n                    <TableCell>{k}</TableCell>\r\n                    <TableCell align=\"right\" style={{ fontFamily: 'monospace' }}>\r\n                      {String(v)}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        </Box>\r\n\r\n        <Divider style={{ marginTop: 30, marginBottom: 30 }} />\r\n\r\n        <Box style={{ display: 'flex' }}>\r\n          <Typography variant=\"overline\" align=\"center\" style={{ margin: 'auto' }}>\r\n            Build:\r\n            <Typography style={{ fontFamily: 'monospace' }}>{dateTimeStamp}</Typography>\r\n            {/* {console.log(new Date(dateTimeStamp).toLocaleString('en-GB', { timeZone: 'UTC' }))} */}\r\n          </Typography>\r\n        </Box>\r\n      </DialogContent>\r\n\r\n      <DialogActions>\r\n        <Button\r\n          onClick={() => {\r\n            writeToClipboard(JSON.stringify(clientData));\r\n          }}\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          startIcon={<FileCopyIcon />}\r\n        >\r\n          Copy\r\n        </Button>\r\n        <Snackbar open={snackBarOpen} autoHideDuration={5000} onClose={() => setSnackBarOpen(false)}>\r\n          <Alert onClose={() => setSnackBarOpen(false)} severity=\"info\">\r\n            Device properties copied!\r\n          </Alert>\r\n        </Snackbar>\r\n        <Button\r\n          autoFocus\r\n          href={surveyLink}\r\n          target=\"_blank\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          startIcon={<LaunchIcon />}\r\n        >\r\n          Feedback\r\n        </Button>\r\n      </DialogActions>\r\n      {/* </div> */}\r\n    </Dialog>\r\n  );\r\n}\r\n","// TODO set max iterations as parameter\r\n\r\nconst newSmoothJuliaShader = ({\r\n  maxI = 300,\r\n  AA = 1,\r\n  B = 64,\r\n  // crosshair = {\r\n  //     stroke: 0,\r\n  //     radius: 0\r\n  // },\r\n}) => `\r\n\r\n#define AA ${AA}\r\n#define MAXI ${maxI}\r\n#define B ${B.toFixed(1)}\r\n\r\n// set high float precision (lower than this may break colours on mobile)\r\nprecision highp float;\r\n\r\n// need to know the resolution of the canvas\r\nuniform vec2 resolution;\r\n\r\n// properties should be passed as uniforms\r\nuniform int   u_maxI;\r\nuniform vec2  u_xy;\r\nuniform vec2  u_c;\r\nuniform float u_zoom;\r\nuniform float u_theta;\r\n\r\nfloat julia( vec2 z, vec2 c ) {\r\n\r\n  float l = 0.0;\r\n  for( int i=0; i<MAXI; i++ )\r\n  {\r\n      z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\r\n      if( dot(z,z)>(B*B) ) break;\r\n      l += 1.0;\r\n  }\r\n\r\n  // maxed out iterations\r\n  if( l>float(MAXI)-1.0 ) return 0.0;\r\n\r\n  // equivalent optimized smooth interation count\r\n  l = l - log2(log2(dot(z,z))) + 4.0;\r\n\r\n  return l;\r\n}\r\n\r\nvoid main() {    \r\n  // set the initial colour to black\r\n  vec3 col = vec3(0.0);\r\n\r\n  // anti-aliasing\r\n  #if AA>1\r\n  for( int m=0; m<AA; m++ )\r\n  for( int n=0; n<AA; n++ )\r\n  {\r\n      vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\r\n      float w = float(AA*m+n);\r\n  #else    \r\n      // adjust pixels to range from [-1, 1]\r\n      vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\r\n  #endif\r\n  \r\n  // constant \"c\" to add, based on mandelbrot position\r\n  vec2 c = u_c;\r\n  vec2 z = u_xy + p/u_zoom;\r\n\r\n  float l = julia(z, c);\r\n  col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\r\n\r\n  // antialiasing\r\n  #if AA>1\r\n  }\r\n  col /= float(AA*AA);\r\n  #endif\r\n\r\n  // Output to screen\r\n  gl_FragColor = vec4( col, 1.0 );\r\n}\r\n`;\r\n\r\nexport default newSmoothJuliaShader;\r\n","import { createMuiTheme } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n  props: {\n    // Name of the component ⚛️\n    MuiSwitch: {\n      // The default props to change\n      color: 'primary', // x, on the whole application 💣!\n    },\n  },\n});\n\nexport const simpleBoxShadow = '0px 2px 10px 1px rgba(0, 0, 0, 0.4)';\n\nexport default theme;\n","export const fullVertexShader = `\r\nattribute vec4 position;\r\n\r\nvoid main() {\r\n  gl_Position = position;\r\n}\r\n`;\r\n\r\n// This \"position\" array specifies the vertex positions of the element\r\n// to be displayed by the vertex shader. It represents two triangles,\r\n// each filling half of the screen diagonally, and together filling the\r\n// full canvas space to allow the fragment shader to act on the full canvas.\r\nexport const fullscreenVertexArray = {\r\n  position: {\r\n    numComponents: 3,\r\n    data: [-1, -1, 0, 1, -1, 0, -1, 1, 0, -1, 1, 0, 1, -1, 0, 1, 1, 0],\r\n  },\r\n};\r\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { animated } from 'react-spring';\nimport * as twgl from 'twgl.js';\nimport { vScale } from 'vec-la-fp';\nimport { WebGLCanvasProps } from '../common/render';\nimport { fullscreenVertexArray, fullVertexShader } from '../shaders/fullVertexShader';\n\n// https://mariusschulz.com/blog/typing-destructured-object-parameters-in-typescript\n// https://stackoverflow.com/a/50294843/9184658\nconst WebGLCanvas = React.forwardRef<\n  HTMLCanvasElement,\n  WebGLCanvasProps & { mini: boolean }\n>((props, refAny) => {\n  // const { mini = false, ...rest } = props;\n  // props:\n  // id\n  // fragShader\n  // -- uniforms:\n  //    u_zoom\n  //    u_pos\n  //    u_maxI\n  // ref\n  // glRef\n\n  const ref = refAny as React.MutableRefObject<HTMLCanvasElement>;\n\n  // variables to hold canvas and webgl information\n  const gl = props.glRef;\n  const renderRequestRef = useRef<number>();\n  const bufferInfo = useRef<twgl.BufferInfo>();\n  const programInfo = useRef<twgl.ProgramInfo>();\n\n  const u = props.u;\n  const setFps = props.fps;\n\n  // have a zoom callback\n  const zoom = props.mini ? () => 1.0 : () => props.u.zoom.getValue();\n  const currZoom = useRef(zoom());\n\n  const dpr = props.useDPR ? window.devicePixelRatio : 1;\n\n  // useEffect(() => {\n  //   console.log(props.cursor?.getValue());\n  // });\n\n  // initial context-getter\n  useEffect(() => {\n    // console.log(gl);\n    // console.log(gl.current);\n    gl.current = (ref as React.MutableRefObject<HTMLCanvasElement>).current.getContext(\n      'webgl',\n    ) as WebGLRenderingContext;\n    // console.log(`got canvas context: ${gl.current}`);\n    bufferInfo.current = twgl.createBufferInfoFromArrays(\n      gl.current as WebGLRenderingContext,\n      fullscreenVertexArray,\n    );\n  }, [gl, ref]);\n\n  useEffect(() => {\n    currZoom.current = props.u.zoom.getValue();\n  }, [props.u]);\n\n  // re-compile program if shader changes\n  useEffect(() => {\n    programInfo.current = twgl.createProgramInfo(gl.current, [\n      fullVertexShader,\n      props.fragShader,\n    ]);\n  }, [gl, props.fragShader]);\n\n  const then = useRef(0);\n  const frames = useRef(0);\n  const elapsedTime = useRef(0);\n  // fps update interval\n  const interval = 1000;\n  // const mult = 1000 / interval;\n  // the main render function for WebGL\n  const render = useCallback(\n    (time) => {\n      twgl.resizeCanvasToDisplaySize(\n        (ref as React.MutableRefObject<HTMLCanvasElement>).current,\n        dpr,\n      );\n      gl.current.viewport(0, 0, gl.current.canvas.width, gl.current.canvas.height);\n\n      const uniforms = {\n        resolution: [gl.current.canvas.width, gl.current.canvas.height],\n        u_zoom: zoom(),\n        u_c:\n          u.c === undefined ? 0 : u.c.getValue().map((x) => x * u.screenScaleMultiplier),\n        u_xy: vScale(u.screenScaleMultiplier, u.xy.getValue()),\n        u_maxI: u.maxI,\n      };\n\n      gl.current.useProgram((programInfo.current as twgl.ProgramInfo).program);\n      twgl.setBuffersAndAttributes(\n        gl.current,\n        programInfo.current as twgl.ProgramInfo,\n        bufferInfo.current as twgl.BufferInfo,\n      );\n      twgl.setUniforms(programInfo.current as twgl.ProgramInfo, uniforms);\n      twgl.drawBufferInfo(gl.current, bufferInfo.current as twgl.BufferInfo);\n\n      // calculate fps\n      if (setFps !== undefined) {\n        frames.current++;\n        elapsedTime.current += time - then.current;\n        then.current = time;\n\n        // console.log(elapsedTime.current);\n        if (elapsedTime.current >= interval) {\n          //multiply with (1000 / elapsed) for accuracy\n          setFps((frames.current * (interval / elapsedTime.current)).toFixed(1));\n          frames.current = 0;\n          elapsedTime.current -= interval;\n\n          // document.getElementById('test').innerHTML = fps;\n        }\n        // time *= 0.001;                      // convert to seconds\n        // const deltaTime = time - then.current; // compute time since last frame\n        // then.current = time;                // remember time for next frame\n        // const fs = 1 / deltaTime;           // compute frames per second\n        // console.log(fs);\n        // (fs.toFixed(1));  // update fps display\n      }\n\n      // The 'state' will always be the initial value here\n      renderRequestRef.current = requestAnimationFrame(render);\n    },\n    [gl, u, zoom, dpr, setFps, interval, ref],\n  );\n\n  //\n  useEffect(() => {\n    renderRequestRef.current = requestAnimationFrame(render);\n    return () => cancelAnimationFrame(renderRequestRef.current as number);\n  }, [render]);\n\n  return (\n    <animated.canvas\n      className=\"renderer\"\n      ref={refAny}\n      style={{\n        // cursor should show whether the viewer is being grabbed\n        cursor: props.dragging ? 'grabbing' : 'grab',\n        // adding style allows direct style override\n        ...props.style,\n      }}\n    />\n  );\n});\n\nWebGLCanvas.displayName = 'WebGLCanvas';\n\nexport default WebGLCanvas;\n","import { ButtonBase, Grow } from '@material-ui/core';\nimport React from 'react';\nimport { MinimapViewerProps } from '../../common/render';\nimport { simpleBoxShadow } from '../../theme/theme';\nimport WebGLCanvas from '../WebGLCanvas';\n\nconst miniSize = 100;\n// TODO: make square with rounded corners?\nconst borderRadius = 8;\n\nconst MinimapViewer = (props: MinimapViewerProps): JSX.Element => {\n  const { canvasRef, onClick, show, ...rest } = props;\n  return (\n    <Grow in={show}>\n      <ButtonBase\n        style={{\n          position: 'absolute',\n          // make minimap stick out through backdrop\n          zIndex: 1300,\n          margin: '0.5rem',\n          left: 0,\n          bottom: 0,\n          // cursor: 'pointer',\n          height: miniSize,\n          width: miniSize,\n          borderRadius: borderRadius,\n          // border: \"1px solid #000\",\n          boxShadow: simpleBoxShadow,\n          overflow: 'hidden',\n          // opacity: zoom.interpolate((z) => _.clamp(z - 1, 0, 1)),\n          // display: zoom.interpolate((z) => (_.clamp(z - 1, 0, 1) === 0 ? 'none' : 'block')),\n        }}\n        onClick={onClick}\n      >\n        {/* <animated.div */}\n        {/* // \n      // > */}\n        <WebGLCanvas\n          mini={true}\n          ref={canvasRef}\n          {...rest}\n          // setting border radius here stops the canvas clickable area from overflowing\n          // outside the div circle, which would make the clickable area a rectangle\n          style={{\n            borderRadius: borderRadius,\n            // cursor should be \"pointer\" (looks clickable) if this is a minimap,\n            cursor: 'pointer',\n          }}\n        />\n        {/* </animated.div> */}\n      </ButtonBase>\n    </Grow>\n  );\n};\nexport default MinimapViewer;\n","import { Slider, Switch } from '@material-ui/core';\nimport React from 'react';\nimport {\n  settingsDefinitionsType,\n  settingsGroupType,\n  settingsWidgetType,\n} from '../common/settings';\n\nexport const defaultSettings = {\n  showMinimap: true,\n  showCrosshair: true,\n  showCoordinates: false,\n  maxI: 250,\n  showFPS: false,\n  useDPR: false,\n  useAA: false,\n};\n\nexport const settingsWidgets = (\n  settings: settingsDefinitionsType,\n): settingsWidgetType => ({\n  showMinimap: {\n    label: 'Minimap',\n    checked: settings.showMinimap,\n    control: <Switch />,\n  },\n  showCrosshair: {\n    label: 'Crosshair',\n    checked: settings.showCrosshair,\n    control: <Switch />,\n  },\n  showCoordinates: {\n    label: 'Show coordinates',\n    checked: settings.showCoordinates,\n    control: <Switch />,\n  },\n  maxI: {\n    label: 'Iterations',\n    value: settings.maxI,\n    labelPlacement: 'top',\n    style: {\n      marginLeft: 0,\n      marginRight: 0,\n    },\n    control: (\n      <Slider\n        min={10}\n        max={1000}\n        step={10}\n        valueLabelDisplay=\"auto\"\n        marks={[\n          { value: 10, label: 10 },\n          { value: 250, label: 250 },\n          { value: 500, label: 500 },\n          { value: 750, label: 750 },\n          { value: 1000, label: 1000 },\n        ]}\n      />\n    ),\n  },\n  useDPR: {\n    // https://stackoverflow.com/a/12830454/9184658\n    // // There is a downside that values like 1.5 will give \"1.50\" as the output. A fix suggested by @minitech:\n    // var numb = 1.5;\n    // numb = +numb.toFixed(2);\n    // // Note the plus sign that drops any \"extra\" zeroes at the end.\n    // // It changes the result (which is a string) into a number again (think \"0 + foo\"),\n    // // which means that it uses only as many digits as necessary.\n    label: `Use pixel ratio (${+window.devicePixelRatio.toFixed(3)})`,\n    checked: settings.useDPR,\n    control: <Switch />,\n  },\n  useAA: {\n    label: `Anti-aliasing (slow)`,\n    checked: settings.useAA,\n    control: <Switch />,\n  },\n  showFPS: {\n    label: `Show FPS`,\n    checked: settings.showFPS,\n    control: <Switch />,\n  },\n});\n\nexport const getSettingsWidgetsGrouping = (\n  settingsWidgets: settingsWidgetType,\n): Array<settingsGroupType> => [\n  {\n    name: 'Interface',\n    widgets: {\n      showMinimap: settingsWidgets.showMinimap,\n      showCrosshair: settingsWidgets.showCrosshair,\n      showCoordinates: settingsWidgets.showCoordinates,\n    },\n  },\n  {\n    name: 'Graphics',\n    widgets: {\n      maxI: settingsWidgets.maxI,\n      useDPR: settingsWidgets.useDPR,\n      useAA: settingsWidgets.useAA,\n      showFPS: settingsWidgets.showFPS,\n    },\n  },\n];\n\nexport default defaultSettings;\n","import React, { ReactNode, useState } from 'react';\nimport { SettingsContextType, settingsDefinitionsType } from '../common/settings';\nimport defaultSettings, { settingsWidgets } from './SettingsDefinitions';\n\nexport const SettingsContext = React.createContext<SettingsContextType>({\n  // provide the context with the default values\n  settings: defaultSettings,\n  // can't set state until it's initialized\n  setSettings: () => {\n    return;\n  },\n  settingsWidgets: settingsWidgets(defaultSettings),\n});\n\n// export const useSettings = (): SettingsContextType => useContext(SettingsContext);\n\nexport const SettingsProvider = ({ children }: { children: ReactNode }): JSX.Element => {\n  // https://reactjs.org/docs/context.html#updating-context-from-a-nested-component\n  // no grouping: all settings are accessible\n  const [settings, setSettings] = useState<settingsDefinitionsType>(defaultSettings);\n\n  return (\n    <SettingsContext.Provider\n      value={{\n        settings,\n        setSettings,\n        settingsWidgets: settingsWidgets(settings),\n      }}\n    >\n      {children}\n    </SettingsContext.Provider>\n  );\n};\n\nexport default SettingsProvider;\n","import _ from 'lodash';\nimport { useCallback, useEffect, useState } from 'react';\nimport { addV } from 'react-use-gesture';\nimport { vScale } from 'vec-la-fp';\n\n// https://usehooks.com/useWindowSize/\nexport function useWindowSize() {\n  const isClient = typeof window === 'object';\n\n  const getSize = useCallback(\n    () => ({\n      width: isClient ? window.innerWidth : undefined,\n      height: isClient ? window.innerHeight : undefined,\n    }),\n    [isClient],\n  );\n\n  const [windowSize, setWindowSize] = useState(getSize);\n\n  useEffect(() => {\n    if (!isClient) {\n      // return false;\n      return () => {};\n    }\n\n    function handleResize() {\n      setWindowSize(getSize());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [getSize, isClient]); // Empty array ensures that effect is only run on mount and unmount\n\n  return windowSize;\n}\n\n// a touchbind for re-using across renderers\nexport function genericTouchBind({\n  domTarget,\n  posControl,\n  zoomControl,\n  screenScaleMultiplier,\n  gl,\n  setDragging,\n}) {\n  const [{ xy }, setControlXY] = posControl;\n  const [{ zoom, minZoom, maxZoom }, setControlZoom] = zoomControl;\n  return {\n    binds: {\n      // prevent some browser events such as swipe-based navigation or\n      // pinch-based zoom and instead redirect them to this handler\n      onDragStart: ({ event }) => event.preventDefault(),\n      onPinchStart: ({ event }) => event.preventDefault(),\n\n      onPinch: ({\n        vdva: [vd],\n        down,\n        delta: [dx],\n        origin,\n        first,\n        memo = [xy.getValue()],\n        z = zoom.getValue(),\n      }) => {\n        if (first) {\n          let [p] = memo;\n          return [p, origin];\n        }\n        // initial origin access\n        // let [p, initialOrigin] = memo;\n        let newZ = z * (1 + dx * 5e-3);\n        let newZclamp = _.clamp(newZ, minZoom.getValue(), maxZoom.getValue());\n\n        // let realZoom = gl.current.canvas.height * newZclamp * screenScaleMultiplier;\n        // let plotMovement = scale(subV(origin, initialOrigin), -2/realZoom);\n        // let relMove = [plotMovement[0], -plotMovement[1]];\n\n        setControlZoom({\n          zoom: newZclamp,\n          immediate: down,\n          config: {\n            // value needs revising, currently too slow\n            velocity: 10 * vd,\n          },\n        });\n\n        // setControlPos({\n        //   pos: addV(p, relMove),                    // add the displacement to the starting position\n        //   immediate: down,                                  // immediately apply if the gesture is active\n        // });\n\n        return memo;\n      },\n\n      onWheel: ({ movement: [, my], active, z = zoom.getValue() }) => {\n        // x, y obtained from event\n        let newZ = z * (1 - my * (my < 0 ? 3e-4 : 2e-4));\n\n        setControlZoom({\n          zoom: _.clamp(newZ, minZoom.getValue(), maxZoom.getValue()),\n          immediate: active,\n          config: {\n            // velocity: active ? 0 : 10,\n          },\n        });\n\n        return z;\n      },\n\n      onDrag: ({\n        down,\n        movement,\n        velocity,\n        direction,\n        pinching,\n        memo = xy.getValue(),\n      }) => {\n        // let pinch handle movement\n        if (pinching) return;\n        // change according to this formula:\n        // move (x, y) in the opposite direction of drag (pan with cursor)\n        // divide by canvas size to scale appropriately\n        // multiply by 2 to correct scaling on viewport\n        // use screen multiplier for more granularity\n        let realZoom = gl.current.canvas.height * zoom.getValue() * screenScaleMultiplier;\n\n        let plotMovement = vScale(-2 / realZoom, movement);\n\n        let relMove = [plotMovement[0], -plotMovement[1]];\n        let relDir = [direction[0], -direction[1]];\n\n        setControlXY({\n          xy: addV(memo, relMove), // add the displacement to the starting position\n          immediate: down, // immediately apply if the gesture is active\n          config: {\n            velocity: vScale(-velocity / realZoom, relDir), // set the velocity (gesture momentum)\n            decay: true,\n          },\n        });\n\n        // tell the renderer that it's being dragged on\n        setDragging(down);\n        // try {\n        // } catch (e) {}\n\n        return memo;\n      },\n    },\n    config: {\n      eventOptions: { passive: false, capture: false },\n      domTarget: domTarget,\n      // The config object passed to useGesture has drag, wheel, scroll, pinch and move keys\n      // for specific gesture options. See here for more details.\n      // drag: {\n      //   bounds,\n      //   rubberband: true,\n      // }\n    },\n  };\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport newSmoothJuliaShader from '../shaders/newSmoothJuliaShader';\nimport MinimapViewer from './render/MinimapViewer';\nimport { SettingsContext } from './SettingsWrapper';\nimport { genericTouchBind } from './utils';\nimport WebGLCanvas from './WebGLCanvas';\n\nexport default function JuliaRenderer(props) {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef();\n  const miniCanvasRef = useRef();\n\n  const gl = useRef();\n  const miniGl = useRef();\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  const screenScaleMultiplier = props.screenmult;\n\n  // read incoming props\n  const [{ xy }] = props.controls.xyCtrl;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ zoom }, setControlZoom] = props.controls.zoomCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1;\n\n  const fragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: AA,\n    // showCrosshair: false,\n  });\n\n  const miniFragShader = newSmoothJuliaShader({\n    maxI: maxI,\n    AA: 2,\n    // showCrosshair: false,\n  });\n\n  const [dragging, setDragging] = useState(false);\n\n  let gtb = genericTouchBind({\n    domTarget: canvasRef,\n    posControl: props.controls.xyCtrl,\n    zoomControl: props.controls.zoomCtrl,\n    screenScaleMultiplier:\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1),\n    gl: gl,\n    setDragging: setDragging,\n  });\n\n  let touchBind = useGesture(gtb.binds, gtb.config);\n\n  useEffect(touchBind, [touchBind]);\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <WebGLCanvas\n            id=\"julia\"\n            fragShader={fragShader}\n            useDPR={props.useDPR}\n            // touchBind={touchBind}\n            u={{\n              zoom: zoom,\n              xy: xy,\n              c: props.c,\n              maxI: maxI,\n              screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            ref={canvasRef}\n            glRef={gl}\n            dragging={dragging}\n          />\n          <MinimapViewer\n            fragShader={miniFragShader}\n            useDPR={settings.useDPR}\n            u={{\n              zoom: zoom,\n              xy: xy,\n              maxI: maxI,\n              c: props.c,\n              screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            canvasRef={miniCanvasRef}\n            glRef={miniGl}\n            onClick={() => setControlZoom({ zoom: 1 })}\n            show={settings.showMinimap}\n          />\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","// TODO set max iterations as parameter, crosshair as parameter\n\nconst makeCrosshair = (stroke, radius) => ({\n  stroke,\n  radius,\n});\n\nexport const standardCrosshair = makeCrosshair(2, 100);\nexport const miniCrosshair = makeCrosshair(1, 30);\n\nconst newSmoothMandelbrotShader = (\n  { maxI = 300, AA = 1, B = 64 },\n  showCrosshair = true,\n  crosshairShape = {\n    stroke: 2,\n    radius: 100,\n  },\n) => {\n  return `\n    // Adapted by Joao Maio/2019, based on work by inigo quilez - iq/2013\n    // License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n    \n    // See here for more information on smooth iteration count:\n    // http://iquilezles.org/www/articles/mset_smooth/mset_smooth.htm\n    \n    #define false 0\n    #define true 1\n\n    // render parameters\n    #define AA ${AA}\n    #define MAXI ${maxI}\n    #define B ${B.toFixed(1)}\n    \n    // crosshair parameters\n    #define show_crosshair ${showCrosshair}\n    #define cross_stroke ${crosshairShape.stroke.toFixed(1)}\n    #define cross_radius ${crosshairShape.radius.toFixed(1)}\n    \n    // set high float precision (lower than this may break colours on mobile)\n    precision highp float;\n    \n    // need to know the resolution of the canvas\n    uniform vec2 resolution;\n    \n    // properties should be passed as uniforms\n    uniform int   u_maxI;  \n    uniform vec2  u_xy;\n    uniform float u_zoom;\n    uniform float u_theta;\n\n    bool crosshair( float x, float y ) {\n      float abs_x = abs(2.0*x - resolution.x);\n      float abs_y = abs(2.0*y - resolution.y);\n  \n      return \n      // crosshair in centre of screen\n      (abs_x <= cross_stroke || abs_y <= cross_stroke) &&\n      // crosshair size / \"radius\"\n      (abs_x <= cross_radius && abs_y <= cross_radius);\n    }\n    \n    float mandelbrot( in vec2 c ) {\n        {\n            float c2 = dot(c, c);\n            // skip computation inside M1 - http://iquilezles.org/www/articles/mset_1bulb/mset1bulb.htm\n            if( 256.0*c2*c2 - 96.0*c2 + 32.0*c.x - 3.0 < 0.0 ) return 0.0;\n            // skip computation inside M2 - http://iquilezles.org/www/articles/mset_2bulb/mset2bulb.htm\n            if( 16.0*(c2+2.0*c.x+1.0) - 1.0 < 0.0 ) return 0.0;\n        }\n    \n        float l = 0.0;\n        vec2 z  = vec2(0.0);\n        for( int i=0; i<MAXI; i++ )\n        {\n            z = vec2( z.x*z.x - z.y*z.y, 2.0*z.x*z.y ) + c;\n            if( dot(z,z)>(B*B) ) break;\n            l += 1.0;\n        }\n    \n        // maxed out iterations\n        if( l>float(MAXI)-1.0 ) return 0.0;\n        \n        // optimized smooth interation count\n        l = l - log2(log2(dot(z,z))) + 4.0;\n    \n        return l;\n    }\n    \n    void main() {    \n        // set the initial colour to black\n        vec3 col = vec3(0.0);\n    \n        // anti-aliasing\n        #if AA>1\n        for( int m=0; m<AA; m++ )\n        for( int n=0; n<AA; n++ )\n        {\n            // vec2 p = (-iResolution.xy + 2.0*(fragCoord.xy+vec2(float(m),float(n))/float(AA)))/iResolution.y;\n            vec2 p = (2.0*(gl_FragCoord.xy + vec2(float(m), float(n)) / float(AA) ) - resolution.xy)/resolution.y;\n            float w = float(AA*m+n);\n        #else    \n            // adjust pixels to range from [-1, 1]\n            vec2 p = (2.0*gl_FragCoord.xy - resolution.xy)/resolution.y;\n        #endif\n    \n        // c is based on offset and grid position, z_0 = 0\n        vec2 c = u_xy + p/u_zoom;\n        \n        float l = mandelbrot(c);\n        col += 0.5 + 0.5*cos( 3.0 + l*0.15 + vec3(0.0,0.6,1.0));\n    \n        // antialiasing\n        #if AA>1\n        }\n        col /= float(AA*AA);\n        #endif\n    \n        #if show_crosshair\n        if (crosshair(gl_FragCoord.x, gl_FragCoord.y)) {\n            col = 1. - col;\n        }\n        #endif\n    \n        // Output to screen\n        gl_FragColor = vec4( col, 1.0 );\n    }\n    `;\n};\n\nexport default newSmoothMandelbrotShader;\n","import React from 'react';\n\ninterface ToggleableFadeProps {\n  children: React.ReactNode;\n  show: boolean;\n  duration?: number;\n}\n\nconst ToggleableFade = (props: ToggleableFadeProps): JSX.Element => {\n  // set 100ms as default animation time\n  const t = props.duration || 200;\n  return (\n    <div\n      style={{\n        visibility: props.show ? 'visible' : 'hidden',\n        opacity: props.show ? 1 : 0,\n        transition: `opacity ${t}ms, visibility ${t}ms`,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n};\n\nexport default ToggleableFade;\n","import { Card, Grow } from '@material-ui/core';\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { FPSCardProps } from './info';\n\nconst FPSCard = (props: FPSCardProps): JSX.Element => (\n  <Grow in={props.show}>\n    <Card\n      style={{\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        padding: '4px 12px',\n        margin: 6,\n        fontFamily: 'monospace',\n        borderRadius: 100,\n        fontSize: '1.8rem',\n        zIndex: 1300,\n        userSelect: 'none',\n      }}\n    >\n      <animated.div>{props.fps}</animated.div>\n    </Card>\n  </Grow>\n);\n\nexport default FPSCard;\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useGesture } from 'react-use-gesture';\nimport newSmoothMandelbrotShader, {\n  miniCrosshair,\n  standardCrosshair,\n} from '../shaders/newSmoothMandelbrotShader';\nimport ToggleableFade from '../theme/ToggleableFade';\nimport FPSCard from './info/FPSCard';\nimport MinimapViewer from './render/MinimapViewer';\nimport { SettingsContext } from './SettingsWrapper';\nimport { genericTouchBind } from './utils';\nimport WebGLCanvas from './WebGLCanvas';\n\nexport default function MandelbrotRenderer(props) {\n  // variables to hold canvas and webgl information\n  const canvasRef = useRef();\n  const miniCanvasRef = useRef();\n\n  const gl = useRef();\n  const miniGl = useRef();\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  const screenScaleMultiplier = props.screenmult; // -> global\n\n  // temporary bounds to prevent excessive panning\n  // eslint-disable-next-line\n  const radialBound = 1;\n  // const relativeRadialBound = radialBound;// / -screenScaleMultiplier;\n\n  // read incoming props\n  const [{ xy }] = props.controls.xyCtrl;\n  // const [{ theta, last_pointer_angle }, setControlRot] = props.controls.rot;\n  const [{ zoom }, setControlZoom] = props.controls.zoomCtrl;\n  const maxI = props.maxI; // -> global\n  const AA = props.useAA ? 2 : 1; // -> global\n\n  const fragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: AA,\n    },\n    props.showCrosshair,\n    standardCrosshair,\n  );\n  const miniFragShader = newSmoothMandelbrotShader(\n    {\n      maxI: maxI,\n      AA: 2,\n    },\n    props.showCrosshair,\n    miniCrosshair,\n  );\n\n  const [dragging, setDragging] = useState(false);\n\n  let gtb = genericTouchBind({\n    domTarget: canvasRef,\n    posControl: props.controls.xyCtrl,\n    zoomControl: props.controls.zoomCtrl,\n    screenScaleMultiplier:\n      screenScaleMultiplier / (props.useDPR ? window.devicePixelRatio : 1), // -> global\n    gl: gl,\n    setDragging: setDragging,\n  });\n\n  let touchBind = useGesture(gtb.binds, gtb.config);\n\n  useEffect(touchBind, [touchBind]);\n\n  const [fps, setFps] = useState(0);\n\n  return (\n    <SettingsContext.Consumer>\n      {({ settings }) => (\n        <div\n          className=\"renderer\"\n          style={{\n            position: 'relative',\n          }}\n        >\n          <FPSCard fps={fps} show={settings.showFPS} />\n          {/* <Card\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              padding: 4,\n              margin: 4,\n              display: settings.showFPS ? 'block' : 'none',\n            }}\n          >\n            <animated.div style={{ fontFamily: 'monospace' }}>{fps}</animated.div>\n          </Card> */}\n          <WebGLCanvas\n            id=\"mandelbrot\"\n            fragShader={fragShader}\n            useDPR={settings.useDPR}\n            // touchBind={touchBind}\n            u={{\n              zoom: zoom,\n              xy: xy,\n              maxI: maxI,\n              screenScaleMultiplier: screenScaleMultiplier,\n            }}\n            ref={canvasRef}\n            glRef={gl}\n            fps={setFps}\n            dragging={dragging}\n          />\n\n          <ToggleableFade show={settings.showMinimap}>\n            <MinimapViewer\n              fragShader={miniFragShader}\n              useDPR={settings.useDPR}\n              u={{\n                zoom: zoom,\n                xy: xy,\n                maxI: maxI,\n                screenScaleMultiplier: screenScaleMultiplier,\n              }}\n              canvasRef={miniCanvasRef}\n              glRef={miniGl}\n              show={settings.showMinimap}\n              onClick={() => setControlZoom({ zoom: 1 })}\n            />\n          </ToggleableFade>\n        </div>\n      )}\n    </SettingsContext.Consumer>\n  );\n}\n","import {\n  Backdrop,\n  Divider,\n  Fab,\n  FormControlLabel,\n  FormGroup,\n  Grid,\n  IconButton,\n  makeStyles,\n  Popover,\n  Typography,\n} from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport InfoIcon from '@material-ui/icons/Info';\nimport MyLocationIcon from '@material-ui/icons/MyLocation';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React from 'react';\nimport { getSettingsWidgetsGrouping } from './SettingsDefinitions';\nimport { SettingsContext } from './SettingsWrapper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    zIndex: 2,\n    // small fab: 40\n    // medium fab: 48\n    // width: 44,\n    // height: 44,\n  },\n  button: {\n    // marginTop: 10,\n  },\n  sliderControl: {\n    width: 30,\n  },\n}));\n\nconst GroupDivider = () => <Divider style={{ marginTop: 10, marginBottom: 4 }} />;\nconst GroupTitle = (props) => (\n  <Typography variant=\"overline\" style={{ fontSize: 14, marginBottom: 4 }}>\n    {props.title}\n  </Typography>\n);\n\nexport default function SettingsMenu(props) {\n  const classes = useStyles();\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // const settings = useSettings();\n  // const settingsGroups = getSettingsGrouping(settings);\n\n  return (\n    <div className={classes.root}>\n      <Fab\n        aria-controls=\"menu\"\n        aria-haspopup=\"true\"\n        aria-label=\"settings\"\n        size=\"small\"\n        onClick={(e) => setAnchorEl(e.currentTarget)}\n        className={classes.button}\n      >\n        <SettingsIcon />\n      </Fab>\n      <Backdrop open={Boolean(anchorEl)}>\n        <Popover\n          id=\"menu\"\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={() => setAnchorEl(null)}\n          anchorOrigin={{\n            horizontal: 'right',\n            vertical: 'bottom',\n          }}\n          transformOrigin={{\n            vertical: 'bottom',\n            horizontal: 'right',\n          }}\n        >\n          <Grid\n            container\n            direction=\"column\"\n            style={{\n              paddingLeft: '1.5em',\n              paddingRight: '1.5em',\n              paddingTop: '1em',\n              paddingBottom: '1em',\n            }}\n          >\n            <Grid item container alignItems=\"center\" justify=\"space-around\">\n              <Grid item>\n                <Typography\n                  variant=\"h1\"\n                  style={{ fontSize: 20, paddingLeft: 20, paddingRight: 20 }}\n                >\n                  Configuration\n                </Typography>\n              </Grid>\n              <Divider orientation=\"vertical\" flexItem />\n              <Grid item>\n                <IconButton\n                  aria-label=\"info\"\n                  size=\"medium\"\n                  onClick={() => {\n                    // open info panel\n                    props.toggleInfo();\n                    // close popover\n                    setAnchorEl(null);\n                  }}\n                >\n                  <InfoIcon fontSize=\"inherit\" />\n                </IconButton>\n              </Grid>\n            </Grid>\n            <SettingsContext.Consumer>\n              {({ settings, setSettings, settingsWidgets }) =>\n                getSettingsWidgetsGrouping(settingsWidgets).map((g) => (\n                  <Grid item key={g.name}>\n                    <GroupDivider />\n                    <GroupTitle title={g.name} />\n                    <FormGroup>\n                      {Object.entries(g.widgets).map(([k, widget]) => (\n                        <FormControlLabel\n                          key={`${widget.label}-control`}\n                          style={{ userSelect: 'none' }}\n                          {...widget}\n                          onChange={(e, val) => {\n                            console.log(`${k} -> ${val}`);\n                            setSettings((prevState) => ({ ...prevState, [k]: val }));\n                            // console.log(settings);\n                          }}\n                        />\n                      ))}\n                    </FormGroup>\n                  </Grid>\n                ))\n              }\n            </SettingsContext.Consumer>\n\n            <GroupDivider />\n\n            <Button\n              aria-controls=\"reset\"\n              onClick={() => props.reset()}\n              className={classes.button}\n              startIcon={<MyLocationIcon />}\n            >\n              Reset position\n            </Button>\n          </Grid>\n        </Popover>\n      </Backdrop>\n    </div>\n  );\n}\n","import { Grid, ThemeProvider } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport { useSpring } from 'react-spring';\nimport { vScale } from 'vec-la-fp';\nimport './App.css';\nimport {\n  ViewerRotationControl,\n  ViewerXYControl,\n  ViewerZoomControl,\n} from './common/types';\nimport CoordinatesCard from './components/info/CoordinatesCard';\nimport InfoDialog from './components/InfoDialog';\nimport JuliaRenderer from './components/JuliaRenderer';\n// import 'typeface-roboto';\nimport MandelbrotRenderer from './components/MandelbrotRenderer.jsx';\nimport SettingsMenu from './components/SettingsMenu';\nimport { SettingsContext, SettingsProvider } from './components/SettingsWrapper';\nimport { useWindowSize } from './components/utils';\nimport theme from './theme/theme';\n\nfunction App(): JSX.Element {\n  const size = useWindowSize();\n\n  const defaultSpringConfig = { mass: 1, tension: 100, friction: 200 };\n\n  // this multiplier subdivides the screen space into smaller increments\n  // to allow for velocity calculations to not immediately decay, due to the\n  // otherwise small scale that is being mapped to the screen.\n  const screenScaleMultiplier = 1e-7;\n\n  const startPos: [number, number] = [-0.7746931, 0.1242266];\n  // const startPos = [-.7426482, .1271875 ];\n  // const startPos = [-0.1251491, -0.8599647];\n  const startZoom = 85.0;\n\n  // interface posInterface extends UseSpringBaseProps {\n  //   pos: [number, number],\n  //   config: SpringConfig,\n  // }\n\n  const mandelbrotControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: vScale(1 / screenScaleMultiplier, startPos),\n      config: defaultSpringConfig,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: 0,\n      // last_pointer_angle: 0,\n      // itheta: 0,\n      config: defaultSpringConfig,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      zoom: startZoom,\n      // last_pointer_dist: 0,\n\n      minZoom: 0.5,\n      maxZoom: 100000,\n\n      config: { mass: 1, tension: 600, friction: 50 },\n    })),\n  };\n\n  // const [a] = mandelbrotControls.xyCtrl;\n  // typeof a.xy;\n\n  const juliaControls = {\n    xyCtrl: useSpring<ViewerXYControl>(() => ({\n      xy: [0, 0] as [number, number],\n      config: defaultSpringConfig,\n    })),\n\n    rotCtrl: useSpring<ViewerRotationControl>(() => ({\n      theta: 0,\n      // last_pointer_angle: 0,\n      // itheta: 0,\n      config: defaultSpringConfig,\n    })),\n\n    zoomCtrl: useSpring<ViewerZoomControl>(() => ({\n      zoom: 0.5,\n      // last_pointer_dist: 0,\n\n      minZoom: 0.5,\n      maxZoom: 100000,\n\n      config: { mass: 1, tension: 600, friction: 50 },\n    })),\n  };\n\n  const resetPosSpringConfig = { mass: 1, tension: 200, friction: 75 };\n  const resetZoomSpringConfig = { mass: 1, tension: 300, friction: 60 };\n\n  const reset = () => {\n    mandelbrotControls.xyCtrl[1]({\n      xy: [0, 0],\n      config: resetPosSpringConfig,\n    });\n    mandelbrotControls.zoomCtrl[1]({\n      zoom: 1,\n      config: resetZoomSpringConfig,\n    });\n\n    juliaControls.xyCtrl[1]({\n      xy: [0, 0],\n      config: resetPosSpringConfig,\n    });\n    juliaControls.zoomCtrl[1]({\n      zoom: 1,\n      config: resetZoomSpringConfig,\n    });\n  };\n\n  const [showInfo, setShowInfo] = useState(false);\n\n  const toggleInfo = () => setShowInfo(!showInfo);\n\n  const controls = {\n    miniViewer: useState(true),\n    crosshair: useState(true),\n    coords: useState(false),\n    maxI: useState(250),\n    aa: useState(false),\n    dpr: useState(false),\n    fps: useState(false),\n  };\n\n  // const { settings } = useSettings();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <SettingsProvider>\n        <Grid container>\n          <SettingsContext.Consumer>\n            {({ settings }) => (\n              <Grid\n                item\n                container\n                direction={\n                  (size.width || 1) < (size.height || 0) ? 'column-reverse' : 'row'\n                }\n                justify=\"center\"\n                className=\"fullSize\"\n                style={{\n                  position: 'absolute',\n                }}\n              >\n                <CoordinatesCard\n                  show={settings.showCoordinates}\n                  mandelbrot={mandelbrotControls.xyCtrl[0].xy}\n                  screenScaleMultiplier={screenScaleMultiplier}\n                />\n                <Grid item xs className=\"renderer\">\n                  <MandelbrotRenderer\n                    controls={mandelbrotControls}\n                    screenmult={screenScaleMultiplier}\n                    {...settings}\n                    // maxiter={controls.maxI[0]}\n                    // miniSize={miniSize}\n                    // enableMini={controls.miniViewer[0]}\n                    // crosshair={controls.crosshair[0]}\n                    // showFps={controls.fps[0]}\n                    // useAA={controls.aa[0]}\n                    // useDPR={settings.useDPR}\n                  />\n                </Grid>\n                <Grid item xs className=\"renderer\">\n                  <JuliaRenderer\n                    c={mandelbrotControls.xyCtrl[0].xy}\n                    controls={juliaControls}\n                    maxiter={controls.maxI[0]}\n                    screenmult={screenScaleMultiplier}\n                    // miniSize={miniSize}\n                    minimap={controls.miniViewer[0]}\n                    // useAA={controls.aa[0]}\n                    // useDPR={settings.useDPR}\n                    {...settings}\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </SettingsContext.Consumer>\n\n          <SettingsMenu reset={() => reset()} toggleInfo={() => toggleInfo()} />\n\n          <InfoDialog ctrl={[showInfo, setShowInfo]} />\n        </Grid>\n      </SettingsProvider>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}