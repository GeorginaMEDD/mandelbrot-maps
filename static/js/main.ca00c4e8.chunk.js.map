{"version":3,"sources":["plus-icon.svg","minus-icon.svg","components/TransparentFab.js","components/ZoomBar.js","components/RotationControl.js","components/MandelbrotRenderer.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","plus_icon_ref2","react_default","a","createElement","d","plus_icon_SvgPlusIcon","_ref","svgRef","props","width","height","fillRule","clipRule","ref","ForwardRef","forwardRef","__webpack_require__","p","minus_icon_extends","minus_icon_objectWithoutProperties","minus_icon_objectWithoutPropertiesLoose","minus_icon_ref2","minus_icon_SvgMinusIcon","minus_icon_ForwardRef","TransparentFab","children","objectWithoutProperties","Fab","style","backgroundColor","boxShadow","ZoomBar","_props$controller","slicedToArray","controller","_props$controller$","zoom","minZoom","maxZoom","setZoom","zoomClick","dir","z","Math","sign","getValue","clamp","className","display","zIndex","Paper","borderRadius","maxHeight","margin","flexDirection","justifyContent","onClick","e","preventDefault","position","ZoomBarFab","diameter","zoomControl","_useSpring","useSpring","y","config","friction","tension","_useSpring2","set","_useState","useState","_useState2","gestureDown","setGestureDown","_useState3","_useState4","zoomMult","setZoomMult","React","useRef","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","oldZoom","pow","bind","useDrag","_ref2","down","_ref2$movement","movement","event","first","last","clampY","abs","passive","capture","domTarget","web","div","transform","interpolate","concat","marginLeft","marginTop","top","left","Typography","color","span","toPrecision","RotationControl","theta","itheta","clampAngle","t","radToDeg","r","PI","elemProps","x","_ref$xy","xy","_ref$initial","initial","ix","iy","_ref$memo","memo","cx","cy","atan2","newTheta","immediate","el","getBoundingClientRect","userSelect","toFixed","MandelbrotRenderer","touchTarget","canvasRef","globalCtx","setGlobalCtx","canvasSize","_props$maxiter","maxiter","maxI","_props$pos","pos","setControlPos","_props$rot","rot","_props$rot$","last_pointer_angle","setControlRot","_props$zoom","_props$zoom$","last_pointer_dist","setControlZoom","linspace","start","stop","cardinality","step","_","range","fillProc","newCtx","ctx","c","clearRect","clearCanvas","_pos$getValue$map","map","_pos$getValue$map2","xc","yc","console","log","_map","s","_map2","z_range_x","z_range_y","_map3","_map4","xl","xr","_map5","_map6","yb","yt","forEach","re","im","draw","b","a2","b2","iter","fillStyle","fillRect","newVd_test","setNewVdDebug","touchBind","useGesture","onPinchStart","onPinch","_ref3","_ref3$offset","offset","_ref3$vdva","vdva","_ref3$memo","_memo","lpa","lpd","d_rel","curr_zoom","onPinchEnd","_ref4","_ref4$vdva","vd","va","newZoom","velocity","decay","onDragStart","_ref5","onDrag","_ref6","direction","_ref6$memo","addV","scale","onDragEnd","startCtx","getContext","canvas","rotation","Card","Button","variant","t0","performance","now","t1","App","defaultSpringConfig","mass","maxIter","controlPos","onRest","controlRot","controlZoom","react","Grid","container","justify","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ca00c4e8.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M11 11v-11h1v11h11v1h-11v11h-1v-11h-11v-1h11z\"\n});\n\nvar SvgPlusIcon = function SvgPlusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-icon.e4581c1a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 12v1h23v-1h-23z\"\n});\n\nvar SvgMinusIcon = function SvgMinusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMinusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/minus-icon.8bace023.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\r\nimport { Fab } from '@material-ui/core';\r\n\r\nexport default function TransparentFab(props) {\r\n  const { children, ...p } = props;\r\n  return (\r\n      <Fab style={{\r\n        backgroundColor: \"transparent\",\r\n        boxShadow: \"none\",\r\n      }} {...p} >\r\n        {children}\r\n      </Fab>\r\n  )\r\n}","import React, { useState, useRef, useEffect } from 'react';\r\nimport { Paper, Fab, Typography } from '@material-ui/core';\r\nimport { ReactComponent as PlusIcon } from '../plus-icon.svg';\r\nimport { ReactComponent as MinusIcon } from '../minus-icon.svg';\r\nimport TransparentFab from \"./TransparentFab\";\r\nimport { useSpring, animated } from 'react-spring';\r\nimport { useDrag } from 'react-use-gesture';\r\nimport { clamp } from 'lodash';\r\n\r\n// https://upmostly.com/tutorials/setinterval-in-react-components-using-hooks\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  });\r\n\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\n\r\nexport default function ZoomBar(props) {\r\n  let fabSize = 70;\r\n  let maxHeight = 240;\r\n\r\n  // let [minZoom, maxZoom] = [0.01, 1000]\r\n  // const [zoom, setZoom] = useState(100) // useSpring(() => ({ zoom: 100 }));\r\n  \r\n  const [{ zoom, minZoom, maxZoom }, setZoom] = props.controller;\r\n  // const [{ zoom }, setZoom] = useSpring(() => ({ zoom: 100, config: {\r\n  //   friction: 50, \r\n  //   tension: 600,\r\n  // }}));\r\n\r\n  const zoomClick = dir => {\r\n    // zoom in a particular direction\r\n    const z = Math.sign(dir) * (1e-1 * zoom.getValue() + 1);\r\n    setZoom({ zoom: clamp(zoom.getValue() + z, minZoom.getValue(), maxZoom.getValue()) });\r\n  }\r\n\r\n  return (\r\n    <div \r\n    className=\"Control\"\r\n    style={{\r\n      width: fabSize,\r\n      display: \"flex\",\r\n      zIndex: 2,\r\n    }}>\r\n        <Paper style={{\r\n          borderRadius: \"5em\",\r\n          maxHeight: maxHeight,\r\n          margin: \"auto\",\r\n          display: \"flex\",\r\n          flexDirection: \"column-reverse\",\r\n          justifyContent: \"space-between\",\r\n        }}>\r\n          <TransparentFab onClick={e => {\r\n            e.preventDefault();\r\n            zoomClick(-1);\r\n          }}>\r\n            <MinusIcon />\r\n          </TransparentFab>\r\n          <div style={{\r\n            height: fabSize,\r\n            position: \"relative\",\r\n          }}>\r\n            <ZoomBarFab \r\n              diameter={fabSize} \r\n              zoom={zoom} \r\n              zoomControl={setZoom} \r\n              minZoom={minZoom}\r\n              maxZoom={maxZoom}\r\n            />\r\n          </div>\r\n          <TransparentFab onClick={e => {\r\n            e.preventDefault();\r\n            zoomClick(1);\r\n          }}>\r\n            <PlusIcon />\r\n          </TransparentFab>\r\n        </Paper>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport function ZoomBarFab(props) {\r\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: {\r\n     friction: 30, \r\n     tension: 400,\r\n    //  clamp: true,\r\n  }}))\r\n  \r\n  const [zoom, setZoom] = [props.zoom, props.zoomControl];\r\n  \r\n  const [gestureDown, setGestureDown] = useState(false);\r\n  const [zoomMult, setZoomMult] = useState(1);\r\n  const ref = React.useRef(null);\r\n  \r\n  const reset = () => {\r\n    setZoom({ zoom: 100 });\r\n  }\r\n\r\n  // determine speed to zoom at based on distance from center of the control\r\n  // updates zoom every 50ms based on the multiplier\r\n  useInterval(() => {\r\n    let oldZoom = zoom.getValue();\r\n    const z = clamp(oldZoom + 2 * 3e-5 * (oldZoom ** 0.8) * zoomMult, props.minZoom.getValue(), props.maxZoom.getValue())\r\n    setZoom({ zoom: z });\r\n    // increase zoom multiplier based on time elapsed\r\n    setZoomMult(zoomMult * 1.02);\r\n  }, gestureDown ? 100 : null);\r\n\r\n  const bind = useDrag(({ down, movement: [x, y], event, first, last }) => {\r\n    // only prevent default between first and last event\r\n    // first: prevents browser events\r\n    // last: allows buttons to activate and ripple\r\n    // event.preventDefault();\r\n    (!first && !last) && event.preventDefault();\r\n    \r\n    // tell zoom listener if drag is happening\r\n    setGestureDown(down);\r\n    \r\n    const limit = 80;\r\n    const clampY = clamp(y, -limit, limit)\r\n    \r\n    setZoomMult(down ? -Math.sign(clampY) * Math.abs(clampY / 8)**4 : 0)\r\n    set({ y: down ? clampY : 0 })\r\n    \r\n  }, { event: { passive: false, capture: false }, domTarget: ref })\r\n  \r\n  React.useEffect(bind, [bind])\r\n\r\n  return (\r\n    <animated.div \r\n      ref={ref}\r\n      style={{\r\n        transform: y.interpolate(y => `translateY(${y}px)`),\r\n        borderRadius: '50rem',\r\n        width: props.diameter,\r\n        height: props.diameter,\r\n\r\n        marginLeft: -props.diameter/2,\r\n        marginTop: -props.diameter/2,\r\n        top: \"50%\",\r\n        left: \"50%\",\r\n        position: \"absolute\",\r\n        zIndex: 1,\r\n      }} \r\n      >\r\n      <Fab \r\n        onClick={ e => {\r\n            // if click registered and fab not moved, trigger reset\r\n            if (y.getValue() === 0) { reset(); }\r\n          }\r\n        }\r\n        style={{\r\n          backgroundColor: \"#2196f3\",\r\n          width: props.diameter,\r\n          height: props.diameter,\r\n        }}>\r\n        <Typography style={{ color: \"#fff\" }}>\r\n          <animated.span>{zoom.interpolate(z => (z/100).toPrecision(5))}</animated.span>\r\n        </Typography>\r\n      </Fab>\r\n    </animated.div>\r\n  )\r\n}\r\n","import React from 'react';\r\nimport { Paper, Typography, Fab } from '@material-ui/core';\r\nimport { animated } from 'react-spring';\r\nimport { useDrag } from 'react-use-gesture';\r\n\r\n\r\nexport default function RotationControl(props) {\r\n\r\n  const [{ theta, itheta }, set] = props.controller;\r\n\r\n  const clampAngle = t => ((t % 360) + 360) % 360;\r\n\r\n  const radToDeg = r => (360 * r) / (2 * Math.PI);\r\n\r\n  var elemProps = { x: 0, y: 0, width: 0, height: 0 };\r\n\r\n  // const [elemCenter, setElemCenter] = useState([0, 0]);\r\n  // const [elemOffset, setElemOffset] = useState([0, 0]);\r\n\r\n  const outerSize = 160;\r\n  const innerSize = 70;\r\n\r\n  const bind = useDrag(({ xy: [x, y], initial: [ix, iy], first, memo = theta.getValue() }) => {\r\n\r\n    const [cx, cy] = [elemProps.x + elemProps.width / 2, elemProps.y + elemProps.height / 2];\r\n    if (first) {\r\n      // console.log(cx, cy)\r\n      // setElemCenter([cx, cy]);\r\n      // setElemOffset([ix - cx, iy - cy]);\r\n      set({\r\n        theta: memo,\r\n        // remember initial angle (of the cursor)\r\n        itheta: radToDeg(Math.atan2(-(ix - cx), iy - cy)),\r\n      })\r\n      return memo;\r\n    }\r\n\r\n    const newTheta = radToDeg(Math.atan2(-(x - cx), y - cy));\r\n\r\n    // const d = (360 * newTheta / (Math.PI * 2)) // - itheta.getValue() - memo;\r\n\r\n    // set current angle, delta since last\r\n    set({\r\n      theta: memo + clampAngle(newTheta - itheta.getValue()),\r\n      // prevTheta: theta.value,\r\n      // xy: [x, y] \r\n      immediate: true,\r\n    });\r\n\r\n    return memo;\r\n  })\r\n\r\n  return (\r\n    <div \r\n    {...props}\r\n    style={{\r\n      width: outerSize,\r\n      height: outerSize,\r\n      display: 'flex',\r\n      position: 'relative',\r\n    }}>\r\n      {/* <animated.div style={{\r\n        width: 10,\r\n        height: 10,\r\n        backgroundColor: \"red\",\r\n        // transform: xy.interpolate((x, y) => `translate3d(${x - 5}px, ${y - 5}px, 0)`),\r\n        // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n      }} /> */}\r\n      <Paper {...bind()}\r\n        ref={el => {\r\n          if (!el) return;\r\n          let r = el.getBoundingClientRect();\r\n          elemProps = { x: r.x, y: r.y, width: r.width, height: r.height }\r\n          // console.log(pos);\r\n        }}\r\n        style={{\r\n          borderRadius: '50rem',\r\n          width: outerSize,\r\n          height: outerSize,\r\n        }} >\r\n        {/* <div style={{\r\n          width: 10,\r\n          height: 10,\r\n          backgroundColor: \"aqua\",\r\n          transform: `translate3d(${- 5}px, ${- 5}px, 0)`,\r\n          // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\r\n          position: \"absolute\",\r\n          top: \"50%\",\r\n          left: \"50%\",\r\n          zIndex: 2,\r\n        }} /> */}\r\n        <animated.div\r\n          style={{\r\n            transform: theta.interpolate(t =>\r\n              `rotate(${t}deg)`\r\n              // ((360 + theta.value + dt) % 360)\r\n              // .toFixed(1)\r\n            ),\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: 'center',\r\n          }}>\r\n          <Typography style={{ userSelect: \"none\" }}>(N)</Typography>\r\n        </animated.div>\r\n      </Paper>\r\n\r\n      <Fab style={{\r\n        width: innerSize,\r\n        height: innerSize,\r\n        borderRadius: '50rem',\r\n        backgroundColor: \"#2196f3\",\r\n        display: 'flex',\r\n        position: 'absolute',\r\n        left: '50%',\r\n        top: '50%',\r\n        margin: -innerSize / 2,\r\n      }}>\r\n        {/* <CardContent > */}\r\n        <Typography style={{\r\n          color: \"#fff\",\r\n          margin: 'auto',\r\n        }}>\r\n          <animated.span>{\r\n            theta.interpolate(t => clampAngle(t).toFixed(0))\r\n            // dt.interpolate(dt =>\r\n            //   clampAngle(theta.value + dt)\r\n            //     .toFixed(1)\r\n            // )\r\n          }</animated.span>° \r\n          {/* (<animated.span>{revs.interpolate(r => r)}</animated.span>) */}\r\n        </Typography>\r\n      </Fab>\r\n    </div>\r\n  )\r\n  // }\r\n};","import React, { useRef, useEffect, useState } from \"react\";\r\nimport Complex from 'complex.js';\r\nimport _ from 'lodash';\r\nimport { Typography, Button, Slider, Card } from \"@material-ui/core\";\r\n\r\nimport { useDrag, addV, subV, useGesture } from \"react-use-gesture\";\r\nimport { add, scale, dist } from 'vec-la';\r\n\r\nimport { useSpring, animated, interpolate, config } from \"react-spring\";\r\n\r\n\r\nexport default function MandelbrotRenderer(props) {\r\n\r\n  const touchTarget = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [globalCtx, setGlobalCtx] = useState(null);\r\n  // canvas size must be calculated dynamically\r\n  const canvasSize = 200;\r\n  const zoomFactor = 4;\r\n\r\n  const bounds = { x: [-1.5, 0.5], y: [-1, 1] };\r\n  const [maxI, setMaxI] = props.maxiter;\r\n\r\n  const [{ pos }, setControlPos] = props.pos;\r\n  const [{ theta, last_pointer_angle }, setControlRot] = props.rot;\r\n  const [{ zoom, last_pointer_dist, minZoom, maxZoom }, setControlZoom] = props.zoom;\r\n\r\n  // {x, y, dx, dy, theta, zoom}\r\n  // const [grid, setGrid] = useSpring(() => ({\r\n  //   x: 0,\r\n  //   y: 0,\r\n\r\n  //   dx: 0,\r\n  //   dy: 0,\r\n\r\n  //   // theta: 0,\r\n\r\n  //   // zoom: 100,\r\n\r\n  // }));\r\n\r\n  function linspace(start, stop, cardinality) {\r\n    let step = (stop - start) / cardinality;\r\n    return _.range(start, stop, step);\r\n  }\r\n\r\n  const clearCanvas = ctx => {\r\n    let c = canvasRef.current;\r\n    ctx.clearRect(0, 0, c.width, c.height)\r\n  }\r\n\r\n  const iterToGray = i => (\r\n    // map 0 to 0, maxI to 255\r\n    100 - Math.round(100*i / maxI)\r\n  );\r\n\r\n\r\n  const fillProc = newCtx => {\r\n    if (globalCtx == null) { return; }\r\n    // default to global context\r\n    let ctx = newCtx ? newCtx : globalCtx;\r\n    clearCanvas(ctx);\r\n    let [xc, yc] = pos.getValue().map(a => -a / canvasSize);\r\n    console.log(`x: ${xc}, y: ${yc}`);\r\n    const [z_range_x, z_range_y] = [canvasSize, canvasSize].map(s => (s / 2) / (zoom.getValue() / 10) );\r\n    console.log(z_range_x)\r\n    const [xl, xr] = [-1, 1].map(d => xc + d * z_range_x);\r\n    const [yb, yt] = [-1, 1].map(d => yc + d * z_range_y);\r\n    linspace(xl, xr, canvasSize).forEach((re, x) => {\r\n      linspace(yb, yt, canvasSize).forEach((im, y) => {\r\n        // let c = Complex(re, im);\r\n        // var z = Complex.ZERO;\r\n        // console.log(re, im);\r\n        var draw = 0;\r\n        var a = 0, b = 0;\r\n        var a2 = 0, b2 = 0;\r\n        for (let iter = 0; iter < maxI; iter++) {\r\n          //  Re(c), Im(c) \r\n          [a, b] = [a2 - b2 + re, 2 * a * b + im];\r\n          [a2, b2] = [a * a, b * b]\r\n          // z = z.mul(z).add(c);\r\n          draw = iter;\r\n          if (a2 + b2 > 4.0) { break; }\r\n        }\r\n        // console.log()\r\n        ctx.fillStyle = `hsl(0, 0%, ${draw * 4}%)`;\r\n        // console.log(`drawing (${re}, ${im})`);\r\n        ctx.fillRect(x, y, 1, 1);\r\n      });\r\n    });\r\n    console.log(\"render complete!\");\r\n  };\r\n\r\n  // props.onSetRenderFunc(fillProc);\r\n  // const draw = (ctx, ) => {\r\n  //   for (let y = 0; y < canvas.height; ++y) {\r\n  //     for (let x = 0; x < canvas.width; ++x) {\r\n  //       set(x, y, getColor(generator(pixelLocation(x, y), def.i)))\r\n  //     }\r\n  //   }\r\n  //   ctx.putImageData(imageData, 0, 0)\r\n  // }\r\n\r\n  // const fillProcAsync = ctx => {\r\n  //   console.log(\"entered fillproc\");\r\n  //   return new Promise(resolve => {\r\n  //     const [xl, xr] = bounds.x;\r\n  //     const [yb, yt] = bounds.y;\r\n  //     ctx.fillStyle = \"#ddd\";\r\n  //     linspace(xl, xr, canvasSize).forEach((re, x) => {\r\n  //       linspace(yb, yt, canvasSize).forEach((im, y) => {\r\n  //         let c = Complex(re, im);\r\n  //         var z = Complex.ZERO;\r\n  //         var draw = true;\r\n  //         // console.log(z.toString());\r\n  //         for (let iter = 0; iter < maxI; iter++) {\r\n  //           z = z.mul(z).add(c);\r\n  //           if (z.abs() > 2.0) { draw = false; break; }\r\n  //         }\r\n  //         if (draw) {\r\n  //           ctx.fillRect(x, y, 1, 1);\r\n  //         }\r\n  //       });\r\n  //     });\r\n  //     resolve();\r\n  //   })\r\n  // };\r\n\r\n\r\n  \r\n\r\n  const [{ newVd_test }, setNewVdDebug] = useSpring(() => ({\r\n    newVd_test: 0,\r\n  }))\r\n  // touch target bind for testing\r\n  const touchBind = useGesture({\r\n\r\n    onPinchStart: ({ event }) => event.preventDefault(),\r\n    onPinch: ({ offset: [d, a], down, vdva: [vd, va], last, memo = [theta.getValue(), last_pointer_angle.getValue(), zoom.getValue(), last_pointer_dist.getValue()] }) => {\r\n      // alert(mx, my)\r\n      // let [theta, lpa] = memo\r\n      let [t, lpa, z, lpd] = memo;\r\n      console.log(d);\r\n      let d_rel = d / 250;\r\n      let curr_zoom = zoom.getValue();\r\n\r\n      setControlZoom({\r\n        zoom: _.clamp(z + (d_rel - lpd) * Math.sign(curr_zoom) * Math.abs(curr_zoom ** 0.9), minZoom.getValue(), maxZoom.getValue()),\r\n        last_pointer_dist: d_rel,\r\n\r\n        immediate: down,\r\n        // config: { velocity: vd, decay: true }\r\n      });\r\n\r\n      setControlRot({\r\n        theta: t + (a - lpa),\r\n        last_pointer_angle: a,\r\n\r\n        immediate: down,\r\n        // config: { velocity: va, decay: true }\r\n      })\r\n\r\n      return memo\r\n    },\r\n\r\n    onPinchEnd: ({ vdva: [vd, va] }) => {\r\n      // alert(`va = ${va}`)\r\n      // let scaleVd = (\r\n      //   vd/100 * (zoom.getValue() - minZoom.getValue()) * (maxZoom.getValue() - minZoom.getValue())\r\n      // );\r\n      let limit = 2\r\n      let newZoom = _.clamp(zoom.getValue() + vd, minZoom.getValue(), maxZoom.getValue());\r\n      let newVd = vd * (newZoom - 50); //_.clamp(vd/100, -limit, limit)\r\n      // let vd_norm = scale;\r\n      setNewVdDebug({\r\n        newVd_test: newVd\r\n      })\r\n      // setControlZoom({\r\n      //   zoom: newZoom, \r\n      //   // new velocity relative to proximity to min/max values\r\n      //   config: { velocity: newVd, decay: true }\r\n      // })\r\n      setControlRot({\r\n        // set theta so it's remembered next time\r\n        theta: va,\r\n\r\n        config: { velocity: va, decay: true }\r\n      })\r\n    },\r\n\r\n\r\n    onDragStart: ({ event }) => event.preventDefault(),\r\n    onDrag: ({ down, movement, velocity, direction, memo = pos.getValue() }) => {\r\n\r\n      // change according to this formula:\r\n      // move (x, y) in the opposite direction of drag (pan with cursor)\r\n      // divide by canvas size to scale appropriately\r\n      // multiply by 2 to correct scaling on viewport\r\n      //                                    current img size\r\n      // const [dx, dy] = [mx, my].map(a => - a);\r\n\r\n      // let [x, y, dx, dy, theta, zoom] = testTouchGrid;\r\n\r\n      setControlPos({\r\n        pos: addV(movement, memo),\r\n        immediate: down,\r\n        config: { velocity: scale(direction, velocity), decay: true }\r\n      })\r\n      return memo\r\n    },\r\n\r\n    onDragEnd: () => {\r\n      fillProc(globalCtx);\r\n      // setControlPos({\r\n      //   pos: addV(movement, memo), \r\n      //   config: { velocity: scale(direction, velocity), decay: true }\r\n      // })\r\n    },\r\n\r\n    // re-render when all animations come to a stand-still\r\n    \r\n\r\n  }, { event: { passive: false, capture: false }, domTarget: touchTarget })\r\n\r\n  useEffect(touchBind, [touchBind]);\r\n\r\n  \r\n  useEffect(() => {\r\n    const startCtx = canvasRef.current.getContext('2d');\r\n    console.log(`got canvas context: ${startCtx}`);\r\n    setGlobalCtx(startCtx); // globalCtx\r\n    fillProc(startCtx);\r\n  });\r\n\r\n  // const [ptime, setPtime] = useState(0);\r\n  // const [ptime2, setPtime2] = useState(0);\r\n  // const [ptime3, setPtime3] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"canvas loaded\");\r\n  //   const ctx = canvas.current.getContext(\"2d\");\r\n  //   setCtx(ctx);\r\n\r\n  //   // if(!down) {\r\n  //   //   clearCanvas(ctx)\r\n  //   //   fillProc(ctx)\r\n  //   // }\r\n  //   // canvas.current.ready(() => {\r\n  //   // fillProcFast(ctx);\r\n  // }, [])\r\n\r\n\r\n  return (\r\n    <div\r\n      className=\"fullSize\"\r\n      style={{\r\n        position: \"absolute\"\r\n      //   width: \"100%\",\r\n      //   height: \"100%\"\r\n      }} \r\n      // {...props}\r\n      ref={touchTarget}\r\n    >\r\n      <animated.canvas\r\n        id=\"mandelbrot\"\r\n        // className=\"fullSize\"\r\n        // width={window.innerWidth}\r\n        // height={window.innerHeight}\r\n        width={canvasSize}\r\n        height={canvasSize}\r\n        rotation={theta.interpolate(t => `${t}`)}\r\n        // alt={pos.interpolate((x, y) => x)}\r\n        style={{\r\n          width: canvasSize * zoomFactor,\r\n          height: canvasSize * zoomFactor,\r\n          // transform: theta.interpolate(t =>\r\n          //   `rotate(${t}deg)`\r\n          //   // ((360 + theta.value + dt) % 360)\r\n          //   // .toFixed(1)\r\n          // ),\r\n          // transform: interpolate([pos], ([x, y]) =>\r\n          //   `matrix3d(\r\n          //     1, 0, 0, 0,\r\n          //     0, 1, 0, 0,\r\n          //     0, 0, 1, 0,\r\n          //     0, 0, 0, 1\r\n          //   )`\r\n          // ),\r\n        }}\r\n        ref={canvasRef}\r\n        // onMouseUp={() => fillProc(ctx)}\r\n      />\r\n\r\n      {/* <animated.div\r\n        id=\"touch-test\"\r\n        style={{\r\n          position: 'absolute',\r\n          top: 0,\r\n          width: 500,\r\n          height: 500,\r\n          zIndex: -1,\r\n          // transform: theta_test.interpolate(t => \r\n          //   `rotateZ(${t}deg)`  \r\n          // )\r\n          transform: interpolate([pos, theta, zoom], ([x, y], t, z) =>\r\n            // transform: pos.interpolate((x, y) =>\r\n            `\r\n            translate(${x}px, ${y}px)\r\n            rotate(${t}deg)\r\n            scale(${z / 100})\r\n            `\r\n            // `matrix3d(\r\n            //   1, 0, 0, 0,\r\n            //   0, 1, 0, 0,\r\n            //   0, 0, 1, 0,\r\n            //   ${x}, ${y}, 0, 1\r\n            // )`\r\n          ),\r\n        }}\r\n      >\r\n        <div style={{\r\n          display: 'flex-column',\r\n          position: \"relative\",\r\n          // height: 0,\r\n        }}>\r\n          <img\r\n            src={\"https://upload.wikimedia.org/wikipedia/commons/2/21/Mandel_zoom_00_mandelbrot_set.jpg\"}\r\n            style={{\r\n              maxWidth: '100%',\r\n              maxHeight: '100%',\r\n              // position: 'relative',\r\n            }}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n      </animated.div> */}\r\n\r\n      <Card>\r\n        <Typography\r\n          style={{\r\n            zIndex: 1\r\n          }}>\r\n          theta: <animated.span>{theta.interpolate(t => t.toFixed(3))}</animated.span>,\r\n          zoom: <animated.span>{zoom.interpolate(z => z.toFixed(3))}</animated.span>,\r\n          vd: <animated.span>{newVd_test.interpolate(z => z.toFixed(3))}</animated.span>,\r\n          {/* x: <animated.span>{grid.dx.interpolate(d => (grid.x.value + d).toFixed(3))}</animated.span>, \r\n          y: <animated.span>{grid.dy.interpolate(d => (grid.y.value + d).toFixed(3))}</animated.span> */}\r\n        </Typography>\r\n      </Card>\r\n      <Button variant=\"contained\" color=\"primary\" onClick={e => {\r\n          let t0 = performance.now();\r\n          fillProc();\r\n          let t1 = performance.now()\r\n          console.log(`rendered in ${t1 - t0}`);\r\n          // setPtime(t1 - t0);\r\n        }}>render</Button>\r\n      {/* \r\n      <Button variant=\"contained\" color=\"primary\" onClick={e => {\r\n          let t0 = performance.now();\r\n          fillProcFast(ctx);\r\n          let t1 = performance.now()\r\n          setPtime2(t1 - t0);\r\n        }\r\n      }>{ptime2.toFixed(2)}</Button>\r\n      \r\n      <Button variant=\"contained\" color=\"secondary\" onClick={e => async function () {\r\n          let t0 = performance.now();\r\n          await fillProcAsync(ctx);\r\n          let t1 = performance.now()\r\n          setPtime3(t1 - t0);\r\n        }()\r\n      }>{ptime3.toFixed(2)}</Button>\r\n\r\n      <Button variant=\"outlined\" onClick={e => clearCanvas(ctx)}>clear</Button> */}\r\n\r\n    </div>\r\n  )\r\n\r\n\r\n}","import React, { Fragment, useState } from 'react';\r\nimport './App.css';\r\nimport { Grid } from '@material-ui/core';\r\nimport ZoomBar, { } from './components/ZoomBar';\r\nimport IterationSlider from './components/IterationSlider';\r\nimport RotationControl from './components/RotationControl';\r\n\r\nimport 'typeface-roboto';\r\nimport MandelbrotRenderer from './components/MandelbrotRenderer.jsx';\r\nimport { useSpring } from 'react-spring';\r\n\r\n\r\nfunction App() {\r\n\r\n  let defaultSpringConfig = {mass: 1, tension: 100 , friction: 200};\r\n\r\n  let maxIter = useState(45);\r\n\r\n  // render function passed from renderer\r\n  let [render, setRender] = useState();\r\n\r\n  // const changeRenderFunc = f => setRender(f);\r\n\r\n  const controlPos = useSpring(() => ({\r\n    pos: [0, 0],\r\n\r\n    onRest: () => {\r\n      // render the fractal\r\n      // render();\r\n    },\r\n    config: defaultSpringConfig,\r\n  }));\r\n\r\n  const controlRot = useSpring(() => ({\r\n    theta: 0,\r\n    last_pointer_angle: 0,\r\n    itheta: 0,\r\n\r\n    config: defaultSpringConfig,\r\n  }))\r\n\r\n  const controlZoom = useSpring(() => ({\r\n    zoom: 100,\r\n    last_pointer_dist: 0,\r\n\r\n    minZoom: 50,\r\n    maxZoom: 1000000,\r\n\r\n    config: {mass: 1, tension: 600 , friction: 50},\r\n  }))\r\n  \r\n\r\n  return (\r\n    <Fragment>\r\n      <MandelbrotRenderer\r\n        style={{\r\n          position: 'absolute',\r\n          zIndex: 0,\r\n        }}\r\n        pos={controlPos}\r\n        rot={controlRot}\r\n        zoom={controlZoom}\r\n        maxiter={maxIter}\r\n      />\r\n      <Grid\r\n        container\r\n        direction=\"column\"\r\n        justify=\"space-evenly\"\r\n        alignItems=\"flex-end\"\r\n      > \r\n        <ZoomBar \r\n          controller={controlZoom}\r\n        />\r\n\r\n        {/* <IterationSlider\r\n          maxIter={maxIter}\r\n          setMaxIter={setMaxIter}\r\n        /> */}\r\n\r\n        <RotationControl \r\n          className=\"Control\"\r\n          controller={controlRot} \r\n        />\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}