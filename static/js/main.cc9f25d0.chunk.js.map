{"version":3,"sources":["plus-icon.svg","minus-icon.svg","components/TransparentFab.js","components/ZoomBar.js","components/RotationControl.js","components/MandelbrotRenderer.jsx","App.js","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","plus_icon_ref2","react_default","a","createElement","d","plus_icon_SvgPlusIcon","_ref","svgRef","props","width","height","fillRule","clipRule","ref","ForwardRef","forwardRef","__webpack_require__","p","minus_icon_extends","minus_icon_objectWithoutProperties","minus_icon_objectWithoutPropertiesLoose","minus_icon_ref2","minus_icon_SvgMinusIcon","minus_icon_ForwardRef","TransparentFab","children","objectWithoutProperties","Fab","style","backgroundColor","boxShadow","ZoomBar","_props$controller","slicedToArray","controller","_props$controller$","zoom","minZoom","maxZoom","setZoom","zoomClick","dir","z","Math","sign","getValue","clamp","className","display","zIndex","Paper","borderRadius","maxHeight","margin","flexDirection","justifyContent","onClick","e","preventDefault","position","ZoomBarFab","diameter","zoomControl","_useSpring","useSpring","y","config","friction","tension","_useSpring2","set","_useState","useState","_useState2","gestureDown","setGestureDown","_useState3","_useState4","zoomMult","setZoomMult","React","useRef","callback","delay","savedCallback","useEffect","current","id","setInterval","clearInterval","useInterval","oldZoom","pow","bind","useDrag","_ref2","down","_ref2$movement","movement","event","first","last","clampY","abs","passive","capture","domTarget","web","div","transform","interpolate","concat","marginLeft","marginTop","top","left","Typography","color","span","toPrecision","RotationControl","theta","itheta","clampAngle","t","radToDeg","r","PI","elemProps","x","setElemCenter","_ref$xy","xy","_ref$initial","initial","ix","iy","_ref$previous","previous","_ref$memo","memo","cx","cy","atan2","newTheta","immediate","el","getBoundingClientRect","userSelect","toFixed","MandelbrotRenderer","touchTarget","canvas","maxI","setMaxI","dx","dy","grid","_props$pos","pos","setControlPos","_props$rot","rot","_props$rot$","last_pointer_angle","setControlRot","_props$zoom","_props$zoom$","last_pointer_dist","setControlZoom","_useSpring3","newVd_test","_useSpring4","setNewVdDebug","touchBind","useGesture","onPinchStart","onPinch","_ref2$offset","offset","_ref2$vdva","vdva","_ref2$memo","_memo","lpa","lpd","console","log","d_rel","curr_zoom","_","onPinchEnd","_ref3","_ref3$vdva","vd","va","newZoom","velocity","decay","onDragStart","_ref4","onDrag","_ref5","direction","_ref5$memo","addV","scale","onDragEnd","alt","value","canvasSize","_ref6","_ref7","_ref8","_ref9","src","maxWidth","Card","Slider","defaultValue","valueLabelDisplay","step","min","max","onChange","v","App","defaultSpringConfig","mass","controlPos","controlRot","controlZoom","react","Grid","container","justify","alignItems","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc9f25d0.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M11 11v-11h1v11h11v1h-11v11h-1v-11h-11v-1h11z\"\n});\n\nvar SvgPlusIcon = function SvgPlusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgPlusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/plus-icon.e4581c1a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"path\", {\n  d: \"M0 12v1h23v-1h-23z\"\n});\n\nvar SvgMinusIcon = function SvgMinusIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgMinusIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/minus-icon.8bace023.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { Fab } from '@material-ui/core';\n\nexport default function TransparentFab(props) {\n  const { children, ...p } = props;\n  return (\n      <Fab style={{\n        backgroundColor: \"transparent\",\n        boxShadow: \"none\",\n      }} {...p} >\n        {children}\n      </Fab>\n  )\n}","import React, { useState, useRef, useEffect } from 'react';\nimport { Paper, Fab, Typography } from '@material-ui/core';\nimport { ReactComponent as PlusIcon } from '../plus-icon.svg';\nimport { ReactComponent as MinusIcon } from '../minus-icon.svg';\nimport TransparentFab from \"./TransparentFab\";\nimport { useSpring, animated } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\nimport { clamp } from 'lodash';\n\n// https://upmostly.com/tutorials/setinterval-in-react-components-using-hooks\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n}\n\n\nexport default function ZoomBar(props) {\n  let fabSize = 70;\n  let maxHeight = 240;\n\n  // let [minZoom, maxZoom] = [0.01, 1000]\n  // const [zoom, setZoom] = useState(100) // useSpring(() => ({ zoom: 100 }));\n  \n  const [{ zoom, minZoom, maxZoom }, setZoom] = props.controller;\n  // const [{ zoom }, setZoom] = useSpring(() => ({ zoom: 100, config: {\n  //   friction: 50, \n  //   tension: 600,\n  // }}));\n\n  const zoomClick = dir => {\n    // zoom in a particular direction\n    const z = Math.sign(dir) * (1e-1 * zoom.getValue() + 1);\n    setZoom({ zoom: clamp(zoom.getValue() + z, minZoom.getValue(), maxZoom.getValue()) });\n  }\n\n  return (\n    <div \n    className=\"Control\"\n    style={{\n      width: fabSize,\n      display: \"flex\",\n      zIndex: 2,\n    }}>\n        <Paper style={{\n          borderRadius: \"5em\",\n          maxHeight: maxHeight,\n          margin: \"auto\",\n          display: \"flex\",\n          flexDirection: \"column-reverse\",\n          justifyContent: \"space-between\",\n        }}>\n          <TransparentFab onClick={e => {\n            e.preventDefault();\n            zoomClick(-1);\n          }}>\n            <MinusIcon />\n          </TransparentFab>\n          <div style={{\n            height: fabSize,\n            position: \"relative\",\n          }}>\n            <ZoomBarFab \n              diameter={fabSize} \n              zoom={zoom} \n              zoomControl={setZoom} \n              minZoom={minZoom}\n              maxZoom={maxZoom}\n            />\n          </div>\n          <TransparentFab onClick={e => {\n            e.preventDefault();\n            zoomClick(1);\n          }}>\n            <PlusIcon />\n          </TransparentFab>\n        </Paper>\n      </div>\n  )\n}\n\nexport function ZoomBarFab(props) {\n  const [{ y }, set] = useSpring(() => ({ y: 0, config: {\n     friction: 30, \n     tension: 400,\n    //  clamp: true,\n  }}))\n  \n  const [zoom, setZoom] = [props.zoom, props.zoomControl];\n  \n  const [gestureDown, setGestureDown] = useState(false);\n  const [zoomMult, setZoomMult] = useState(1);\n  const ref = React.useRef(null);\n  \n  const reset = () => {\n    setZoom({ zoom: 100 });\n  }\n\n  // determine speed to zoom at based on distance from center of the control\n  // updates zoom every 50ms based on the multiplier\n  useInterval(() => {\n    let oldZoom = zoom.getValue();\n    const z = clamp(oldZoom + 2 * 3e-5 * (oldZoom ** 0.8) * zoomMult, props.minZoom.getValue(), props.maxZoom.getValue())\n    setZoom({ zoom: z });\n    // increase zoom multiplier based on time elapsed\n    setZoomMult(zoomMult * 1.02);\n  }, gestureDown ? 100 : null);\n\n  const bind = useDrag(({ down, movement: [x, y], event, first, last }) => {\n    // only prevent default between first and last event\n    // first: prevents browser events\n    // last: allows buttons to activate and ripple\n    // event.preventDefault();\n    (!first && !last) && event.preventDefault();\n    \n    // tell zoom listener if drag is happening\n    setGestureDown(down);\n    \n    const limit = 80;\n    const clampY = clamp(y, -limit, limit)\n    \n    setZoomMult(down ? -Math.sign(clampY) * Math.abs(clampY / 8)**4 : 0)\n    set({ y: down ? clampY : 0 })\n    \n  }, { event: { passive: false, capture: false }, domTarget: ref })\n  \n  React.useEffect(bind, [bind])\n\n  return (\n    <animated.div \n      ref={ref}\n      style={{\n        transform: y.interpolate(y => `translateY(${y}px)`),\n        borderRadius: '50rem',\n        width: props.diameter,\n        height: props.diameter,\n\n        marginLeft: -props.diameter/2,\n        marginTop: -props.diameter/2,\n        top: \"50%\",\n        left: \"50%\",\n        position: \"absolute\",\n        zIndex: 1,\n      }} \n      >\n      <Fab \n        onClick={ e => {\n            // if click registered and fab not moved, trigger reset\n            if (y.getValue() === 0) { reset(); }\n          }\n        }\n        style={{\n          backgroundColor: \"#2196f3\",\n          width: props.diameter,\n          height: props.diameter,\n        }}>\n        <Typography style={{ color: \"#fff\" }}>\n          <animated.span>{zoom.interpolate(z => (z/100).toPrecision(5))}</animated.span>\n        </Typography>\n      </Fab>\n    </animated.div>\n  )\n}\n","import React, { useState, useEffect } from 'react';\nimport { Paper, Typography, Fab } from '@material-ui/core';\nimport { animated, useSpring } from 'react-spring';\nimport { useDrag } from 'react-use-gesture';\n\n\nexport default function RotationControl(props) {\n\n  const [{ theta, itheta }, set] = props.controller;\n\n  const clampAngle = t => ((t % 360) + 360) % 360;\n\n  const radToDeg = r => (360 * r) / (2 * Math.PI);\n\n  var elemProps = { x: 0, y: 0, width: 0, height: 0 };\n\n  const [elemCenter, setElemCenter] = useState([0, 0]);\n  // const [elemOffset, setElemOffset] = useState([0, 0]);\n\n  const outerSize = 160;\n  const innerSize = 70;\n\n  const bind = useDrag(({ xy: [x, y], initial: [ix, iy], previous: [px, py], first, last, memo = theta.getValue() }) => {\n\n    const [cx, cy] = [elemProps.x + elemProps.width / 2, elemProps.y + elemProps.height / 2];\n    if (first) {\n      // console.log(cx, cy)\n      setElemCenter([cx, cy]);\n      // setElemOffset([ix - cx, iy - cy]);\n      set({\n        theta: memo,\n        // remember initial angle (of the cursor)\n        itheta: radToDeg(Math.atan2(-(ix - cx), iy - cy)),\n      })\n      return memo;\n    }\n\n    const newTheta = radToDeg(Math.atan2(-(x - cx), y - cy));\n\n    // const d = (360 * newTheta / (Math.PI * 2)) // - itheta.getValue() - memo;\n\n    // set current angle, delta since last\n    set({\n      theta: memo + clampAngle(newTheta - itheta.getValue()),\n      // prevTheta: theta.value,\n      // xy: [x, y] \n      immediate: true,\n    });\n\n    return memo;\n  })\n\n  return (\n    <div \n    {...props}\n    style={{\n      width: outerSize,\n      height: outerSize,\n      display: 'flex',\n      position: 'relative',\n    }}>\n      {/* <animated.div style={{\n        width: 10,\n        height: 10,\n        backgroundColor: \"red\",\n        // transform: xy.interpolate((x, y) => `translate3d(${x - 5}px, ${y - 5}px, 0)`),\n        // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\n        position: \"fixed\",\n        top: 0,\n        left: 0,\n      }} /> */}\n      <Paper {...bind()}\n        ref={el => {\n          if (!el) return;\n          let r = el.getBoundingClientRect();\n          elemProps = { x: r.x, y: r.y, width: r.width, height: r.height }\n          // console.log(pos);\n        }}\n        style={{\n          borderRadius: '50rem',\n          width: outerSize,\n          height: outerSize,\n        }} >\n        {/* <div style={{\n          width: 10,\n          height: 10,\n          backgroundColor: \"aqua\",\n          transform: `translate3d(${- 5}px, ${- 5}px, 0)`,\n          // transform: xy.interpolate(xy => `translate(${x}, ${y})`),\n          position: \"absolute\",\n          top: \"50%\",\n          left: \"50%\",\n          zIndex: 2,\n        }} /> */}\n        <animated.div\n          style={{\n            transform: theta.interpolate(t =>\n              `rotate(${t}deg)`\n              // ((360 + theta.value + dt) % 360)\n              // .toFixed(1)\n            ),\n            width: \"100%\",\n            height: \"100%\",\n            display: \"flex\",\n            justifyContent: 'center',\n          }}>\n          <Typography style={{ userSelect: \"none\" }}>(N)</Typography>\n        </animated.div>\n      </Paper>\n\n      <Fab style={{\n        width: innerSize,\n        height: innerSize,\n        borderRadius: '50rem',\n        backgroundColor: \"#2196f3\",\n        display: 'flex',\n        position: 'absolute',\n        left: '50%',\n        top: '50%',\n        margin: -innerSize / 2,\n      }}>\n        {/* <CardContent > */}\n        <Typography style={{\n          color: \"#fff\",\n          margin: 'auto',\n        }}>\n          <animated.span>{\n            theta.interpolate(t => clampAngle(t).toFixed(0))\n            // dt.interpolate(dt =>\n            //   clampAngle(theta.value + dt)\n            //     .toFixed(1)\n            // )\n          }</animated.span>° \n          {/* (<animated.span>{revs.interpolate(r => r)}</animated.span>) */}\n        </Typography>\n      </Fab>\n    </div>\n  )\n  // }\n};","import React, { useRef, useEffect, useState } from \"react\";\nimport Complex from 'complex.js';\nimport _ from 'lodash';\nimport { Typography, Button, Slider, Card } from \"@material-ui/core\";\n\nimport { useDrag, addV, subV, useGesture } from \"react-use-gesture\";\nimport { add, scale, dist } from 'vec-la'\n\nimport { useSpring, animated, interpolate, config } from \"react-spring\";\n\n\nexport default function MandelbrotRenderer(props) {\n\n  const touchTarget = useRef(null);\n  const canvas = useRef(null);\n  const canvasSize = 200;\n  const zoomFactor = 3;\n\n  const bounds = {x: [-1.5, 0.5], y: [-1, 1]};\n  const [maxI, setMaxI] = useState(23);\n\n\n  // {x, y, dx, dy, theta, zoom}\n  const [grid, setGrid] = useSpring(() => ({\n    x: 0, \n    y: 0, \n\n    dx: 0,\n    dy: 0,\n\n    theta: 0,\n\n    zoom: 100,\n\n  }));\n\n  function linspace(start, stop, cardinality) {\n    let step = (stop - start) / cardinality;\n    return _.range(start, stop, step);\n  }\n\n  // const clearCanvas = ctx => {\n  //   let c = canvas.current;\n  //   ctx.clearRect(0, 0, c.width, c.height)\n  // }\n\n  // const fillDiag = ctx => {\n  //   ctx.fillStyle = \"#444\";\n\n  //   for (let i = 0; i < canvasSize; i++) {\n  //     console.log(\"square: \" + i);\n  //     ctx.fillRect(i, i, 1, 1);\n  //   }\n  // }\n\n  // const fillProcFast = ctx => {\n  //   let {x, y, zoom} = grid;\n  //   const [xl, xr] = [x.value-1, x.value+1];\n  //   const [yb, yt] = [y.value-1, y.value+1];\n\n  //   clearCanvas(ctx);\n  //   console.log(canvasSize / 2);\n  //   console.log(zoom);\n  //   console.log(yb);\n  //   // let l = linspace(yt, 0, canvasSize / 2)\n  //   // l.push(0);\n  //   // console.log(l);\n  //   ctx.fillStyle = \"#444\";\n\n  //   const lsRe = linspace(xl, xr, canvasSize);\n  //   const lsIm = linspace(yt, 0, canvasSize / 2);\n  //   lsIm.push(0);\n\n  //   lsRe.forEach((re, x) => {\n  //     // let l = \n  //     // l.push(0);\n  //     lsIm.forEach((im, y) => {\n  //       // y > 180 && console.log(y);\n  //       let c = Complex(re, im);\n  //       var z = Complex.ZERO;\n  //       var draw = true;\n  //       // console.log(z.toString());\n  //       for (let iter = 0; iter < maxI; iter++) {\n  //         z = z.mul(z).add(c);\n  //         if (z.abs() > 2) { draw = false; break; }\n  //       }\n  //       if (draw) {\n  //         ctx.fillRect(x, y, 1, 1);\n  //         if (y < canvasSize) {\n  //           ctx.fillRect(x, (canvasSize - y), 1, 1);\n  //         }\n  //       }\n  //     });\n  //   });\n  // };\n\n\n  // const fillProc = ctx => {\n  //   let {x, y, dx, dy} = grid;\n  //   const [xs, ys] = [x.value + dx.value, y.value + dy.value]\n  //   const [xl, xr] = [xs-1, xs+1];\n  //   const [yb, yt] = [ys-1, ys+1];\n  //   linspace(xl, xr, canvasSize).forEach((re, x) => {\n  //     linspace(yb, yt, canvasSize).forEach((im, y) => {\n  //       let c = Complex(re, im);\n  //       var z = Complex.ZERO;\n  //       var draw = true;\n  //       // console.log(z.toString());\n  //       for (let iter = 0; iter < maxI; iter++) {\n  //         z = z.mul(z).add(c);\n  //         if (z.abs() > 2.0) { draw = false; break; }\n  //       }\n  //       ctx.fillStyle = draw ? \"#000\" : \"#fff\";\n  //       ctx.fillRect(x, y, 1, 1);\n  //     });\n  //   });\n  // };\n\n  const fillProcAsync = ctx => {\n    console.log(\"entered fillproc\");\n    return new Promise(resolve => {\n      const [xl, xr] = bounds.x;\n      const [yb, yt] = bounds.y;\n      ctx.fillStyle = \"#ddd\";\n      linspace(xl, xr, canvasSize).forEach((re, x) => {\n        linspace(yb, yt, canvasSize).forEach((im, y) => {\n          let c = Complex(re, im);\n          var z = Complex.ZERO;\n          var draw = true;\n          // console.log(z.toString());\n          for (let iter = 0; iter < maxI; iter++) {\n            z = z.mul(z).add(c);\n            if (z.abs() > 2.0) { draw = false; break; }\n          }\n          if (draw) {\n            ctx.fillRect(x, y, 1, 1);\n          }\n        });\n      });\n      resolve();\n    })\n  };\n\n\n  const [{ pos }, setControlPos] = props.pos;\n\n  const [{ theta, last_pointer_angle }, setControlRot] = props.rot;\n\n  const [{ zoom, last_pointer_dist, minZoom, maxZoom }, setControlZoom] = props.zoom;\n\n  const [{ newVd_test }, setNewVdDebug] = useSpring(() => ({\n    newVd_test: 0,\n  }))\n  // touch target bind for testing\n  const touchBind = useGesture({\n\n    onPinchStart: ({ event }) => event.preventDefault(),\n    onPinch: ({ offset: [d, a], down, vdva: [vd, va], last, memo = [theta.getValue(), last_pointer_angle.getValue(), zoom.getValue(), last_pointer_dist.getValue()] }) => {\n      // alert(mx, my)\n      // let [theta, lpa] = memo\n      let [t, lpa, z, lpd] = memo;\n      console.log(d);\n      let d_rel = d/250;\n      let curr_zoom = zoom.getValue();\n\n      setControlZoom({\n        zoom: _.clamp(z + (d_rel - lpd)*Math.sign(curr_zoom)*Math.abs(curr_zoom**0.9), minZoom.getValue(), maxZoom.getValue()), \n        last_pointer_dist: d_rel,\n\n        immediate: down, \n        // config: { velocity: vd, decay: true }\n      });\n\n      setControlRot({ \n        theta: t + (a - lpa),\n        last_pointer_angle: a,\n\n        immediate: down, \n        // config: { velocity: va, decay: true }\n      })\n\n      return memo\n    },\n\n    onPinchEnd: ({ vdva: [vd, va] }) => {\n      // alert(`va = ${va}`)\n      // let scaleVd = (\n      //   vd/100 * (zoom.getValue() - minZoom.getValue()) * (maxZoom.getValue() - minZoom.getValue())\n      // );\n      let limit = 2\n      let newZoom = _.clamp(zoom.getValue() + vd, minZoom.getValue(), maxZoom.getValue());\n      let newVd = vd * (newZoom - 50); //_.clamp(vd/100, -limit, limit)\n      // let vd_norm = scale;\n      setNewVdDebug({\n        newVd_test: newVd\n      })\n      // setControlZoom({\n      //   zoom: newZoom, \n      //   // new velocity relative to proximity to min/max values\n      //   config: { velocity: newVd, decay: true }\n      // })\n      setControlRot({\n        // set theta so it's remembered next time\n        theta: va,\n\n        config: { velocity: va, decay: true }\n      })\n    },\n\n\n    onDragStart: ({event}) => event.preventDefault(),\n    onDrag: ({ down, movement, velocity, direction, memo = pos.getValue()}) => {\n  \n      // change according to this formula:\n      // move (x, y) in the opposite direction of drag (pan with cursor)\n      // divide by canvas size to scale appropriately\n      // multiply by 2 to correct scaling on viewport\n      //                                    current img size\n      // const [dx, dy] = [mx, my].map(a => - a);\n      \n      // let [x, y, dx, dy, theta, zoom] = testTouchGrid;\n  \n      setControlPos({ \n        pos: addV(movement, memo), \n        immediate: down, \n        config: { velocity: scale(direction, velocity), decay: true }\n      })\n      return memo\n    },\n\n    onDragEnd: () => {\n      // setControlPos({\n      //   pos: addV(movement, memo), \n      //   config: { velocity: scale(direction, velocity), decay: true }\n      // })\n    },\n\n  }, { event: { passive: false, capture: false }, domTarget: touchTarget })\n  \n  useEffect(touchBind, [touchBind]);\n\n  // const [ptime, setPtime] = useState(0);\n  // const [ptime2, setPtime2] = useState(0);\n  // const [ptime3, setPtime3] = useState(0);\n\n  // useEffect(() => {\n  //   // console.log(\"canvas loaded\");\n  //   const ctx = canvas.current.getContext(\"2d\");\n  //   setCtx(ctx);\n    \n  //   // if(!down) {\n  //   //   clearCanvas(ctx)\n  //   //   fillProc(ctx)\n  //   // }\n  //   // canvas.current.ready(() => {\n  //   // fillProcFast(ctx);\n  // }, [])\n\n\n  return (\n    <div \n      className=\"fullSize\" \n      // style={{\n      //   width: \"100%\",\n      //   height: \"100%\"\n      // }} \n      {...props}\n      ref={touchTarget}\n    >\n      <animated.canvas \n        id=\"mandelbrot\" \n        // className=\"fullSize\"\n        // width={window.innerWidth}\n        // height={window.innerHeight}\n        width={canvasSize}\n        height={canvasSize}\n        alt={grid.x.interpolate(d => grid.x.value + d)}\n        style= {{\n          width: canvasSize * zoomFactor,\n          height: canvasSize * zoomFactor,\n          transform: interpolate([pos], ([x, y]) =>\n            `matrix3d(\n              1, 0, 0, 0,\n              0, 1, 0, 0,\n              0, 0, 1, 0,\n              0, 0, 0, 1\n            )`\n          ),\n        }}\n        ref={canvas} \n      />\n\n      <animated.div\n        id=\"touch-test\"\n        style={{\n          position: 'absolute',\n          top: 0,\n          width: 500,\n          height: 500,\n          zIndex: -1,\n          // transform: theta_test.interpolate(t => \n          //   `rotateZ(${t}deg)`  \n          // )\n          transform: interpolate([pos, theta, zoom], ([x, y], t, z) =>\n          // transform: pos.interpolate((x, y) =>\n            `\n            translate(${x}px, ${y}px)\n            rotate(${t}deg)\n            scale(${z/100})\n            `\n            // `matrix3d(\n            //   1, 0, 0, 0,\n            //   0, 1, 0, 0,\n            //   0, 0, 1, 0,\n            //   ${x}, ${y}, 0, 1\n            // )`\n          ),\n        }}\n      >\n        <div style={{\n          display: 'flex-column',\n          position: \"relative\",\n          // height: 0,\n        }}>\n          <Typography>\n            pos: <animated.span>{pos.interpolate((x, y) => `x=${x.toFixed(3)}, y=${y.toFixed(3)}`)}</animated.span>; \n            theta = <animated.span>{theta.interpolate(t => t.toFixed(3))}</animated.span>,\n            {/* zoom = {zoom_test.getValue()} */}\n          </Typography>\n          <img \n            src={\"https://upload.wikimedia.org/wikipedia/commons/2/21/Mandel_zoom_00_mandelbrot_set.jpg\"}\n            style={{\n              maxWidth: '100%',\n              maxHeight: '100%',\n              // position: 'relative',\n            }}\n          />\n        </div>\n      </animated.div>\n\n      <Card>\n        <Typography \n          style ={{\n            zIndex: 1\n          }}>\n          theta: <animated.span>{theta.interpolate(t => t.toFixed(3))}</animated.span>, \n          zoom: <animated.span>{zoom.interpolate(z => z.toFixed(3))}</animated.span>, \n          vd: <animated.span>{newVd_test.interpolate(z => z.toFixed(3))}</animated.span>,\n          {/* x: <animated.span>{grid.dx.interpolate(d => (grid.x.value + d).toFixed(3))}</animated.span>, \n          y: <animated.span>{grid.dy.interpolate(d => (grid.y.value + d).toFixed(3))}</animated.span> */}\n        </Typography>\n      </Card>\n      {/* <Button variant=\"contained\" color=\"primary\" onClick={e => {\n          let t0 = performance.now();\n          fillProc(ctx);\n          let t1 = performance.now()\n          setPtime(t1 - t0);\n        }}>{ptime.toFixed(2)}</Button>\n\n      <Button variant=\"contained\" color=\"primary\" onClick={e => {\n          let t0 = performance.now();\n          fillProcFast(ctx);\n          let t1 = performance.now()\n          setPtime2(t1 - t0);\n        }\n      }>{ptime2.toFixed(2)}</Button>\n      \n      <Button variant=\"contained\" color=\"secondary\" onClick={e => async function () {\n          let t0 = performance.now();\n          await fillProcAsync(ctx);\n          let t1 = performance.now()\n          setPtime3(t1 - t0);\n        }()\n      }>{ptime3.toFixed(2)}</Button>\n\n      <Button variant=\"outlined\" onClick={e => clearCanvas(ctx)}>clear</Button> */}\n\n      <hr />\n\n      <Slider\n        defaultValue={maxI}\n        valueLabelDisplay=\"on\"\n        step={1}\n        min={1}\n        max={100}\n        style={{ \n          width: 200,\n          margin: 30,\n        }}\n        onChange={ (e, v) => setMaxI(v) }\n      />\n    </div>\n  )\n}","import React, { Fragment } from 'react';\nimport './App.css';\nimport { Grid, Typography, Container } from '@material-ui/core';\nimport ZoomBar, { } from './components/ZoomBar';\nimport RotationControl from './components/RotationControl';\n\nimport 'typeface-roboto';\nimport MandelbrotRenderer from './components/MandelbrotRenderer.jsx';\nimport { useSpring } from 'react-spring';\n\n\nfunction App() {\n\n  let defaultSpringConfig = {mass: 1, tension: 100 , friction: 200};\n\n  const controlPos = useSpring(() => ({\n    pos: [0, 0],\n\n    config: defaultSpringConfig,\n  }));\n\n  const controlRot = useSpring(() => ({\n    theta: 0,\n    last_pointer_angle: 0,\n    itheta: 0,\n\n    config: defaultSpringConfig,\n  }))\n\n  const controlZoom = useSpring(() => ({\n    zoom: 100,\n    last_pointer_dist: 0,\n\n    minZoom: 50,\n    maxZoom: 1000000,\n\n    config: {mass: 1, tension: 600 , friction: 50},\n  }))\n  \n\n  return (\n    <Fragment>\n      <MandelbrotRenderer\n        style={{\n          position: 'absolute',\n          zIndex: 0,\n        }}\n        pos={controlPos}\n        rot={controlRot}\n        zoom={controlZoom}\n      />\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-evenly\"\n        alignItems=\"flex-end\"\n      > \n        <ZoomBar \n          controller={controlZoom}\n        />\n\n\n        <RotationControl \n          className=\"Control\"\n          controller={controlRot} \n        />\n      </Grid>\n    </Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}